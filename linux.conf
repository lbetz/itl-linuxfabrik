object CheckCommand "linuxfabrik/about-me" {
    command = [ "/usr/bin/sudo", LinuxfabrikPluginDir + "/about-me" ]
    timeout = 30s
    arguments += {
        "--public-ip-url" = {
            value = "$about_me_public_ip_url$"
            description = "If you want this check to return the public IP address, specify one ore more comma-separated URLs to 'what is my ip' online services. For example: 'https://ipv4.icanhazip.com,https://ipecho.net/plain,https://ipinfo.io/ip' (these examples are located in the United States). Default: None"
        }
        "--tags" = {
            set_if = "$about_me_tags$"
            description = "Guess a list of tags to apply in Icinga Director (Linuxfabrik Basket Config)."
        }
    }
}

object CheckCommand "linuxfabrik/apache-httpd-status" {
    command = [ LinuxfabrikPluginDir + "/apache-httpd-status" ]
    timeout = 10s
    arguments += {
        "--always-ok" = {
            set_if = "$apache_httpd_status_always_ok$"
            description = "Always returns OK."
        }
        "--critical" = "$apache_httpd_status_critical$"
        "--insecure" = {
            set_if = "$apache_httpd_status_insecure$"
        }
        "--url" = "$apache_httpd_status_url$"
        "--warning" = "$apache_httpd_status_warning$"
    }
}

object CheckCommand "linuxfabrik/apache-httpd-version" {
    command = [ LinuxfabrikPluginDir + "/apache-httpd-version" ]
    timeout = 10s
    arguments += {
        "--always-ok" = {
            set_if = "$apache_httpd_version_always_ok$"
            description = "Always returns OK."
        }
        "--check-major" = {
            set_if = "$apache_httpd_version_check_major$"
        }
        "--check-minor" = {
            set_if = "$apache_httpd_version_check_minor$"
        }
        "--check-patch" = {
            set_if = "$apache_httpd_version_check_patch$"
        }
        "--offset-eol" = "$apache_httpd_version_offset_eol$"
    }
}

object CheckCommand "linuxfabrik/apache-solr-version" {
    command = [ LinuxfabrikPluginDir + "/apache-solr-version" ]
    timeout = 10s
    arguments += {
        "--always-ok" = {
            set_if = "$apache_solr_version_always_ok$"
            description = "Always returns OK."
        }
        "--check-major" = {
            set_if = "$apache_solr_version_check_major$"
        }
        "--check-minor" = {
            set_if = "$apache_solr_version_check_minor$"
        }
        "--check-patch" = {
            set_if = "$apache_solr_version_check_patch$"
        }
        "--offset-eol" = "$apache_solr_version_offset_eol$"
        "--path" = "$apache_solr_version_path$"
    }
}

object CheckCommand "linuxfabrik/axenita-stats" {
    command = [ LinuxfabrikPluginDir + "/axenita-stats" ]
    timeout = 10s
    arguments += {
        "--always-ok" = {
            set_if = "$axenita_stats_always_ok$"
            description = "Always returns OK."
        }
        "--timeout" = "$axenita_stats_timeout$"
        "--url" = "$axenita_stats_url$"
    }
}

object CheckCommand "linuxfabrik/borgbackup" {
    command = [ "/usr/bin/sudo", LinuxfabrikPluginDir + "/borgbackup" ]
    timeout = 10s
    arguments += {
        "--critical" = "$borgbackup_critical$"
        "--warning" = "$borgbackup_warning$"
    }
}

object CheckCommand "linuxfabrik/by-ssh" {
    command = [ LinuxfabrikPluginDir + "/by-ssh" ]
    timeout = 10s
    arguments += {
        "--always-ok" = {
            set_if = "$by_ssh_always_ok$"
            description = "Always returns OK."
        }
        "--command" = {
            value = "$by_ssh_command$"
            description = "SSH: Command that will be executed on the remote host."
        }
        "--configfile" = {
            value = "$by_ssh_configfile$"
            description = "SSH: Specifies an alternative per-user configuration file. If a configuration file is given on the command line, the system-wide configuration file (`/etc/ssh/ssh_config`) will be ignored. The default for the per-user configuration file is `~/.ssh/config`. If set to `none`, no configuration files will be read."
        }
        "--critical-pattern" = {
            repeat_key = true
            value = "$by_ssh_critical_pattern$"
            description = "Any line matching this pattern (case-insensitive) will count as a critical. Can be specified multiple times."
        }
        "--critical-regex" = {
            repeat_key = true
            value = "$by_ssh_critical_regex$"
            description = "Any line matching this python regex (case-insensitive) will count as a critical. Can be specified multiple times."
        }
        "--disable-pseudo-terminal" = {
            set_if = "$by_ssh_disable_pseudo_terminal$"
            description = "SSH: Disable pseudo-terminal allocation."
        }
        "--hostname" = {
            value = "$by_ssh_hostname$"
            description = "SSH: Hostname"
        }
        "--identity" = {
            repeat_key = true
            value = "$by_ssh_identity$"
            description = "SSH: Selects a file from which the identity (private key) for public key authentication is read. You can also specify a public key file to use the corresponding private key that is loaded in ssh-agent(1) when the private key file is not present locally. The default is `~/.ssh/id_dsa`, `~/.ssh/id_ecdsa`, `~/.ssh/id_ecdsa_sk`, `~/.ssh/id_ed25519`, `~/.ssh/id_ed25519_sk` and `~/.ssh/id_rsa`. Identity files may also be specified on a per-host basis in the configuration file. It is possible to have multiple --identity options (and multiple identities specified in configuration files). If no certificates have been explicitly specified by the CertificateFile directive, ssh will also try to load certificate information from the filename obtained by appending `-cert.pub` to identity filenames."
        }
        "--ipv4" = {
            set_if = "$by_ssh_ipv4$"
            description = "SSH: Forces ssh to use IPv4 addresses only."
        }
        "--ipv6" = {
            set_if = "$by_ssh_ipv6$"
            description = "SSH: Forces ssh to use IPv6 addresses only."
        }
        "--password" = {
            value = "$by_ssh_password$"
            description = "SH: Password authentication. NOT RECOMMENDED. Requires `sshpass`. If you need to use password-based SSH login, run this plugin only on trusted hosts. `ps` will expose the SSH password."
        }
        "--port" = {
            value = "$by_ssh_port$"
            description = "SSH: Port to connect to on the remote host. This can be specified on a per-host basis in the configuration file. Default: 22"
        }
        "--quiet" = {
            set_if = "$by_ssh_quiet$"
            description = "SSH: Quiet mode. Causes most warning and diagnostic messages to be suppressed."
        }
        "--severity-retc" = {
            value = "$by_ssh_severity_retc$"
            description = "Severity (ok,warn,crit,unknown) for alerting if there is a return code != 0. Default: warn"
        }
        "--severity-stderr" = {
            value = "$by_ssh_severity_stderr$"
            description = "Severity (ok,warn,crit,unknown) for alerting if there is an output on STDERR. Default: warn"
        }
        "--severity-stdout" = {
            value = "$by_ssh_severity_stdout$"
            description = "Severity (ok,warn,crit,unknown) for alerting if there is an output on STDOUT. Default: ok"
        }
        "--severity-timeout" = {
            value = "$by_ssh_severity_timeout$"
            description = "Severity (ok,warn,crit,unknown) on connection problems. Default: unknown"
        }
        "--shell" = {
            set_if = "$by_ssh_shell$"
            description = "If specified, allows you to expand environment variables and file globs according to the shell's usual mechanism, which can be a security hazard. Default: You just can run simple shell command without globs, pipes etc."
        }
        "--skip-stderr" = {
            value = "$by_ssh_skip_stderr$"
            description = "Ignore all (0) or first n lines on STDERR. Default: -1 (no ignore)"
        }
        "--skip-stdout" = {
            value = "$by_ssh_skip_stdout$"
            description = "Ignore all (0) or first n lines on STDOUT. Default: -1 (no ignore)"
        }
        "--ssh-option" = {
            repeat_key = true
            value = "$by_ssh_ssh_option$"
            description = "SSH: Can be used to give options in the format used in the configuration file. This is useful for specifying options for which there is no separate command-line flag. For full details of the options, and their possible values, see ssh_config(5). Can be specified multiple times."
        }
        "--username" = {
            value = "$by_ssh_username$"
            description = "SSH: Username. Default: root"
        }
        "--warning-pattern" = {
            repeat_key = true
            value = "$by_ssh_warning_pattern$"
            description = "Any line matching this pattern (case-insensitive) will count as a warning. Can be specified multiple times."
        }
        "--warning-regex" = {
            repeat_key = true
            value = "$by_ssh_warning_regex$"
            description = "Any line matching this python regex (case-insensitive) will count as a warning. Can be specified multiple times."
        }
    }
}

object CheckCommand "linuxfabrik/cometsystem" {
    command = [ LinuxfabrikPluginDir + "/cometsystem" ]
    timeout = 10s
    arguments += {
        "--always-ok" = {
            set_if = "$cometsystem_always_ok$"
            description = "Always returns OK."
        }
        "--insecure" = {
            set_if = "$cometsystem_insecure$"
        }
        "--no-proxy" = {
            set_if = "$cometsystem_no_proxy$"
        }
        "--severity" = {
            repeat_key = true
            value = "$cometsystem_severity$"
        }
        "--timeout" = "$cometsystem_timeout$"
        "--url" = "$cometsystem_url$"
    }
}

object CheckCommand "linuxfabrik/countdown" {
    command = [ LinuxfabrikPluginDir + "/countdown" ]
    timeout = 10s
    arguments += {
        "--always-ok" = {
            set_if = "$countdown_always_ok$"
            description = "Always returns OK."
        }
        "--input" = {
            repeat_key = true
            value = "$countdown_input$"
        }
    }
}

object CheckCommand "linuxfabrik/cpu-usage" {
    command = [ LinuxfabrikPluginDir + "/cpu-usage" ]
    timeout = 10s
    arguments += {
        "--always-ok" = {
            set_if = "$cpu_usage_always_ok$"
            description = "Always returns OK."
        }
        "--count" = {
            value = "$cpu_usage_count$"
            description = "Number of times the value has to be above the given thresholds. Default: 5"
        }
        "--critical" = {
            value = "$cpu_usage_critical$"
            description = "Set the critical threshold CPU Usage Percentage. Default: 90"
        }
        "--warning" = {
            value = "$cpu_usage_warning$"
            description = "Set the warning threshold CPU Usage Percentage. Default: 80"
        }
    }
}

object CheckCommand "linuxfabrik/crypto-policy" {
    command = [ LinuxfabrikPluginDir + "/crypto-policy" ]
    timeout = 10s
    arguments += {
        "--always-ok" = {
            set_if = "$crypto_policy_always_ok$"
            description = "Always returns OK."
        }
        "--policy" = "$crypto_policy_policy$"
    }
}

object CheckCommand "linuxfabrik/csv-values" {
    command = [ LinuxfabrikPluginDir + "/csv-values" ]
    timeout = 30s
    arguments += {
        "--always-ok" = {
            set_if = "$csv_values_always_ok$"
            description = "Always returns OK."
        }
        "--chunksize" = "$csv_values_chunksize$"
        "--columns-query" = "$csv_values_columns_query$"
        "--critical" = "$csv_values_critical$"
        "--critical-query" = "$csv_values_critical_query$"
        "--delimiter" = "$csv_values_delimiter$"
        "--filename" = "$csv_values_filename$"
        "--insecure" = {
            set_if = "$csv_values_insecure$"
        }
        "--newline" = "$csv_values_newline$"
        "--no-proxy" = {
            set_if = "$csv_values_no_proxy$"
        }
        "--password" = "$csv_values_password$"
        "--quotechar" = "$csv_values_quotechar$"
        "--timeout" = "$csv_values_timeout$"
        "--url" = "$csv_values_url$"
        "--username" = "$csv_values_username$"
        "--warning" = "$csv_values_warning$"
        "--warning-query" = "$csv_values_warning_query$"
    }
}

object CheckCommand "linuxfabrik/deb-lastactivity" {
    command = [ LinuxfabrikPluginDir + "/deb-lastactivity" ]
    timeout = 1m
    arguments += {
        "--critical" = "$deb_lastactivity_critical$"
        "--warning" = "$deb_lastactivity_warning$"
    }
}

object CheckCommand "linuxfabrik/dhcp-scope-usage" {
    command = [ LinuxfabrikPluginDir + "/dhcp-scope-usage" ]
    timeout = 30s
    arguments += {
        "--always-ok" = {
            set_if = "$dhcp_scope_usage_always_ok$"
            description = "Always returns OK."
        }
        "--critical" = "$dhcp_scope_usage_critical$"
        "--hostname" = "$dhcp_scope_usage_hostname$"
        "--warning" = "$dhcp_scope_usage_warning$"
        "--winrm-domain" = "$dhcp_scope_usage_winrm_domain$"
        "--winrm-hostname" = "$dhcp_scope_usage_winrm_hostname$"
        "--winrm-password" = "$dhcp_scope_usage_winrm_password$"
        "--winrm-transport" = "$dhcp_scope_usage_winrm_transport$"
        "--winrm-username" = "$dhcp_scope_usage_winrm_username$"
    }
}

object CheckCommand "linuxfabrik/diacos" {
    command = [ LinuxfabrikPluginDir + "/diacos" ]
    timeout = 30s
    arguments += {
        "--always-ok" = {
            set_if = "$diacos_always_ok$"
            description = "Always returns OK."
        }
        "--critical" = "$diacos_critical$"
        "--login-computer" = "$diacos_login_computer$"
        "--login-ip" = "$diacos_login_ip$"
        "--login-licence" = "$diacos_login_licence$"
        "--login-name" = "$diacos_login_name$"
        "--no-proxy" = {
            set_if = "$diacos_no_proxy$"
        }
        "--search-concept-filter" = "$diacos_search_concept_filter$"
        "--search-country" = "$diacos_search_country$"
        "--search-format" = "$diacos_search_format$"
        "--search-searchtext" = "$diacos_search_searchtext$"
        "--search-sort-mode" = "$diacos_search_sort_mode$"
        "--search-year" = "$diacos_search_year$"
        "--timeout" = "$diacos_timeout$"
        "--url" = "$diacos_url$"
        "--warning" = "$diacos_warning$"
    }
}

object CheckCommand "linuxfabrik/disk-io" {
    command = [ LinuxfabrikPluginDir + "/disk-io" ]
    timeout = 10s
    arguments += {
        "--always-ok" = {
            set_if = "$disk_io_always_ok$"
            description = "Always returns OK."
        }
        "--count" = {
            value = "$disk_io_count$"
            description = "Number of times the value has to be above the given thresholds. Default: 5"
        }
        "--critical" = {
            value = "$disk_io_critical$"
            description = "Set the CRIT threshold for disk I/O read/write rate over the entire period as a percentage of the maximum disk I/O rate. Default: >= 90"
        }
        "--ignore" = {
            repeat_key = true
            value = "$disk_io_ignore$"
            description = "Ignore disk names starting with a string like 'sr' (repeating). Default: ['sr', 'loop', 'zram']"
        }
        "--warning" = {
            value = "$disk_io_warning$"
            description = "et the CRIT threshold for disk I/O read/write rate over the entire period as a percentage of the maximum disk I/O rate. Default: >= 80"
        }
    }
}

object CheckCommand "linuxfabrik/disk-smart" {
    command = [ "/usr/bin/sudo", LinuxfabrikPluginDir + "/disk-smart" ]
    timeout = 10s
    arguments += {
        "--always-ok" = {
            set_if = "$disk_smart_always_ok$"
            description = "Always returns OK."
        }
        "--full" = {
            set_if = "$disk_smart_full$"
        }
        "--ignore" = "$disk_smart_ignore$"
    }
}

object CheckCommand "linuxfabrik/disk-usage" {
    command = [ "/usr/bin/sudo", LinuxfabrikPluginDir + "/disk-usage" ]
    timeout = 10s
    arguments += {
        "--always-ok" = {
            set_if = "$disk_usage_always_ok$"
            description = "Always returns OK."
        }
        "--critical" = {
            value = "$disk_usage_critical$"
            description = "Critical threshold, of the form '<number>[unit][method]', where unit is one of `%|K|M|G|T|P` and method is one of `USED|FREE`. If 'unit' is omitted, `%` is assumed. `K` means `kibibyte` etc. If 'method' is omitted, `USED` is assumed. `USED` means 'number ore more', `FREE` means 'number or less'. Examples: `95` = alert at 95% usage or more. `9.5M` = alert when 9.5 MiB or more is used. Other self-explanatory examples are `95%USED`, `5%FREE`, `9.5GFREE`, `1400GUSED`. Default: 95%USED"
        }
        "--exclude-pattern" = {
            repeat_key = true
            value = "$disk_usage_exclude_pattern$"
            description = "Any line matching this pattern (case-insensitive) will count as a exclude. The mountpoint is excluded if it contains the specified value. Example: 'boot' excludes '/boot' as well as 'boot/efi'. Can be specified multiple times. On Windows, use drive letters without backslash ('Y:' or 'Y'). Includes are matched before excludes."
        }
        "--exclude-regex" = {
            repeat_key = true
            value = "$disk_usage_exclude_regex$"
            description = "Any line matching this python regex (case-insensitive) will count as a exclude. Can be specified multiple times. On Windows, use drive letters without backslash ('Y:' or 'Y'). Includes are matched before excludes."
        }
        "--include-pattern" = {
            repeat_key = true
            value = "$disk_usage_include_pattern$"
            description = "Any line matching this pattern (case-insensitive) will count as a include. The mountpoint is included if it contains the specified value. Example: 'boot' includes '/boot' as well as '/boot/efi'. Can be specified multiple times. On Windows, use drive letters without backslash ('Y:' or 'Y'). Includes are matched before excludes."
        }
        "--include-regex" = {
            repeat_key = true
            value = "$disk_usage_include_regex$"
            description = "Any line matching this python regex (case-insensitive) will count as a include. Can be specified multiple times. On Windows, use drive letters without backslash ('Y:' or 'Y'). Includes are matched before excludes."
        }
        "--perfdata-regex" = {
            repeat_key = true
            value = "$disk_usage_perfdata_regex$"
            description = "Only print perfdata keys matching this python regex. For a list of perfdata keys, have a look at the README and run this plugin. Can be specified multiple times."
        }
        "--warning" = {
            value = "$disk_usage_warning$"
            description = "Warning threshold, of the form '<number>[unit][method]', where unit is one of `%|K|M|G|T|P` and method is one of `USED|FREE`. If 'unit' is omitted, `%` is assumed. `K` means `kibibyte` etc. If 'method' is omitted, `USED` is assumed. `USED` means 'number ore more', `FREE` means 'number or less'. Examples: `95` = alert at 95% usage. `9.5M` = alert when 9.5 MiB is used. Other self-explanatory examples are `95%USED`, `5%FREE`, `9.5GFREE`, `1400GUSED`. Default: 90%USED"
        }
    }
}

object CheckCommand "linuxfabrik/dmesg" {
    command = [ LinuxfabrikPluginDir + "/dmesg" ]
    timeout = 10s
    arguments += {
        "--always-ok" = {
            set_if = "$dmesg_always_ok$"
            description = "Always returns OK."
        }
        "--ignore" = {
            repeat_key = true
            value = "$dmesg_ignore$"
        }
        "--severity" = "$dmesg_severity$"
    }
}

object CheckCommand "linuxfabrik/dmesg-sudo" {
    import "linuxfabrik/dmesg"

    command = [ "/usr/bin/sudo", LinuxfabrikPluginDir + "/dmesg" ]
}

object CheckCommand "linuxfabrik/dns" {
    command = [ LinuxfabrikPluginDir + "/dns" ]
    timeout = 10s
    arguments += {
        "--always-ok" = {
            set_if = "$dns_always_ok$"
            description = "Always returns OK."
        }
        "--critical" = {
            value = "$dns_critical$"
            description = "Return critical if elapsed time in ms exceeds value. Default: None"
        }
        "--hostname" = {
            value = "$dns_hostname$"
            description = "The host or ip address to check. Default: localhost"
        }
        "--port" = {
            value = "$dns_port$"
            description = "The port number. Default: 53"
        }
        "--type" = {
            value = "$dns_type$"
            description = "Connection (udp,udp6,tcp,tcp6) type. Can be optionally specified in order to narrow the list of addresses returned."
        }
        "--warning" = {
            value = "$dns_warning$"
            description = "Return warning if elapsed time in ms exceeds value. Default: None"
        }
    }
}

object CheckCommand "linuxfabrik/docker-info" {
    command = [
        "/usr/bin/sudo",
        LinuxfabrikPluginDir + "/docker-info"
    ]
    timeout = 10s
    arguments += {
        "--always-ok" = {
            set_if = "$docker_info_always_ok$"
            description = "Always returns OK."
        }
    }
}

object CheckCommand "linuxfabrik/docker-stats" {
    command = [
        "/usr/bin/sudo",
        LinuxfabrikPluginDir + "/docker-stats"
    ]
    timeout = 20s
    arguments += {
        "--always-ok" = {
            set_if = "$docker_stats_always_ok$"
            description = "Always returns OK."
        }
        "--count" = "$docker_stats_count$"
        "--critical-cpu" = "$docker_stats_critical_cpu$"
        "--critical-mem" = "$docker_stats_critical_mem$"
        "--full-name" = {
            set_if = "$docker_stats_full_name$"
        }
        "--warning-cpu" = "$docker_stats_warning_cpu$"
        "--warning-mem" = "$docker_stats_warning_mem$"
    }
}

object CheckCommand "linuxfabrik/fail2ban" {
    command = [ "/usr/bin/sudo", LinuxfabrikPluginDir + "/fail2ban" ]
    timeout = 10s
    arguments += {
        "--always-ok" = {
            set_if = "$fail2ban_always_ok$"
            description = "Always returns OK."
        }
        "--critical" = "$fail2ban_critical$"
        "--warning" = "$fail2ban_warning$"
    }
}

object CheckCommand "linuxfabrik/fedora-version" {
    command = [ LinuxfabrikPluginDir + "/fedora-version" ]
    timeout = 10s
    arguments += {
        "--always-ok" = {
            set_if = "$fedora_version_always_ok$"
            description = "Always returns OK."
        }
        "--notify-new-major" = {
            set_if = "$fedora_version_notify_new_major$"
        }
        "--notify-new-minor" = {
            set_if = "$fedora_version_notify_new_minor$"
        }
        "--notify-new-patch" = {
            set_if = "$fedora_version_notify_new_patch$"
        }
        "--offset-eol" = "$fedora_version_offset_eol$"
    }
}

object CheckCommand "linuxfabrik/feed" {
    command = [ LinuxfabrikPluginDir + "/feed" ]
    timeout = 15s
    arguments += {
        "--always-ok" = {
            set_if = "$feed_always_ok$"
            description = "Always returns OK."
        }
        "--icinga-callback" = {
            set_if = "$feed_icinga_callback$"
        }
        "--icinga-password" = "$feed_icinga_password$"
        "--icinga-service-name" = "$feed_icinga_service_name$"
        "--icinga-url" = "$feed_icinga_url$"
        "--icinga-username" = "$feed_icinga_username$"
        "--insecure" = {
            set_if = "$feed_insecure$"
        }
        "--latest" = {
            set_if = "$feed_latest$"
        }
        "--no-proxy" = {
            set_if = "$feed_no_proxy$"
        }
        "--no-summary" = {
            set_if = "$feed_no_summary$"
        }
        "--timeout" = "$feed_timeout$"
        "--url" = "$feed_url$"
        "--warning" = "$feed_warning$"
    }
}

object CheckCommand "linuxfabrik/file-age" {
    command = [ LinuxfabrikPluginDir + "/file-age" ]
    timeout = 10s
    arguments += {
        "--always-ok" = {
            set_if = "$file_age_always_ok$"
            description = "Always returns OK."
        }
        "--critical" = "$file_age_critical$"
        "--critical-count" = "$file_age_critical_count$"
        "--filename" = "$file_age_filename$"
        "--only-dirs" = {
            set_if = "$file_age_only_dirs$"
        }
        "--only-files" = {
            set_if = "$file_age_only_files$"
        }
        "--password" = "$file_age_password$"
        "--pattern" = "$file_age_pattern$"
        "--perfdata-mode" = "$file_age_perfdata_mode$"
        "--timeout" = "$file_age_timeout$"
        "--url" = "$file_age_url$"
        "--username" = "$file_age_username$"
        "--warning" = "$file_age_warning$"
        "--warning-count" = "$file_age_warning_count$"
    }
}

object CheckCommand "linuxfabrik/file-age-sudo" {
    import "linuxfabrik/file-age"

    command = [ "/usr/bin/sudo", LinuxfabrikPluginDir + "/file-age" ]
}

object CheckCommand "linuxfabrik/file-count" {
    command = [ LinuxfabrikPluginDir + "/file-count" ]
    timeout = 10s
    arguments += {
        "--always-ok" = {
            set_if = "$file_count_always_ok$"
            description = "Always returns OK."
        }
        "--critical" = "$file_count_critical$"
        "--filename" = "$file_count_filename$"
        "--only-dirs" = {
            set_if = "$file_count_only_dirs$"
        }
        "--only-files" = {
            set_if = "$file_count_only_files$"
        }
        "--password" = "$file_count_password$"
        "--pattern" = "$file_count_pattern$"
        "--timeout" = "$file_count_timeout$"
        "--timerange" = "$file_count_timerange$"
        "--url" = "$file_count_url$"
        "--username" = "$file_count_username$"
        "--warning" = "$file_count_warning$"
    }
}

object CheckCommand "linuxfabrik/file-descriptors" {
    command = [ LinuxfabrikPluginDir + "/file-descriptors" ]
    timeout = 10s
    arguments += {
        "--always-ok" = {
            set_if = "$file_descriptors_always_ok$"
            description = "Always returns OK."
        }
        "--critical" = "$file_descriptors_critical$"
        "--warning" = "$file_descriptors_warning$"
    }
}

object CheckCommand "linuxfabrik/file-ownership" {
    command = [ LinuxfabrikPluginDir + "/file-ownership" ]
    timeout = 10s
    arguments += {
        "--filename" = {
            repeat_key = true
            value = "$file_ownership_filename$"
        }
    }
}

object CheckCommand "linuxfabrik/file-size" {
    command = [ LinuxfabrikPluginDir + "/file-size" ]
    timeout = 10s
    arguments += {
        "--always-ok" = {
            set_if = "$file_size_always_ok$"
            description = "Always returns OK."
        }
        "--critical" = "$file_size_critical$"
        "--filename" = "$file_size_filename$"
        "--password" = "$file_size_password$"
        "--pattern" = "$file_size_pattern$"
        "--timeout" = "$file_size_timeout$"
        "--url" = "$file_size_url$"
        "--username" = "$file_size_username$"
        "--warning" = "$file_size_warning$"
    }
}

object CheckCommand "linuxfabrik/file-size-sudo" {
    import "linuxfabrik/file-size"

    command = [ "/usr/bin/sudo", LinuxfabrikPluginDir + "/file-size" ]
}

object CheckCommand "linuxfabrik/fortios-cpu-usage" {
    command = [ LinuxfabrikPluginDir + "/fortios-cpu-usage" ]
    timeout = 10s
    arguments += {
        "--always-ok" = {
            set_if = "$fortios_cpu_usage_always_ok$"
            description = "Always returns OK."
        }
        "--count" = "$fortios_cpu_usage_count$"
        "--critical" = "$fortios_cpu_usage_critical$"
        "--hostname" = "$fortios_cpu_usage_hostname$"
        "--insecure" = {
            set_if = "$fortios_cpu_usage_insecure$"
        }
        "--no-proxy" = {
            set_if = "$fortios_cpu_usage_no_proxy$"
        }
        "--password" = "$fortios_cpu_usage_password$"
        "--timeout" = "$fortios_cpu_usage_timeout$"
        "--warning" = "$fortios_cpu_usage_warning$"
    }
}

object CheckCommand "linuxfabrik/fortios-firewall-stats" {
    command = [ LinuxfabrikPluginDir + "/fortios-firewall-stats" ]
    timeout = 10s
    arguments += {
        "--always-ok" = {
            set_if = "$fortios_firewall_stats_always_ok$"
            description = "Always returns OK."
        }
        "--hostname" = "$fortios_firewall_stats_hostname$"
        "--insecure" = {
            set_if = "$fortios_firewall_stats_insecure$"
        }
        "--no-proxy" = {
            set_if = "$fortios_firewall_stats_no_proxy$"
        }
        "--password" = "$fortios_firewall_stats_password$"
        "--timeout" = "$fortios_firewall_stats_timeout$"
    }
}

object CheckCommand "linuxfabrik/fortios-ha-stats" {
    command = [ LinuxfabrikPluginDir + "/fortios-ha-stats" ]
    timeout = 10s
    arguments += {
        "--always-ok" = {
            set_if = "$fortios_ha_stats_always_ok$"
            description = "Always returns OK."
        }
        "--count" = "$fortios_ha_stats_count$"
        "--hostname" = "$fortios_ha_stats_hostname$"
        "--insecure" = {
            set_if = "$fortios_ha_stats_insecure$"
        }
        "--no-proxy" = {
            set_if = "$fortios_ha_stats_no_proxy$"
        }
        "--password" = "$fortios_ha_stats_password$"
        "--timeout" = "$fortios_ha_stats_timeout$"
    }
}

object CheckCommand "linuxfabrik/fortios-memory-usage" {
    command = [ LinuxfabrikPluginDir + "/fortios-memory-usage" ]
    timeout = 10s
    arguments += {
        "--always-ok" = {
            set_if = "$fortios_memory_usage_always_ok$"
            description = "Always returns OK."
        }
        "--critical" = "$fortios_memory_usage_critical$"
        "--hostname" = "$fortios_memory_usage_hostname$"
        "--insecure" = {
            set_if = "$fortios_memory_usage_insecure$"
        }
        "--no-proxy" = {
            set_if = "$fortios_memory_usage_no_proxy$"
        }
        "--password" = "$fortios_memory_usage_password$"
        "--timeout" = "$fortios_memory_usage_timeout$"
        "--warning" = "$fortios_memory_usage_warning$"
    }
}

object CheckCommand "linuxfabrik/fortios-network-io" {
    command = [ LinuxfabrikPluginDir + "/fortios-network-io" ]
    timeout = 10s
    arguments += {
        "--always-ok" = {
            set_if = "$fortios_network_io_always_ok$"
            description = "Always returns OK."
        }
        "--count" = "$fortios_network_io_count$"
        "--critical" = "$fortios_network_io_critical$"
        "--hostname" = "$fortios_network_io_hostname$"
        "--insecure" = {
            set_if = "$fortios_network_io_insecure$"
        }
        "--no-proxy" = {
            set_if = "$fortios_network_io_no_proxy$"
        }
        "--password" = "$fortios_network_io_password$"
        "--timeout" = "$fortios_network_io_timeout$"
        "--warning" = "$fortios_network_io_warning$"
    }
}

object CheckCommand "linuxfabrik/fortios-sensor" {
    command = [ LinuxfabrikPluginDir + "/fortios-sensor" ]
    timeout = 10s
    arguments += {
        "--always-ok" = {
            set_if = "$fortios_sensor_always_ok$"
            description = "Always returns OK."
        }
        "--hostname" = "$fortios_sensor_hostname$"
        "--insecure" = {
            set_if = "$fortios_sensor_insecure$"
        }
        "--no-proxy" = {
            set_if = "$fortios_sensor_no_proxy$"
        }
        "--password" = "$fortios_sensor_password$"
        "--timeout" = "$fortios_sensor_timeout$"
    }
}

object CheckCommand "linuxfabrik/fortios-version" {
    command = [ LinuxfabrikPluginDir + "/fortios-version" ]
    timeout = 10s
    arguments += {
        "--always-ok" = {
            set_if = "$fortios_version_always_ok$"
            description = "Always returns OK."
        }
        "--check-major" = {
            set_if = "$fortios_version_check_major$"
        }
        "--check-minor" = {
            set_if = "$fortios_version_check_minor$"
        }
        "--check-patch" = {
            set_if = "$fortios_version_check_patch$"
        }
        "--hostname" = "$fortios_version_hostname$"
        "--insecure" = {
            set_if = "$fortios_version_insecure$"
        }
        "--no-proxy" = {
            set_if = "$fortios_version_no_proxy$"
        }
        "--offset-eol" = "$fortios_version_offset_eol$"
        "--password" = "$fortios_version_password$"
        "--timeout" = "$fortios_version_timeout$"
    }
}

object CheckCommand "linuxfabrik/fs-inodes" {
    command = [ LinuxfabrikPluginDir + "/fs-inodes" ]
    timeout = 10s
    arguments += {
        "--always-ok" = {
            set_if = "$fs_inodes_always_ok$"
            description = "Always returns OK."
        }
        "--critical" = "$fs_inodes_critical$"
        "--mount" = "$fs_inodes_mount$"
        "--warning" = "$fs_inodes_warning$"
    }
}

object CheckCommand "linuxfabrik/fs-ro" {
    command = [ LinuxfabrikPluginDir + "/fs-ro" ]
    timeout = 10s
    arguments += {
        "--always-ok" = {
            set_if = "$fs_ro_always_ok$"
            description = "Always returns OK."
        }
        "--ignore" = {
            repeat_key = true
            value = "$fs_ro_ignore$"
        }
    }
}

object CheckCommand "linuxfabrik/fs-xfs-stats" {
    command = [ LinuxfabrikPluginDir + "/fs-xfs-stats" ]
    timeout = 10s
}

object CheckCommand "linuxfabrik/getent" {
    command = [ LinuxfabrikPluginDir + "/getent" ]
    timeout = 30s
    arguments += {
        "--database" = "$getent_database$"
        "--key" = {
            repeat_key = true
            value = "$getent_key$"
        }
    }
}

object CheckCommand "linuxfabrik/githubstatus" {
    command = [ LinuxfabrikPluginDir + "/githubstatus" ]
    timeout = 10s
    arguments += {
        "--always-ok" = {
            set_if = "$githubstatus_always_ok$"
            description = "Always returns OK."
        }
    }
}

object CheckCommand "linuxfabrik/gitlab-health" {
    command = [ LinuxfabrikPluginDir + "/gitlab-health" ]
    timeout = 10s
    arguments += {
        "--always-ok" = {
            set_if = "$gitlab_health_always_ok$"
            description = "Always returns OK."
        }
        "--severity" = "$gitlab_health_severity$"
        "--timeout" = "$gitlab_health_timeout$"
        "--url" = "$gitlab_health_url$"
    }
}

object CheckCommand "linuxfabrik/gitlab-liveness" {
    command = [ LinuxfabrikPluginDir + "/gitlab-liveness" ]
    timeout = 10s
    arguments += {
        "--always-ok" = {
            set_if = "$gitlab_liveness_always_ok$"
            description = "Always returns OK."
        }
        "--severity" = "$gitlab_liveness_severity$"
        "--timeout" = "$gitlab_liveness_timeout$"
        "--url" = "$gitlab_liveness_url$"
    }
}

object CheckCommand "linuxfabrik/gitlab-readiness" {
    command = [ LinuxfabrikPluginDir + "/gitlab-readiness" ]
    timeout = 10s
    arguments += {
        "--always-ok" = {
            set_if = "$gitlab_readiness_always_ok$"
            description = "Always returns OK."
        }
        "--severity" = "$gitlab_readiness_severity$"
        "--timeout" = "$gitlab_readiness_timeout$"
        "--url" = "$gitlab_readiness_url$"
    }
}

object CheckCommand "linuxfabrik/gitlab-version" {
    command = [ LinuxfabrikPluginDir + "/gitlab-version" ]
    timeout = 10s
    arguments += {
        "--always-ok" = {
            set_if = "$gitlab_version_always_ok$"
            description = "Always returns OK."
        }
        "--check-major" = {
            set_if = "$gitlab_version_check_major$"
        }
        "--check-minor" = {
            set_if = "$gitlab_version_check_minor$"
        }
        "--check-patch" = {
            set_if = "$gitlab_version_check_patch$"
        }
        "--offset-eol" = "$gitlab_version_offset_eol$"
        "--path" = "$gitlab_version_path$"
    }
}

object CheckCommand "linuxfabrik/grafana-version" {
    command = [ LinuxfabrikPluginDir + "/grafana-version" ]
    timeout = 10s
    arguments += {
        "--always-ok" = {
            set_if = "$grafana_version_always_ok$"
            description = "Always returns OK."
        }
        "--check-major" = {
            set_if = "$grafana_version_check_major$"
        }
        "--check-minor" = {
            set_if = "$grafana_version_check_minor$"
        }
        "--check-patch" = {
            set_if = "$grafana_version_check_patch$"
        }
        "--offset-eol" = "$grafana_version_offset_eol$"
    }
}

object CheckCommand "linuxfabrik/grassfish-licenses" {
    command = [ LinuxfabrikPluginDir + "/grassfish-licenses" ]
    timeout = 30s
    arguments += {
        "--always-ok" = {
            set_if = "$grassfish_licenses_always_ok$"
            description = "Always returns OK."
        }
        "--api-version" = "$grassfish_licenses_api_version$"
        "--hostname" = "$grassfish_licenses_hostname$"
        "--port" = "$grassfish_licenses_port$"
        "--token" = "$grassfish_licenses_token$"
        "--url" = "$grassfish_licenses_url$"
    }
}

object CheckCommand "linuxfabrik/grassfish-players" {
    command = [ LinuxfabrikPluginDir + "/grassfish-players" ]
    timeout = 30s
    arguments += {
        "--always-ok" = {
            set_if = "$grassfish_players_always_ok$"
            description = "Always returns OK."
        }
        "--api-version" = "$grassfish_players_api_version$"
        "--box-id" = "$grassfish_players_box_id$"
        "--box-state" = {
            repeat_key = true
            value = "$grassfish_players_box_state$"
        }
        "--custom-id" = "$grassfish_players_custom_id$"
        "--hostname" = "$grassfish_players_hostname$"
        "--is-installed" = {
            repeat_key = true
            value = "$grassfish_players_is_installed$"
        }
        "--is-licensed" = {
            repeat_key = true
            value = "$grassfish_players_is_licensed$"
        }
        "--lengthy" = {
            set_if = "$grassfish_players_lengthy$"
        }
        "--port" = "$grassfish_players_port$"
        "--token" = "$grassfish_players_token$"
        "--transfer-status" = {
            repeat_key = true
            value = "$grassfish_players_transfer_status$"
        }
        "--url" = "$grassfish_players_url$"
        "--warning" = "$grassfish_players_warning$"
    }
}

object CheckCommand "linuxfabrik/grassfish-screens" {
    command = [ LinuxfabrikPluginDir + "/grassfish-screens" ]
    timeout = 15m
    arguments += {
        "--always-ok" = {
            set_if = "$grassfish_screens_always_ok$"
            description = "Always returns OK."
        }
        "--api-version" = "$grassfish_screens_api_version$"
        "--box-id" = "$grassfish_screens_box_id$"
        "--box-state" = {
            repeat_key = true
            value = "$grassfish_screens_box_state$"
        }
        "--cache-expire" = "$grassfish_screens_cache_expire$"
        "--custom-id" = "$grassfish_screens_custom_id$"
        "--hostname" = "$grassfish_screens_hostname$"
        "--is-installed" = {
            repeat_key = true
            value = "$grassfish_screens_is_installed$"
        }
        "--is-licensed" = {
            repeat_key = true
            value = "$grassfish_screens_is_licensed$"
        }
        "--lengthy" = {
            set_if = "$grassfish_screens_lengthy$"
        }
        "--port" = "$grassfish_screens_port$"
        "--token" = "$grassfish_screens_token$"
        "--transfer-status" = {
            repeat_key = true
            value = "$grassfish_screens_transfer_status$"
        }
        "--url" = "$grassfish_screens_url$"
        "--warning" = "$grassfish_screens_warning$"
    }
}

object CheckCommand "linuxfabrik/haproxy-status" {
    command = [ LinuxfabrikPluginDir + "/haproxy-status" ]
    timeout = 10s
    arguments += {
        "--always-ok" = {
            set_if = "$haproxy_status_always_ok$"
            description = "Always returns OK."
        }
        "--critical" = "$haproxy_status_critical$"
        "--lengthy" = {
            set_if = "$haproxy_status_lengthy$"
        }
        "--password" = "$haproxy_status_password$"
        "--timeout" = "$haproxy_status_timeout$"
        "--url" = "$haproxy_status_url$"
        "--username" = "$haproxy_status_username$"
        "--warning" = "$haproxy_status_warning$"
    }
}

object CheckCommand "linuxfabrik/huawei-dorado-backup-power" {
    command = [ LinuxfabrikPluginDir + "/huawei-dorado-backup-power" ]
    timeout = 10s
    arguments += {
        "--always-ok" = {
            set_if = "$huawei_dorado_backup_power_always_ok$"
            description = "Always returns OK."
        }
        "--cache-expire" = "$huawei_dorado_backup_power_cache_expire$"
        "--device-id" = "$huawei_dorado_backup_power_device_id$"
        "--no-proxy" = {
            set_if = "$huawei_dorado_backup_power_no_proxy$"
        }
        "--password" = "$huawei_dorado_backup_power_password$"
        "--scope" = "$huawei_dorado_backup_power_scope$"
        "--timeout" = "$huawei_dorado_backup_power_timeout$"
        "--url" = "$huawei_dorado_backup_power_url$"
        "--username" = "$huawei_dorado_backup_power_username$"
    }
}

object CheckCommand "linuxfabrik/huawei-dorado-controller" {
    command = [ LinuxfabrikPluginDir + "/huawei-dorado-controller" ]
    timeout = 10s
    arguments += {
        "--always-ok" = {
            set_if = "$huawei_dorado_controller_always_ok$"
            description = "Always returns OK."
        }
        "--cache-expire" = "$huawei_dorado_controller_cache_expire$"
        "--device-id" = "$huawei_dorado_controller_device_id$"
        "--no-proxy" = {
            set_if = "$huawei_dorado_controller_no_proxy$"
        }
        "--password" = "$huawei_dorado_controller_password$"
        "--scope" = "$huawei_dorado_controller_scope$"
        "--timeout" = "$huawei_dorado_controller_timeout$"
        "--url" = "$huawei_dorado_controller_url$"
        "--username" = "$huawei_dorado_controller_username$"
    }
}

object CheckCommand "linuxfabrik/huawei-dorado-disk" {
    command = [ LinuxfabrikPluginDir + "/huawei-dorado-disk" ]
    timeout = 10s
    arguments += {
        "--always-ok" = {
            set_if = "$huawei_dorado_disk_always_ok$"
            description = "Always returns OK."
        }
        "--cache-expire" = "$huawei_dorado_disk_cache_expire$"
        "--device-id" = "$huawei_dorado_disk_device_id$"
        "--no-proxy" = {
            set_if = "$huawei_dorado_disk_no_proxy$"
        }
        "--password" = "$huawei_dorado_disk_password$"
        "--scope" = "$huawei_dorado_disk_scope$"
        "--timeout" = "$huawei_dorado_disk_timeout$"
        "--url" = "$huawei_dorado_disk_url$"
        "--username" = "$huawei_dorado_disk_username$"
    }
}

object CheckCommand "linuxfabrik/huawei-dorado-enclosure" {
    command = [ LinuxfabrikPluginDir + "/huawei-dorado-enclosure" ]
    timeout = 10s
    arguments += {
        "--always-ok" = {
            set_if = "$huawei_dorado_enclosure_always_ok$"
            description = "Always returns OK."
        }
        "--cache-expire" = "$huawei_dorado_enclosure_cache_expire$"
        "--device-id" = "$huawei_dorado_enclosure_device_id$"
        "--no-proxy" = {
            set_if = "$huawei_dorado_enclosure_no_proxy$"
        }
        "--password" = "$huawei_dorado_enclosure_password$"
        "--scope" = "$huawei_dorado_enclosure_scope$"
        "--timeout" = "$huawei_dorado_enclosure_timeout$"
        "--url" = "$huawei_dorado_enclosure_url$"
        "--username" = "$huawei_dorado_enclosure_username$"
    }
}

object CheckCommand "linuxfabrik/huawei-dorado-fan" {
    command = [ LinuxfabrikPluginDir + "/huawei-dorado-fan" ]
    timeout = 10s
    arguments += {
        "--always-ok" = {
            set_if = "$huawei_dorado_fan_always_ok$"
            description = "Always returns OK."
        }
        "--cache-expire" = "$huawei_dorado_fan_cache_expire$"
        "--device-id" = "$huawei_dorado_fan_device_id$"
        "--no-proxy" = {
            set_if = "$huawei_dorado_fan_no_proxy$"
        }
        "--password" = "$huawei_dorado_fan_password$"
        "--scope" = "$huawei_dorado_fan_scope$"
        "--timeout" = "$huawei_dorado_fan_timeout$"
        "--url" = "$huawei_dorado_fan_url$"
        "--username" = "$huawei_dorado_fan_username$"
    }
}

object CheckCommand "linuxfabrik/huawei-dorado-host" {
    command = [ LinuxfabrikPluginDir + "/huawei-dorado-host" ]
    timeout = 10s
    arguments += {
        "--always-ok" = {
            set_if = "$huawei_dorado_host_always_ok$"
            description = "Always returns OK."
        }
        "--cache-expire" = "$huawei_dorado_host_cache_expire$"
        "--device-id" = "$huawei_dorado_host_device_id$"
        "--no-proxy" = {
            set_if = "$huawei_dorado_host_no_proxy$"
        }
        "--password" = "$huawei_dorado_host_password$"
        "--scope" = "$huawei_dorado_host_scope$"
        "--timeout" = "$huawei_dorado_host_timeout$"
        "--url" = "$huawei_dorado_host_url$"
        "--username" = "$huawei_dorado_host_username$"
    }
}

object CheckCommand "linuxfabrik/huawei-dorado-hypermetrodomain" {
    command = [ LinuxfabrikPluginDir + "/huawei-dorado-hypermetrodomain" ]
    timeout = 10s
    arguments += {
        "--always-ok" = {
            set_if = "$huawei_dorado_hypermetrodomain_always_ok$"
            description = "Always returns OK."
        }
        "--cache-expire" = "$huawei_dorado_hypermetrodomain_cache_expire$"
        "--device-id" = "$huawei_dorado_hypermetrodomain_device_id$"
        "--no-proxy" = {
            set_if = "$huawei_dorado_hypermetrodomain_no_proxy$"
        }
        "--password" = "$huawei_dorado_hypermetrodomain_password$"
        "--scope" = "$huawei_dorado_hypermetrodomain_scope$"
        "--timeout" = "$huawei_dorado_hypermetrodomain_timeout$"
        "--url" = "$huawei_dorado_hypermetrodomain_url$"
        "--username" = "$huawei_dorado_hypermetrodomain_username$"
    }
}

object CheckCommand "linuxfabrik/huawei-dorado-hypermetropair" {
    command = [ LinuxfabrikPluginDir + "/huawei-dorado-hypermetropair" ]
    timeout = 10s
    arguments += {
        "--always-ok" = {
            set_if = "$huawei_dorado_hypermetropair_always_ok$"
            description = "Always returns OK."
        }
        "--cache-expire" = "$huawei_dorado_hypermetropair_cache_expire$"
        "--device-id" = "$huawei_dorado_hypermetropair_device_id$"
        "--no-proxy" = {
            set_if = "$huawei_dorado_hypermetropair_no_proxy$"
        }
        "--password" = "$huawei_dorado_hypermetropair_password$"
        "--scope" = "$huawei_dorado_hypermetropair_scope$"
        "--timeout" = "$huawei_dorado_hypermetropair_timeout$"
        "--url" = "$huawei_dorado_hypermetropair_url$"
        "--username" = "$huawei_dorado_hypermetropair_username$"
    }
}

object CheckCommand "linuxfabrik/huawei-dorado-interface" {
    command = [ LinuxfabrikPluginDir + "/huawei-dorado-interface" ]
    timeout = 10s
    arguments += {
        "--always-ok" = {
            set_if = "$huawei_dorado_interface_always_ok$"
            description = "Always returns OK."
        }
        "--cache-expire" = "$huawei_dorado_interface_cache_expire$"
        "--device-id" = "$huawei_dorado_interface_device_id$"
        "--no-proxy" = {
            set_if = "$huawei_dorado_interface_no_proxy$"
        }
        "--password" = "$huawei_dorado_interface_password$"
        "--scope" = "$huawei_dorado_interface_scope$"
        "--timeout" = "$huawei_dorado_interface_timeout$"
        "--url" = "$huawei_dorado_interface_url$"
        "--username" = "$huawei_dorado_interface_username$"
    }
}

object CheckCommand "linuxfabrik/huawei-dorado-power" {
    command = [ LinuxfabrikPluginDir + "/huawei-dorado-power" ]
    timeout = 10s
    arguments += {
        "--always-ok" = {
            set_if = "$huawei_dorado_power_always_ok$"
            description = "Always returns OK."
        }
        "--cache-expire" = "$huawei_dorado_power_cache_expire$"
        "--device-id" = "$huawei_dorado_power_device_id$"
        "--no-proxy" = {
            set_if = "$huawei_dorado_power_no_proxy$"
        }
        "--password" = "$huawei_dorado_power_password$"
        "--scope" = "$huawei_dorado_power_scope$"
        "--timeout" = "$huawei_dorado_power_timeout$"
        "--url" = "$huawei_dorado_power_url$"
        "--username" = "$huawei_dorado_power_username$"
    }
}

object CheckCommand "linuxfabrik/huawei-dorado-system" {
    command = [ LinuxfabrikPluginDir + "/huawei-dorado-system" ]
    timeout = 10s
    arguments += {
        "--always-ok" = {
            set_if = "$huawei_dorado_system_always_ok$"
            description = "Always returns OK."
        }
        "--cache-expire" = "$huawei_dorado_system_cache_expire$"
        "--critical" = "$huawei_dorado_system_critical$"
        "--device-id" = "$huawei_dorado_system_device_id$"
        "--no-proxy" = {
            set_if = "$huawei_dorado_system_no_proxy$"
        }
        "--password" = "$huawei_dorado_system_password$"
        "--scope" = "$huawei_dorado_system_scope$"
        "--timeout" = "$huawei_dorado_system_timeout$"
        "--url" = "$huawei_dorado_system_url$"
        "--username" = "$huawei_dorado_system_username$"
        "--warning" = "$huawei_dorado_system_warning$"
    }
}

object CheckCommand "linuxfabrik/infomaniak-events" {
    command = [ LinuxfabrikPluginDir + "/infomaniak-events" ]
    timeout = 10s
    arguments += {
        "--always-ok" = {
            set_if = "$infomaniak_events_always_ok$"
            description = "Always returns OK."
        }
        "--service" = {
            repeat_key = true
            value = "$infomaniak_events_service$"
        }
        "--token" = "$infomaniak_events_token$"
    }
}

object CheckCommand "linuxfabrik/infomaniak-swiss-backup-devices" {
    command = [ LinuxfabrikPluginDir + "/infomaniak-swiss-backup-devices" ]
    timeout = 30s
    arguments += {
        "--account-id" = "$infomaniak_swiss_backup_devices_account_id$"
        "--always-ok" = {
            set_if = "$infomaniak_swiss_backup_devices_always_ok$"
            description = "Always returns OK."
        }
        "--critical" = "$infomaniak_swiss_backup_devices_critical$"
        "--severity" = "$infomaniak_swiss_backup_devices_severity$"
        "--token" = "$infomaniak_swiss_backup_devices_token$"
        "--warning" = "$infomaniak_swiss_backup_devices_warning$"
    }
}

object CheckCommand "linuxfabrik/infomaniak-swiss-backup-products" {
    command = [ LinuxfabrikPluginDir + "/infomaniak-swiss-backup-products" ]
    timeout = 10s
    arguments += {
        "--account-id" = "$infomaniak_swiss_backup_products_account_id$"
        "--always-ok" = {
            set_if = "$infomaniak_swiss_backup_products_always_ok$"
            description = "Always returns OK."
        }
        "--critical" = "$infomaniak_swiss_backup_products_critical$"
        "--severity" = "$infomaniak_swiss_backup_products_severity$"
        "--token" = "$infomaniak_swiss_backup_products_token$"
        "--warning" = "$infomaniak_swiss_backup_products_warning$"
    }
}

object CheckCommand "linuxfabrik/ipmi-sel" {
    command = [ LinuxfabrikPluginDir + "/ipmi-sel" ]
    timeout = 10s
    arguments += {
        "--authtype" = "$ipmi_sel_authtype$"
        "--hostname" = "$ipmi_sel_hostname$"
        "--interface" = "$ipmi_sel_interface$"
        "--password" = "$ipmi_sel_password$"
        "--port" = "$ipmi_sel_port$"
        "--privlevel" = "$ipmi_sel_privlevel$"
        "--username" = "$ipmi_sel_username$"
    }
}

object CheckCommand "linuxfabrik/ipmi-sel-sudo" {
    import "linuxfabrik/ipmi-sel"

    command = [ "/usr/bin/sudo", LinuxfabrikPluginDir + "/ipmi-sel" ]
}

object CheckCommand "linuxfabrik/ipmi-sensor" {
    command = [ LinuxfabrikPluginDir + "/ipmi-sensor" ]
    timeout = 10s
    arguments += {
        "--authtype" = "$ipmi_sensor_authtype$"
        "--hostname" = "$ipmi_sensor_hostname$"
        "--interface" = "$ipmi_sensor_interface$"
        "--password" = "$ipmi_sensor_password$"
        "--port" = "$ipmi_sensor_port$"
        "--privlevel" = "$ipmi_sensor_privlevel$"
        "--username" = "$ipmi_sensor_username$"
    }
}

object CheckCommand "linuxfabrik/ipmi-sensor-sudo" {
    import "linuxfabrik/ipmi-sensor"

    command = [ "/usr/bin/sudo", LinuxfabrikPluginDir + "/ipmi-sensor" ]
}

object CheckCommand "linuxfabrik/jitsi-videobridge-stats" {
    command = [ LinuxfabrikPluginDir + "/jitsi-videobridge-stats" ]
    timeout = 10s
    arguments += {
        "--always-ok" = {
            set_if = "$jitsi_videobridge_stats_always_ok$"
            description = "Always returns OK."
        }
        "--critical" = "$jitsi_videobridge_stats_critical$"
        "--password" = "$jitsi_videobridge_stats_password$"
        "--timeout" = "$jitsi_videobridge_stats_timeout$"
        "--url" = "$jitsi_videobridge_stats_url$"
        "--username" = "$jitsi_videobridge_stats_username$"
        "--warning" = "$jitsi_videobridge_stats_warning$"
    }
}

object CheckCommand "linuxfabrik/jitsi-videobridge-status" {
    command = [ LinuxfabrikPluginDir + "/jitsi-videobridge-status" ]
    timeout = 10s
    arguments += {
        "--always-ok" = {
            set_if = "$jitsi_videobridge_status_always_ok$"
            description = "Always returns OK."
        }
        "--password" = "$jitsi_videobridge_status_password$"
        "--severity" = "$jitsi_videobridge_status_severity$"
        "--timeout" = "$jitsi_videobridge_status_timeout$"
        "--url" = "$jitsi_videobridge_status_url$"
        "--username" = "$jitsi_videobridge_status_username$"
    }
}

object CheckCommand "linuxfabrik/journald-query" {
    command = [ "/usr/bin/sudo", LinuxfabrikPluginDir + "/journald-query" ]
    timeout = 10s
    arguments += {
        "--always-ok" = {
            set_if = "$journald_query_always_ok$"
            description = "Always returns OK."
        }
        "--facility" = "$journald_query_facility$"
        "--identifier" = "$journald_query_identifier$"
        "--ignore-pattern" = {
            repeat_key = true
            value = "$journald_query_ignore_pattern$"
        }
        "--ignore-regex" = {
            repeat_key = true
            value = "$journald_query_ignore_regex$"
        }
        "--priority" = "$journald_query_priority$"
        "--severity" = "$journald_query_severity$"
        "--since" = "$journald_query_since$"
        "--unit" = {
            repeat_key = true
            value = "$journald_query_unit$"
        }
        "--user-unit" = {
            repeat_key = true
            value = "$journald_query_user_unit$"
        }
    }
}

object CheckCommand "linuxfabrik/journald-usage" {
    command = [ "/usr/bin/sudo", LinuxfabrikPluginDir + "/journald-usage" ]
    timeout = 10s
    arguments += {
        "--always-ok" = {
            set_if = "$journald_usage_always_ok$"
            description = "Always returns OK."
        }
        "--warning" = "$journald_usage_warning$"
    }
}

object CheckCommand "linuxfabrik/json-values" {
    command = [ LinuxfabrikPluginDir + "/json-values" ]
    timeout = 10s
    arguments += {
        "--always-ok" = {
            set_if = "$json_values_always_ok$"
            description = "Always returns OK."
        }
        "--filename" = "$json_values_filename$"
        "--insecure" = {
            set_if = "$json_values_insecure$"
        }
        "--message-key" = "$json_values_message_key$"
        "--no-proxy" = {
            set_if = "$json_values_no_proxy$"
        }
        "--password" = "$json_values_password$"
        "--perfdata-key" = "$json_values_perfdata_key$"
        "--state-key" = "$json_values_state_key$"
        "--timeout" = "$json_values_timeout$"
        "--url" = "$json_values_url$"
        "--username" = "$json_values_username$"
    }
}

object CheckCommand "linuxfabrik/kemp-services" {
    command = [ LinuxfabrikPluginDir + "/kemp-services" ]
    timeout = 10s
    arguments += {
        "--always-ok" = {
            set_if = "$kemp_services_always_ok$"
            description = "Always returns OK."
        }
        "--filter" = "$kemp_services_filter$"
        "--hostname" = "$kemp_services_hostname$"
        "--insecure" = {
            set_if = "$kemp_services_insecure$"
        }
        "--no-proxy" = {
            set_if = "$kemp_services_no_proxy$"
        }
        "--password" = "$kemp_services_password$"
        "--port" = "$kemp_services_port$"
        "--severity" = "$kemp_services_severity$"
        "--timeout" = "$kemp_services_timeout$"
        "--username" = "$kemp_services_username$"
    }
}

object CheckCommand "linuxfabrik/keycloak-version" {
    command = [ LinuxfabrikPluginDir + "/keycloak-version" ]
    timeout = 10s
    arguments += {
        "--always-ok" = {
            set_if = "$keycloak_version_always_ok$"
            description = "Always returns OK."
        }
        "--check-major" = {
            set_if = "$keycloak_version_check_major$"
        }
        "--check-minor" = {
            set_if = "$keycloak_version_check_minor$"
        }
        "--check-patch" = {
            set_if = "$keycloak_version_check_patch$"
        }
        "--offset-eol" = "$keycloak_version_offset_eol$"
        "--path" = "$keycloak_version_path$"
    }
}

object CheckCommand "linuxfabrik/kvm-vm" {
    command = [ "/usr/bin/sudo", LinuxfabrikPluginDir + "/plugins/kvm-vm" ]
    timeout = 10s
    arguments += {
        "--always-ok" = {
            set_if = "$kvm_vm_always_ok$"
            description = "Always returns OK."
        }
    }
}

object CheckCommand "linuxfabrik/librenms-alerts" {
    command = [ LinuxfabrikPluginDir + "/librenms-alerts" ]
    timeout = 10s
    arguments += {
        "--always-ok" = {
            set_if = "$librenms_alerts_always_ok$"
            description = "Always returns OK."
        }
        "--device-group" = "$librenms_alerts_device_group$"
        "--device-hostname" = {
            repeat_key = true
            value = "$librenms_alerts_device_hostname$"
        }
        "--device-type" = {
            repeat_key = true
            value = "$librenms_alerts_device_type$"
        }
        "--insecure" = {
            set_if = "$librenms_alerts_insecure$"
        }
        "--lengthy" = {
            set_if = "$librenms_alerts_lengthy$"
        }
        "--no-proxy" = {
            set_if = "$librenms_alerts_no_proxy$"
        }
        "--timeout" = "$librenms_alerts_timeout$"
        "--token" = "$librenms_alerts_token$"
        "--url" = "$librenms_alerts_url$"
    }
}

object CheckCommand "linuxfabrik/librenms-health" {
    command = [ LinuxfabrikPluginDir + "/librenms-health" ]
    timeout = 10s
    arguments += {
        "--device-group" = "$librenms_health_device_group$"
        "--device-hostname" = {
            repeat_key = true
            value = "$librenms_health_device_hostname$"
        }
        "--device-type" = {
            repeat_key = true
            value = "$librenms_health_device_type$"
        }
        "--insecure" = {
            set_if = "$librenms_health_insecure$"
        }
        "--lengthy" = {
            set_if = "$librenms_health_lengthy$"
        }
        "--no-proxy" = {
            set_if = "$librenms_health_no_proxy$"
        }
        "--timeout" = "$librenms_health_timeout$"
        "--token" = "$librenms_health_token$"
        "--url" = "$librenms_health_url$"
    }
}

object CheckCommand "linuxfabrik/librenms-version" {
    command = [ LinuxfabrikPluginDir + "/librenms-version" ]
    timeout = 10s
    arguments += {
        "--insecure" = {
            set_if = "$librenms_version_insecure$"
        }
        "--no-proxy" = {
            set_if = "$librenms_version_no_proxy$"
        }
        "--timeout" = "$librenms_version_timeout$"
        "--token" = "$librenms_version_token$"
        "--url" = "$librenms_version_url$"
    }
}

object CheckCommand "linuxfabrik/load" {
    command = [ LinuxfabrikPluginDir + "/load" ]
    timeout = 10s
    arguments += {
        "--always-ok" = {
            set_if = "$load_always_ok$"
            description = "Always returns OK."
        }
        "--critical" = {
            value = "$load_critical$"
            description = "Set the critical threshold for load15 per cpu. Default: 5.0"
        }
        "--warning" = {
            value = "$load_warning$"
            description = "Set the warning threshold for load15 per cpu. Default: 1.15"
        }
    }
}

object CheckCommand "linuxfabrik/logfile" {
    command = [ LinuxfabrikPluginDir + "/logfile" ]
    timeout = 10s
    arguments += {
        "--alarm-duration" = "$logfile_alarm_duration$"
        "--always-ok" = {
            set_if = "$logfile_always_ok$"
            description = "Always returns OK."
        }
        "--critical" = "$logfile_critical$"
        "--critical-pattern" = {
            repeat_key = true
            value = "$logfile_critical_pattern$"
        }
        "--critical-regex" = {
            repeat_key = true
            value = "$logfile_critical_regex$"
        }
        "--filename" = "$logfile_filename$"
        "--icinga-callback" = {
            set_if = "$logfile_icinga_callback$"
        }
        "--icinga-password" = "$logfile_icinga_password$"
        "--icinga-service-name" = "$logfile_icinga_service_name$"
        "--icinga-url" = "$logfile_icinga_url$"
        "--icinga-username" = "$logfile_icinga_username$"
        "--ignore-pattern" = {
            repeat_key = true
            value = "$logfile_ignore_pattern$"
        }
        "--ignore-regex" = {
            repeat_key = true
            value = "$logfile_ignore_regex$"
        }
        "--suppress-lines" = {
            set_if = "$logfile_suppress_lines$"
        }
        "--warning" = "$logfile_warning$"
        "--warning-pattern" = {
            repeat_key = true
            value = "$logfile_warning_pattern$"
        }
        "--warning-regex" = {
            repeat_key = true
            value = "$logfile_warning_regex$"
        }
    }
}

object CheckCommand "linuxfabrik/logfile-sudo" {
    import "linuxfabrik/logfile"

    command = [ "/usr/bin/sudo", LinuxfabrikPluginDir + "/logfile" ]
}

object CheckCommand "linuxfabrik/mailq" {
    command = [ LinuxfabrikPluginDir + "/mailq" ]
    timeout = 10s
    arguments += {
        "--always-ok" = {
            set_if = "$mailq_always_ok$"
            description = "Always returns OK."
        }
        "--critical" = {
            value = "$mailq_critical$"
            description = "Set the critical threshold for mails in the queue. Default: 250"
        }
        "--warning" = {
            value = "$mailq_warning$"
            description = "Set the warning threshold for mails in the queue. Default: 2"
        }
    }
}

object CheckCommand "linuxfabrik/matomo-reporting" {
    command = [ LinuxfabrikPluginDir + "/matomo-reporting" ]
    timeout = 10s
    arguments += {
        "--always-ok" = {
            set_if = "$matomo_reporting_always_ok$"
            description = "Always returns OK."
        }
        "--date" = "$matomo_reporting_date$"
        "--idsite" = "$matomo_reporting_idsite$"
        "--insecure" = {
            set_if = "$matomo_reporting_insecure$"
        }
        "--metric" = {
            repeat_key = true
            value = "$matomo_reporting_metric$"
        }
        "--no-proxy" = {
            set_if = "$matomo_reporting_no_proxy$"
        }
        "--password" = "$matomo_reporting_password$"
        "--period" = "$matomo_reporting_period$"
        "--timeout" = "$matomo_reporting_timeout$"
        "--url" = "$matomo_reporting_url$"
    }
}

object CheckCommand "linuxfabrik/matomo-version" {
    command = [ LinuxfabrikPluginDir + "/matomo-version" ]
    timeout = 10s
    arguments += {
        "--always-ok" = {
            set_if = "$matomo_version_always_ok$"
            description = "Always returns OK."
        }
        "--cache-expire" = "$matomo_version_cache_expire$"
        "--path" = "$matomo_version_path$"
    }
}

object CheckCommand "linuxfabrik/memory-usage" {
    command = [ LinuxfabrikPluginDir + "/memory-usage" ]
    timeout = 10s
    arguments += {
        "--always-ok" = {
            set_if = "$memory_usage_always_ok$"
            description = "Always returns OK."
        }
        "--critical" = {
            value = "$memory_usage_critical$"
            description = "Set the critical threshold for memory usage (in percent). Default: 95"
        }
        "--warning" = {
            value = "$memory_usage_warning$"
            description = "Set the warning threshold for memory usage (in percent). Default: 90"
        }
    }
}

object CheckCommand "linuxfabrik/metabase-stats" {
    command = [ LinuxfabrikPluginDir + "/metabase-stats" ]
    timeout = 10s
    arguments += {
        "--cache-expire" = "$metabase_stats_cache_expire$"
        "--critical" = "$metabase_stats_critical$"
        "--password" = "$metabase_stats_password$"
        "--url" = "$metabase_stats_url$"
        "--username" = "$metabase_stats_username$"
        "--warning" = "$metabase_stats_warning$"
    }
}

object CheckCommand "linuxfabrik/mod-qos-stats" {
    command = [ LinuxfabrikPluginDir + "/mod-qos-stats" ]
    timeout = 10s
    arguments += {
        "--always-ok" = {
            set_if = "$mod_qos_stats_always_ok$"
            description = "Always returns OK."
        }
        "--url" = "$mod_qos_stats_url$"
    }
}

object CheckCommand "linuxfabrik/mydumper-version" {
    command = [ LinuxfabrikPluginDir + "/mydumper-version" ]
    timeout = 10s
    arguments += {
        "--always-ok" = {
            set_if = "$mydumper_version_always_ok$"
            description = "Always returns OK."
        }
        "--cache-expire" = "$mydumper_version_cache_expire$"
    }
}

object CheckCommand "linuxfabrik/mysql-aria" {
    command = [ LinuxfabrikPluginDir + "/mysql-aria" ]
    timeout = 10s
    arguments += {
        "--always-ok" = {
            set_if = "$mysql_aria_always_ok$"
            description = "Always returns OK."
        }
        "--defaults-file" = "$mysql_aria_defaults_file$"
        "--defaults-group" = "$mysql_aria_defaults_group$"
        "--timeout" = "$mysql_aria_timeout$"
    }
}

object CheckCommand "linuxfabrik/mysql-binlog-cache" {
    command = [ LinuxfabrikPluginDir + "/mysql-binlog-cache" ]
    timeout = 10s
    arguments += {
        "--always-ok" = {
            set_if = "$mysql_binlog_cache_always_ok$"
            description = "Always returns OK."
        }
        "--defaults-file" = "$mysql_binlog_cache_defaults_file$"
        "--defaults-group" = "$mysql_binlog_cache_defaults_group$"
        "--timeout" = "$mysql_binlog_cache_timeout$"
    }
}

object CheckCommand "linuxfabrik/mysql-connections" {
    command = [ LinuxfabrikPluginDir + "/mysql-connections" ]
    timeout = 10s
    arguments += {
        "--always-ok" = {
            set_if = "$mysql_connections_always_ok$"
            description = "Always returns OK."
        }
        "--defaults-file" = "$mysql_connections_defaults_file$"
        "--defaults-group" = "$mysql_connections_defaults_group$"
        "--ignore-name-resolution" = {
            set_if = "$mysql_connections_ignore_name_resolution$"
        }
        "--timeout" = "$mysql_connections_timeout$"
    }
}

object CheckCommand "linuxfabrik/mysql-database-metrics" {
    command = [ LinuxfabrikPluginDir + "/mysql-database-metrics" ]
    timeout = 10s
    arguments += {
        "--always-ok" = {
            set_if = "$mysql_database_metrics_always_ok$"
            description = "Always returns OK."
        }
        "--defaults-file" = "$mysql_database_metrics_defaults_file$"
        "--defaults-group" = "$mysql_database_metrics_defaults_group$"
        "--timeout" = "$mysql_database_metrics_timeout$"
    }
}

object CheckCommand "linuxfabrik/mysql-innodb-buffer-pool-instances" {
    command = [ LinuxfabrikPluginDir + "/mysql-innodb-buffer-pool-instances" ]
    timeout = 10s
    arguments += {
        "--always-ok" = {
            set_if = "$mysql_innodb_buffer_pool_instances_always_ok$"
            description = "Always returns OK."
        }
        "--defaults-file" = "$mysql_innodb_buffer_pool_instances_defaults_file$"
        "--defaults-group" = "$mysql_innodb_buffer_pool_instances_defaults_group$"
        "--timeout" = "$mysql_innodb_buffer_pool_instances_timeout$"
    }
}

object CheckCommand "linuxfabrik/mysql-innodb-buffer-pool-size" {
    command = [ LinuxfabrikPluginDir + "/mysql-innodb-buffer-pool-size" ]
    timeout = 10s
    arguments += {
        "--always-ok" = {
            set_if = "$mysql_innodb_buffer_pool_size_always_ok$"
            description = "Always returns OK."
        }
        "--defaults-file" = "$mysql_innodb_buffer_pool_size_defaults_file$"
        "--defaults-group" = "$mysql_innodb_buffer_pool_size_defaults_group$"
        "--timeout" = "$mysql_innodb_buffer_pool_size_timeout$"
    }
}

object CheckCommand "linuxfabrik/mysql-innodb-log-waits" {
    command = [ LinuxfabrikPluginDir + "/mysql-innodb-log-waits" ]
    timeout = 10s
    arguments += {
        "--always-ok" = {
            set_if = "$mysql_innodb_log_waits_always_ok$"
            description = "Always returns OK."
        }
        "--defaults-file" = "$mysql_innodb_log_waits_defaults_file$"
        "--defaults-group" = "$mysql_innodb_log_waits_defaults_group$"
        "--timeout" = "$mysql_innodb_log_waits_timeout$"
    }
}

object CheckCommand "linuxfabrik/mysql-joins" {
    command = [ LinuxfabrikPluginDir + "/mysql-joins" ]
    timeout = 10s
    arguments += {
        "--always-ok" = {
            set_if = "$mysql_joins_always_ok$"
            description = "Always returns OK."
        }
        "--defaults-file" = "$mysql_joins_defaults_file$"
        "--defaults-group" = "$mysql_joins_defaults_group$"
        "--timeout" = "$mysql_joins_timeout$"
    }
}

object CheckCommand "linuxfabrik/mysql-logfile" {
    command = [ "/usr/bin/sudo", LinuxfabrikPluginDir + "/mysql-logfile" ]
    timeout = 10s
    arguments += {
        "--always-ok" = {
            set_if = "$mysql_logfile_always_ok$"
            description = "Always returns OK."
        }
        "--cache-expire" = "$mysql_logfile_cache_expire$"
        "--defaults-file" = "$mysql_logfile_defaults_file$"
        "--defaults-group" = "$mysql_logfile_defaults_group$"
        "--hostname" = "$mysql_logfile_hostname$"
        "--ignore-pattern" = {
            repeat_key = true
            value = "$mysql_logfile_ignore_pattern$"
        }
        "--ignore-regex" = {
            repeat_key = true
            value = "$mysql_logfile_ignore_regex$"
        }
        "--port" = "$mysql_logfile_port$"
        "--server-log" = "$mysql_logfile_server_log$"
        "--timeout" = "$mysql_logfile_timeout$"
    }
}

object CheckCommand "linuxfabrik/mysql-memory" {
    command = [ LinuxfabrikPluginDir + "/mysql-memory" ]
    timeout = 10s
    arguments += {
        "--always-ok" = {
            set_if = "$mysql_memory_always_ok$"
            description = "Always returns OK."
        }
        "--defaults-file" = "$mysql_memory_defaults_file$"
        "--defaults-group" = "$mysql_memory_defaults_group$"
        "--timeout" = "$mysql_memory_timeout$"
    }
}

object CheckCommand "linuxfabrik/mysql-open-files" {
    command = [ LinuxfabrikPluginDir + "/mysql-open-files" ]
    timeout = 10s
    arguments += {
        "--always-ok" = {
            set_if = "$mysql_open_files_always_ok$"
            description = "Always returns OK."
        }
        "--defaults-file" = "$mysql_open_files_defaults_file$"
        "--defaults-group" = "$mysql_open_files_defaults_group$"
        "--timeout" = "$mysql_open_files_timeout$"
    }
}

object CheckCommand "linuxfabrik/mysql-perf-metrics" {
    command = [ LinuxfabrikPluginDir + "/mysql-perf-metrics" ]
    timeout = 10s
    arguments += {
        "--always-ok" = {
            set_if = "$mysql_perf_metrics_always_ok$"
            description = "Always returns OK."
        }
        "--defaults-file" = "$mysql_perf_metrics_defaults_file$"
        "--defaults-group" = "$mysql_perf_metrics_defaults_group$"
        "--timeout" = "$mysql_perf_metrics_timeout$"
    }
}

object CheckCommand "linuxfabrik/mysql-replica-status" {
    command = [ LinuxfabrikPluginDir + "/mysql-replica-status" ]
    timeout = 10s
    arguments += {
        "--always-ok" = {
            set_if = "$mysql_replica_status_always_ok$"
            description = "Always returns OK."
        }
        "--defaults-file" = "$mysql_replica_status_defaults_file$"
        "--defaults-group" = "$mysql_replica_status_defaults_group$"
        "--severity" = "$mysql_replica_status_severity$"
        "--timeout" = "$mysql_replica_status_timeout$"
    }
}

object CheckCommand "linuxfabrik/mysql-slow-queries" {
    command = [ LinuxfabrikPluginDir + "/mysql-slow-queries" ]
    timeout = 10s
    arguments += {
        "--always-ok" = {
            set_if = "$mysql_slow_queries_always_ok$"
            description = "Always returns OK."
        }
        "--defaults-file" = "$mysql_slow_queries_defaults_file$"
        "--defaults-group" = "$mysql_slow_queries_defaults_group$"
        "--timeout" = "$mysql_slow_queries_timeout$"
    }
}

object CheckCommand "linuxfabrik/mysql-sorts" {
    command = [ LinuxfabrikPluginDir + "/mysql-sorts" ]
    timeout = 10s
    arguments += {
        "--always-ok" = {
            set_if = "$mysql_sorts_always_ok$"
            description = "Always returns OK."
        }
        "--defaults-file" = "$mysql_sorts_defaults_file$"
        "--defaults-group" = "$mysql_sorts_defaults_group$"
        "--timeout" = "$mysql_sorts_timeout$"
    }
}

object CheckCommand "linuxfabrik/mysql-storage-engines" {
    command = [ LinuxfabrikPluginDir + "/mysql-storage-engines" ]
    timeout = 10s
    arguments += {
        "--always-ok" = {
            set_if = "$mysql_storage_engines_always_ok$"
            description = "Always returns OK."
        }
        "--defaults-file" = "$mysql_storage_engines_defaults_file$"
        "--defaults-group" = "$mysql_storage_engines_defaults_group$"
        "--timeout" = "$mysql_storage_engines_timeout$"
    }
}

object CheckCommand "linuxfabrik/mysql-system" {
    command = [ LinuxfabrikPluginDir + "/mysql-system" ]
    timeout = 10s
    arguments += {
        "--always-ok" = {
            set_if = "$mysql_system_always_ok$"
            description = "Always returns OK."
        }
        "--maxportsallowed" = "$mysql_system_maxportsallowed$"
    }
}

object CheckCommand "linuxfabrik/mysql-table-cache" {
    command = [ LinuxfabrikPluginDir + "/mysql-table-cache" ]
    timeout = 10s
    arguments += {
        "--always-ok" = {
            set_if = "$mysql_table_cache_always_ok$"
            description = "Always returns OK."
        }
        "--defaults-file" = "$mysql_table_cache_defaults_file$"
        "--defaults-group" = "$mysql_table_cache_defaults_group$"
        "--timeout" = "$mysql_table_cache_timeout$"
    }
}

object CheckCommand "linuxfabrik/mysql-table-definition-cache" {
    command = [ LinuxfabrikPluginDir + "/mysql-table-definition-cache" ]
    timeout = 10s
    arguments += {
        "--always-ok" = {
            set_if = "$mysql_table_definition_cache_always_ok$"
            description = "Always returns OK."
        }
        "--defaults-file" = "$mysql_table_definition_cache_defaults_file$"
        "--defaults-group" = "$mysql_table_definition_cache_defaults_group$"
        "--timeout" = "$mysql_table_definition_cache_timeout$"
    }
}

object CheckCommand "linuxfabrik/mysql-table-indexes" {
    command = [ LinuxfabrikPluginDir + "/mysql-table-indexes" ]
    timeout = 10s
    arguments += {
        "--always-ok" = {
            set_if = "$mysql_table_indexes_always_ok$"
            description = "Always returns OK."
        }
        "--defaults-file" = "$mysql_table_indexes_defaults_file$"
        "--defaults-group" = "$mysql_table_indexes_defaults_group$"
        "--timeout" = "$mysql_table_indexes_timeout$"
    }
}

object CheckCommand "linuxfabrik/mysql-table-locks" {
    command = [ LinuxfabrikPluginDir + "/mysql-table-locks" ]
    timeout = 10s
    arguments += {
        "--always-ok" = {
            set_if = "$mysql_table_locks_always_ok$"
            description = "Always returns OK."
        }
        "--defaults-file" = "$mysql_table_locks_defaults_file$"
        "--defaults-group" = "$mysql_table_locks_defaults_group$"
        "--timeout" = "$mysql_table_locks_timeout$"
    }
}

object CheckCommand "linuxfabrik/mysql-temp-tables" {
    command = [ LinuxfabrikPluginDir + "/mysql-temp-tables" ]
    timeout = 10s
    arguments += {
        "--always-ok" = {
            set_if = "$mysql_temp_tables_always_ok$"
            description = "Always returns OK."
        }
        "--defaults-file" = "$mysql_temp_tables_defaults_file$"
        "--defaults-group" = "$mysql_temp_tables_defaults_group$"
        "--timeout" = "$mysql_temp_tables_timeout$"
    }
}

object CheckCommand "linuxfabrik/mysql-thread-cache" {
    command = [ LinuxfabrikPluginDir + "/mysql-thread-cache" ]
    timeout = 10s
    arguments += {
        "--always-ok" = {
            set_if = "$mysql_thread_cache_always_ok$"
            description = "Always returns OK."
        }
        "--defaults-file" = "$mysql_thread_cache_defaults_file$"
        "--defaults-group" = "$mysql_thread_cache_defaults_group$"
        "--timeout" = "$mysql_thread_cache_timeout$"
    }
}

object CheckCommand "linuxfabrik/mysql-traffic" {
    command = [ LinuxfabrikPluginDir + "/mysql-traffic" ]
    timeout = 10s
    arguments += {
        "--defaults-file" = "$mysql_traffic_defaults_file$"
        "--defaults-group" = "$mysql_traffic_defaults_group$"
        "--timeout" = "$mysql_traffic_timeout$"
    }
}

object CheckCommand "linuxfabrik/mysql-user-security" {
    command = [ LinuxfabrikPluginDir + "/mysql-user-security" ]
    timeout = 10s
    arguments += {
        "--always-ok" = {
            set_if = "$mysql_user_security_always_ok$"
            description = "Always returns OK."
        }
        "--defaults-file" = "$mysql_user_security_defaults_file$"
        "--defaults-group" = "$mysql_user_security_defaults_group$"
        "--severity" = "$mysql_user_security_severity$"
        "--timeout" = "$mysql_user_security_timeout$"
    }
}

object CheckCommand "linuxfabrik/mysql-version" {
    command = [ LinuxfabrikPluginDir + "/mysql-version" ]
    timeout = 10s
    arguments += {
        "--always-ok" = {
            set_if = "$mysql_version_always_ok$"
            description = "Always returns OK."
        }
        "--check-major" = {
            set_if = "$mysql_version_check_major$"
        }
        "--check-minor" = {
            set_if = "$mysql_version_check_minor$"
        }
        "--check-patch" = {
            set_if = "$mysql_version_check_patch$"
        }
        "--offset-eol" = "$mysql_version_offset_eol$"
    }
}

object CheckCommand "linuxfabrik/needs-restarting" {
    command = [ "/usr/bin/sudo", LinuxfabrikPluginDir + "/needs-restarting" ]
    timeout = 45s
}

object CheckCommand "linuxfabrik/network-bonding" {
    command = [ "/usr/bin/sudo", LinuxfabrikPluginDir + "/network-bonding" ]
    timeout = 10s
    arguments += {
        "--always-ok" = {
            set_if = "$network_bonding_always_ok$"
            description = "Always returns OK."
        }
    }
}

object CheckCommand "linuxfabrik/network-connections" {
    command = [ LinuxfabrikPluginDir + "/network-connections" ]
    timeout = 10s
    arguments += {
        "--conn-status" = {
            repeat_key = true
            value = "$network_connections_conn_status$"
            description = "Filter the status (all,close,close_wait,closing,established,fin_wait1,fin_wait2,last_ack,listen,none,syn_recv,syn_sent,time_wait) of the connections (repeating). Default: None"
        }
        "--conn-type" = {
            repeat_key = true
            value = "$network_connections_conn_type$"
            description = "Filter the family/type (all,tcp,tcp6,udp,udp6) of the connections (repeating). Default: None"
        }
        "--critical" = {
            value = "$network_connections_critical$"
            description = "Threshold for the number of connections. Type: None or Range. Default: None"
        }
        "--warning" = {
            value = "$network_connections_warning$"
            description = "Threshold for the number of connections. Type: None or Range. Default: None"
        }
    }
}

object CheckCommand "linuxfabrik/network-io" {
    command = [ LinuxfabrikPluginDir + "/network-io" ]
    timeout = 10s
    arguments += {
        "--always-ok" = {
            set_if = "$network_io_always_ok$"
            description = "Always returns OK."
        }
        "--count" = {
            value = "$network_io_count$"
            description = "Number of times the value has to be above the given thresholds. Default: 5"
        }
        "--critical" = {
            value = "$network_io_critical$"
            description = "Set the CRIT threshold for network I/O rx/tx rate over the entire period as a percentage of the maximum network I/O rate. Default: >= 90"
        }
        "--ignore" = {
            repeat_key = true
            value = "$network_io_ignore$"
            description = "Ignore network interfaces starting with a string like 'tun' (repeating). Default: ['lo']"
        }
        "--warning" = {
            value = "$network_io_warning$"
            description = "Set the CRIT threshold for network I/O rx/tx rate over the entire period as a percentage of the maximum network I/O rate. Default: >= 80"
        }
    }
}

object CheckCommand "linuxfabrik/network-port-tcp" {
    command = [ LinuxfabrikPluginDir + "/network-port-tcp" ]
    timeout = 10s
    arguments += {
        "--hostname" = "$network_port_tcp_hostname$"
        "--port" = "$network_port_tcp_port$"
        "--portname" = "$network_port_tcp_portname$"
        "--severity" = "$network_port_tcp_severity$"
        "--timeout" = "$network_port_tcp_timeout$"
        "--type" = "$network_port_tcp_type$"
    }
}

object CheckCommand "linuxfabrik/nextcloud-security-scan" {
    command = [ LinuxfabrikPluginDir + "/nextcloud-security-scan" ]
    timeout = 30s
    arguments += {
        "--timeout" = "$nextcloud_security_scan_timeout$"
        "--trigger" = "$nextcloud_security_scan_trigger$"
        "--url" = "$nextcloud_security_scan_url$"
    }
}

object CheckCommand "linuxfabrik/nextcloud-stats" {
    command = [ LinuxfabrikPluginDir + "/nextcloud-stats" ]
    timeout = 30s
    arguments += {
        "--insecure" = {
            set_if = "$nextcloud_stats_insecure$"
        }
        "--no-proxy" = {
            set_if = "$nextcloud_stats_no_proxy$"
        }
        "--password" = "$nextcloud_stats_password$"
        "--url" = "$nextcloud_stats_url$"
        "--username" = "$nextcloud_stats_username$"
    }
}

object CheckCommand "linuxfabrik/nextcloud-version" {
    command = [ "/usr/bin/sudo", LinuxfabrikPluginDir + "/nextcloud-version"
    ]
    timeout = 10s
    arguments += {
        "--always-ok" = {
            set_if = "$nextcloud_version_always_ok$"
            description = "Always returns OK."
        }
        "--check-major" = {
            set_if = "$nextcloud_version_check_major$"
        }
        "--check-minor" = {
            set_if = "$nextcloud_version_check_minor$"
        }
        "--check-patch" = {
            set_if = "$nextcloud_version_check_patch$"
        }
        "--offset-eol" = "$nextcloud_version_offset_eol$"
        "--path" = "$nextcloud_version_path$"
    }
}

object CheckCommand "linuxfabrik/nginx-status" {
    command = [ LinuxfabrikPluginDir + "/nginx-status" ]
    timeout = 10s
    arguments += {
        "--always-ok" = {
            set_if = "$nginx_status_always_ok$"
            description = "Always returns OK."
        }
        "--critical" = "$nginx_status_critical$"
        "--url" = "$nginx_status_url$"
        "--warning" = "$nginx_status_warning$"
    }
}

object CheckCommand "linuxfabrik/nodebb-cache" {
    command = [ LinuxfabrikPluginDir + "/nodebb-cache" ]
    timeout = 10s
    arguments += {
        "--always-ok" = {
            set_if = "$nodebb_cache_always_ok$"
            description = "Always returns OK."
        }
        "--critical" = "$nodebb_cache_critical$"
        "--insecure" = {
            set_if = "$nodebb_cache_insecure$"
        }
        "--severity" = "$nodebb_cache_severity$"
        "--timeout" = "$nodebb_cache_timeout$"
        "--token" = "$nodebb_cache_token$"
        "--url" = "$nodebb_cache_url$"
        "--warning" = "$nodebb_cache_warning$"
    }
}

object CheckCommand "linuxfabrik/nodebb-database" {
    command = [ LinuxfabrikPluginDir + "/nodebb-database" ]
    timeout = 10s
    arguments += {
        "--always-ok" = {
            set_if = "$nodebb_database_always_ok$"
            description = "Always returns OK."
        }
        "--critical" = "$nodebb_database_critical$"
        "--insecure" = {
            set_if = "$nodebb_database_insecure$"
        }
        "--severity" = "$nodebb_database_severity$"
        "--timeout" = "$nodebb_database_timeout$"
        "--token" = "$nodebb_database_token$"
        "--url" = "$nodebb_database_url$"
        "--warning" = "$nodebb_database_warning$"
    }
}

object CheckCommand "linuxfabrik/nodebb-errors" {
    command = [ LinuxfabrikPluginDir + "/nodebb-errors" ]
    timeout = 10s
    arguments += {
        "--always-ok" = {
            set_if = "$nodebb_errors_always_ok$"
            description = "Always returns OK."
        }
        "--insecure" = {
            set_if = "$nodebb_errors_insecure$"
        }
        "--severity" = "$nodebb_errors_severity$"
        "--timeout" = "$nodebb_errors_timeout$"
        "--token" = "$nodebb_errors_token$"
        "--url" = "$nodebb_errors_url$"
    }
}

object CheckCommand "linuxfabrik/nodebb-events" {
    command = [ LinuxfabrikPluginDir + "/nodebb-events" ]
    timeout = 10s
    arguments += {
        "--insecure" = {
            set_if = "$nodebb_events_insecure$"
        }
        "--timeout" = "$nodebb_events_timeout$"
        "--token" = "$nodebb_events_token$"
        "--url" = "$nodebb_events_url$"
    }
}

object CheckCommand "linuxfabrik/nodebb-groups" {
    command = [ LinuxfabrikPluginDir + "/nodebb-groups" ]
    timeout = 10s
    arguments += {
        "--insecure" = {
            set_if = "$nodebb_groups_insecure$"
        }
        "--timeout" = "$nodebb_groups_timeout$"
        "--token" = "$nodebb_groups_token$"
        "--url" = "$nodebb_groups_url$"
    }
}

object CheckCommand "linuxfabrik/nodebb-info" {
    command = [ LinuxfabrikPluginDir + "/nodebb-info" ]
    timeout = 10s
    arguments += {
        "--always-ok" = {
            set_if = "$nodebb_info_always_ok$"
            description = "Always returns OK."
        }
        "--critical" = "$nodebb_info_critical$"
        "--insecure" = {
            set_if = "$nodebb_info_insecure$"
        }
        "--timeout" = "$nodebb_info_timeout$"
        "--token" = "$nodebb_info_token$"
        "--url" = "$nodebb_info_url$"
        "--warning" = "$nodebb_info_warning$"
    }
}

object CheckCommand "linuxfabrik/nodebb-users" {
    command = [ LinuxfabrikPluginDir + "/nodebb-users" ]
    timeout = 10s
    arguments += {
        "--always-ok" = {
            set_if = "$nodebb_users_always_ok$"
            description = "Always returns OK."
        }
        "--insecure" = {
            set_if = "$nodebb_users_insecure$"
        }
        "--severity" = "$nodebb_users_severity$"
        "--timeout" = "$nodebb_users_timeout$"
        "--token" = "$nodebb_users_token$"
        "--url" = "$nodebb_users_url$"
    }
}

object CheckCommand "linuxfabrik/nodebb-version" {
    command = [ LinuxfabrikPluginDir + "/nodebb-version" ]
    timeout = 10s
    arguments += {
        "--always-ok" = {
            set_if = "$nodebb_version_always_ok$"
            description = "Always returns OK."
        }
        "--insecure" = {
            set_if = "$nodebb_version_insecure$"
        }
        "--timeout" = "$nodebb_version_timeout$"
        "--token" = "$nodebb_version_token$"
        "--url" = "$nodebb_version_url$"
    }
}

object CheckCommand "linuxfabrik/ntp-chronyd" {
    command = [ LinuxfabrikPluginDir + "/ntp-chronyd" ]
    timeout = 10s
    arguments += {
        "--critical" = {
            value = "$ntp_chronyd_critical$"
            description = "Set the critical threshold for the ntp time offset, in ms. Default: 86400000ms"
        }
        "--warning" = {
            value = "$ntp_chronyd_warning$"
            description = "Set the warning threshold for the ntp time offset, in ms. Default: 800ms"
        }
    }
}

object CheckCommand "linuxfabrik/ntp-ntpd" {
    command = [ LinuxfabrikPluginDir + "/ntp-ntpd" ]
    timeout = 10s
    arguments += {
        "--critical" = {
            value = "$ntp_ntpd_critical$"
            description = "Set the critical threshold for the ntp time offset, in ms. Default: 86400000ms"
        }
        "--warning" = {
            value = "$ntp_ntpd_warning$"
            description = "Set the warning threshold for the ntp time offset, in ms. Default: 800ms"
        }
    }
}

object CheckCommand "linuxfabrik/ntp-systemd-timesyncd" {
    command = [ LinuxfabrikPluginDir + "/ntp-systemd-timesyncd" ]
    timeout = 10s
}

object CheckCommand "linuxfabrik/onlyoffice-stats" {
    command = [ LinuxfabrikPluginDir + "/onlyoffice-stats" ]
    timeout = 10s
    arguments += {
        "--timeout" = "$onlyoffice_stats_timeout$"
        "--url" = "$onlyoffice_stats_url$"
    }
}

object CheckCommand "linuxfabrik/openstack-nova-list" {
    command = [ LinuxfabrikPluginDir + "/openstack-nova-list" ]
    timeout = 10s
    arguments += {
        "--always-ok" = {
            set_if = "$openstack_nova_list_always_ok$"
            description = "Always returns OK."
        }
        "--rc-file" = "$openstack_nova_list_rc_file$"
    }
}

object CheckCommand "linuxfabrik/openstack-swift-stat" {
    command = [ LinuxfabrikPluginDir + "/openstack-swift-stat" ]
    timeout = 1m
    arguments += {
        "--always-ok" = {
            set_if = "$openstack_swift_stat_always_ok$"
            description = "Always returns OK."
        }
        "--critical" = "$openstack_swift_stat_critical$"
        "--rc-file" = "$openstack_swift_stat_rc_file$"
        "--warning" = "$openstack_swift_stat_warning$"
    }
}

object CheckCommand "linuxfabrik/openvpn-client-list" {
    command = [ "/usr/bin/sudo", LinuxfabrikPluginDir + "/openvpn-client-list" ]
    timeout = 10s
    arguments += {
        "--critical" = "$openvpn_client_list_critical$"
        "--filename" = "$openvpn_client_list_filename$"
        "--warning" = "$openvpn_client_list_warning$"
    }
}

object CheckCommand "linuxfabrik/path-rw-test" {
    command = [ LinuxfabrikPluginDir + "/path-rw-test" ]
    timeout = 10s
    arguments += {
        "--always-ok" = {
            set_if = "$path_rw_test_always_ok$"
            description = "Always returns OK."
        }
        "--path" = {
            repeat_key = true
            value = "$path_rw_test_path$"
        }
        "--severity" = "$path_rw_test_severity$"
    }
}

object CheckCommand "linuxfabrik/path-rw-test-sudo" {
    import "linuxfabrik/path-rw-test"
    command = [ "/usr/bin/sudo", LinuxfabrikPluginDir + "/path-rw-test" ]
}

object CheckCommand "linuxfabrik/php-fpm-ping" {
    command = [ LinuxfabrikPluginDir + "/php-fpm-ping" ]
    timeout = 10s
    arguments += {
        "--always-ok" = {
            set_if = "$php_fpm_ping_always_ok$"
            description = "Always returns OK."
        }
        "--response" = "$php_fpm_ping_response$"
        "--severity" = "$php_fpm_ping_severity$"
        "--url" = "$php_fpm_ping_url$"
    }
}

object CheckCommand "linuxfabrik/php-fpm-status" {
    command = [ LinuxfabrikPluginDir + "/php-fpm-status" ]
    timeout = 10s
    arguments += {
        "--always-ok" = {
            set_if = "$php_fpm_status_always_ok$"
            description = "Always returns OK."
        }
        "--critical" = "$php_fpm_status_critical$"
        "--critical-maxchildren" = "$php_fpm_status_critical_maxchildren$"
        "--critical-slowreq" = "$php_fpm_status_critical_slowreq$"
        "--url" = "$php_fpm_status_url$"
        "--warning" = "$php_fpm_status_warning$"
        "--warning-maxchildren" = "$php_fpm_status_warning_maxchildren$"
        "--warning-slowreq" = "$php_fpm_status_warning_slowreq$"
    }
}

object CheckCommand "linuxfabrik/php-status" {
    command = [ "/usr/bin/sudo", LinuxfabrikPluginDir + "/php-status" ]
    timeout = 10s
    arguments += {
        "--always-ok" = {
            set_if = "$php_status_always_ok$"
            description = "Always returns OK."
        }
        "--config" = {
            repeat_key = true
            value = "$php_status_config$"
        }
        "--critical" = "$php_status_critical$"
        "--dev" = {
            set_if = "$php_status_dev$"
        }
        "--module" = {
            repeat_key = true
            value = "$php_status_module$"
        }
        "--url" = "$php_status_url$"
        "--warning" = "$php_status_warning$"
    }
}

object CheckCommand "linuxfabrik/php-version" {
    command = [ LinuxfabrikPluginDir + "/php-version" ]
    timeout = 10s
    arguments += {
        "--always-ok" = {
            set_if = "$php_version_always_ok$"
            description = "Always returns OK."
        }
        "--check-major" = {
            set_if = "$php_version_check_major$"
        }
        "--check-minor" = {
            set_if = "$php_version_check_minor$"
        }
        "--check-patch" = {
            set_if = "$php_version_check_patch$"
        }
        "--offset-eol" = "$php_version_offset_eol$"
        "--path" = "$php_version_path$"
    }
}

object CheckCommand "linuxfabrik/ping" {
    command = [ LinuxfabrikPluginDir + "/ping" ]
    timeout = 10s
    arguments += {
        "--always-ok" = {
            set_if = "$ping_always_ok$"
            description = "Always returns OK."
        }
        "--count" = {
            value = "$ping_count$"
            description = "Stop after sending count ECHO_REQUEST packets. Default: 5"
        }
        "--hostname" = {
            value = "$ping_hostname$"
            description = "The ping destination. Default: 127.0.0.1"
        }
        "--interval" = {
            value = "$ping_interval$"
            description = "Wait interval seconds between sending each packet. Real number allowed with dot as a decimal separator (regardless locale setup). Default: 0.2"
        }
        "--timeout" = {
            value = "$ping_timeout$"
            description = "pecify a timeout, in seconds, before ping exits regardless of how many packets have been sent or received. Default: 5"
        }
    }
}

object CheckCommand "linuxfabrik/pip-updates" {
    command = [ LinuxfabrikPluginDir + "/pip-updates" ]
    timeout = 1m
    arguments += {
        "--always-ok" = {
            set_if = "$pip_updates_always_ok$"
            description = "Always returns OK."
        }
        "--critical" = "$pip_updates_critical$"
        "--exclude" = {
            repeat_key = true
            value = "$pip_updates_exclude$"
        }
        "--extra-index-url" = {
            repeat_key = true
            value = "$pip_updates_extra_index_url$"
        }
        "--find-links" = {
            repeat_key = true
            value = "$pip_updates_find_links$"
        }
        "--index-url" = "$pip_updates_index_url$"
        "--local" = {
            set_if = "$pip_updates_local$"
        }
        "--no-index" = {
            set_if = "$pip_updates_no_index$"
        }
        "--not-required" = {
            set_if = "$pip_updates_not_required$"
        }
        "--pre" = {
            set_if = "$pip_updates_pre$"
        }
        "--user" = {
            set_if = "$pip_updates_user$"
        }
        "--virtualenv" = "$pip_updates_virtualenv$"
        "--warning" = "$pip_updates_warning$"
    }
}

object CheckCommand "linuxfabrik/postfix-version" {
    command = [ LinuxfabrikPluginDir + "/postfix-version" ]
    timeout = 10s
    arguments += {
        "--always-ok" = {
            set_if = "$postfix_version_always_ok$"
            description = "Always returns OK."
        }
        "--check-major" = {
            set_if = "$postfix_version_check_major$"
        }
        "--check-minor" = {
            set_if = "$postfix_version_check_minor$"
        }
        "--check-patch" = {
            set_if = "$postfix_version_check_patch$"
        }
        "--offset-eol" = "$postfix_version_offset_eol$"
    }
}

object CheckCommand "linuxfabrik/postgresql-version" {
    command = [ LinuxfabrikPluginDir + "/postgresql-version" ]
    timeout = 10s
    arguments += {
        "--always-ok" = {
            set_if = "$postgresql_version_always_ok$"
            description = "Always returns OK."
        }
        "--check-major" = {
            set_if = "$postgresql_version_check_major$"
        }
        "--check-minor" = {
            set_if = "$postgresql_version_check_minor$"
        }
        "--check-patch" = {
            set_if = "$postgresql_version_check_patch$"
        }
        "--offset-eol" = "$postgresql_version_offset_eol$"
        "--username" = "$postgresql_version_username$"
    }
}

object CheckCommand "linuxfabrik/procs" {
    command = [ LinuxfabrikPluginDir + "/procs" ]
    timeout = 10s
    arguments += {
        "--always-ok" = {
            set_if = "$procs_always_ok$"
            description = "Always returns OK."
        }
        "--argument" = {
            value = "$procs_argument$"
            description = "Filter: Search only for processes containing ARGUMENT in the command, for example `-s` (case-insensitive)."
        }
        "--command" = {
            value = "$procs_command$"
            description = "Filter: Search only for processes starting with COMMAND, for example `bash` (without path, case-insensitive)."
        }
        "--critical" = {
            value = "$procs_critical$"
            description = "Threshold for the number of processes. Type: None or Range. Default: None"
        }
        "--critical-age" = {
            value = "$procs_critical_age$"
            description = "Threshold for age of the process, in seconds. Type: None or Range. Default: None"
        }
        "--critical-mem" = {
            value = "$procs_critical_mem$"
            description = "Threshold for memory usage, in bytes. Type: None or Range. Default: None"
        }
        "--critical-mem-percent" = {
            value = "$procs_critical_mem_percent$"
            description = "Threshold for memory usage, in percent. Type: None or Range. Default: None"
        }
        "--no-kthreads" = {
            set_if = "$procs_no_kthreads$"
            description = "Filter: Only scan for non kernel threads (works on Linux only). Default: False"
        }
        "--status" = {
            value = "$procs_status$"
            description = "Filter: Search only for processes that have a specific status (dead,disk-sleep,idle,locked,parked,running,sleeping,stopped,suspended,tracing-stop,waiting,wake-kill,waking,zombie). Default: None"
        }
        "--username" = {
            value = "$procs_username$"
            description = "Filter: Search only for processes with specific user name, e.g. `apache` (case-insensitive)."
        }
        "--warning" = {
            value = "$procs_warning$"
            description = "Threshold for the number of processes. Type: None or Range. Default: None"
        }
        "--warning-age" = {
            value = "$procs_warning_age$"
            description = "Threshold for age of the process, in seconds. Type: None or Range. Default: None"
        }
        "--warning-mem" = {
            value = "$procs_warning_mem$"
            description = "Threshold for memory usage, in bytes. Type: None or Range. Default: None"
        }
        "--warning-mem-percent" = {
            value = "$procs_warning_mem_percent$"
            description = "Threshold for memory usage, in percent. Type: None or Range. Default: None"
        }
    }
}

object CheckCommand "linuxfabrik/python-version" {
    command = [ LinuxfabrikPluginDir + "/python-version" ]
    timeout = 10s
    arguments += {
        "--always-ok" = {
            set_if = "$python_version_always_ok$"
            description = "Always returns OK."
        }
        "--check-major" = {
            set_if = "$python_version_check_major$"
        }
        "--check-minor" = {
            set_if = "$python_version_check_minor$"
        }
        "--check-patch" = {
            set_if = "$python_version_check_patch$"
        }
        "--offset-eol" = "$python_version_offset_eol$"
        "--path" = "$python_version_path$"
    }
}

object CheckCommand "linuxfabrik/qts-cpu-usage" {
    command = [ LinuxfabrikPluginDir + "/qts-cpu-usage" ]
    timeout = 10s
    arguments += {
        "--always-ok" = {
            set_if = "$qts_cpu_usage_always_ok$"
            description = "Always returns OK."
        }
        "--count" = "$qts_cpu_usage_count$"
        "--critical" = "$qts_cpu_usage_critical$"
        "--insecure" = {
            set_if = "$qts_cpu_usage_insecure$"
        }
        "--no-proxy" = {
            set_if = "$qts_cpu_usage_no_proxy$"
        }
        "--password" = "$qts_cpu_usage_password$"
        "--timeout" = "$qts_cpu_usage_timeout$"
        "--url" = "$qts_cpu_usage_url$"
        "--username" = "$qts_cpu_usage_username$"
        "--warning" = "$qts_cpu_usage_warning$"
    }
}

object CheckCommand "linuxfabrik/qts-disk-smart" {
    command = [ LinuxfabrikPluginDir + "/qts-disk-smart" ]
    timeout = 10s
    arguments += {
        "--always-ok" = {
            set_if = "$qts_disk_smart_always_ok$"
            description = "Always returns OK."
        }
        "--insecure" = {
            set_if = "$qts_disk_smart_insecure$"
        }
        "--no-proxy" = {
            set_if = "$qts_disk_smart_no_proxy$"
        }
        "--password" = "$qts_disk_smart_password$"
        "--timeout" = "$qts_disk_smart_timeout$"
        "--url" = "$qts_disk_smart_url$"
        "--username" = "$qts_disk_smart_username$"
    }
}

object CheckCommand "linuxfabrik/qts-memory-usage" {
    command = [ LinuxfabrikPluginDir + "/qts-memory-usage" ]
    timeout = 10s
    arguments += {
        "--always-ok" = {
            set_if = "$qts_memory_usage_always_ok$"
            description = "Always returns OK."
        }
        "--critical" = "$qts_memory_usage_critical$"
        "--insecure" = {
            set_if = "$qts_memory_usage_insecure$"
        }
        "--no-proxy" = {
            set_if = "$qts_memory_usage_no_proxy$"
        }
        "--password" = "$qts_memory_usage_password$"
        "--timeout" = "$qts_memory_usage_timeout$"
        "--url" = "$qts_memory_usage_url$"
        "--username" = "$qts_memory_usage_username$"
        "--warning" = "$qts_memory_usage_warning$"
    }
}

object CheckCommand "linuxfabrik/qts-temperatures" {
    command = [ LinuxfabrikPluginDir + "/qts-temperatures" ]
    timeout = 10s
    arguments += {
        "--always-ok" = {
            set_if = "$qts_temperatures_always_ok$"
            description = "Always returns OK."
        }
        "--insecure" = {
            set_if = "$qts_temperatures_insecure$"
        }
        "--no-proxy" = {
            set_if = "$qts_temperatures_no_proxy$"
        }
        "--password" = "$qts_temperatures_password$"
        "--timeout" = "$qts_temperatures_timeout$"
        "--url" = "$qts_temperatures_url$"
        "--username" = "$qts_temperatures_username$"
    }
}

object CheckCommand "linuxfabrik/qts-uptime" {
    command = [ LinuxfabrikPluginDir + "/qts-uptime" ]
    timeout = 10s
    arguments += {
        "--insecure" = {
            set_if = "$qts_uptime_insecure$"
        }
        "--no-proxy" = {
            set_if = "$qts_uptime_no_proxy$"
        }
        "--password" = "$qts_uptime_password$"
        "--timeout" = "$qts_uptime_timeout$"
        "--url" = "$qts_uptime_url$"
        "--username" = "$qts_uptime_username$"
    }
}

object CheckCommand "linuxfabrik/qts-version" {
    command = [ LinuxfabrikPluginDir + "/qts-version" ]
    timeout = 31s
    arguments += {
        "--always-ok" = {
            set_if = "$qts_version_always_ok$"
            description = "Always returns OK."
        }
        "--insecure" = {
            set_if = "$qts_version_insecure$"
        }
        "--no-proxy" = {
            set_if = "$qts_version_no_proxy$"
        }
        "--password" = "$qts_version_password$"
        "--timeout" = "$qts_version_timeout$"
        "--url" = "$qts_version_url$"
        "--username" = "$qts_version_username$"
    }
}

object CheckCommand "linuxfabrik/redfish-drives" {
    command = [ LinuxfabrikPluginDir + "/redfish-drives" ]
    timeout = 30s
    arguments += {
        "--always-ok" = {
            set_if = "$redfish_drives_always_ok$"
            description = "Always returns OK."
        }
        "--password" = "$redfish_drives_password$"
        "--url" = "$redfish_drives_url$"
        "--username" = "$redfish_drives_username$"
    }
}

object CheckCommand "linuxfabrik/redfish-sel" {
    command = [ LinuxfabrikPluginDir + "/redfish-sel" ]
    timeout = 10s
    arguments += {
        "--always-ok" = {
            set_if = "$redfish_sel_always_ok$"
            description = "Always returns OK."
        }
        "--password" = "$redfish_sel_password$"
        "--url" = "$redfish_sel_url$"
        "--username" = "$redfish_sel_username$"
    }
}

object CheckCommand "linuxfabrik/redfish-sensor" {
    command = [ LinuxfabrikPluginDir + "/redfish-sensor" ]
    timeout = 30s
    arguments += {
        "--always-ok" = {
            set_if = "$redfish_sensor_always_ok$"
            description = "Always returns OK."
        }
        "--password" = "$redfish_sensor_password$"
        "--url" = "$redfish_sensor_url$"
        "--username" = "$redfish_sensor_username$"
    }
}

object CheckCommand "linuxfabrik/redis-status" {
    command = [ LinuxfabrikPluginDir + "/redis-status" ]
    timeout = 10s
    arguments += {
        "--always-ok" = {
            set_if = "$redis_status_always_ok$"
            description = "Always returns OK."
        }
        "--critical" = "$redis_status_critical$"
        "--hostname" = "$redis_status_hostname$"
        "--ignore-maxmemory0" = {
            set_if = "$redis_status_ignore_maxmemory0$"
        }
        "--ignore-overcommit" = {
            set_if = "$redis_status_ignore_overcommit$"
        }
        "--ignore-somaxconn" = {
            set_if = "$redis_status_ignore_somaxconn$"
        }
        "--ignore-sync-partial-err" = {
            set_if = "$redis_status_ignore_sync_partial_err$"
        }
        "--ignore-thp" = {
            set_if = "$redis_status_ignore_thp$"
        }
        "--password" = "$redis_status_password$"
        "--port" = "$redis_status_port$"
        "--socket" = "$redis_status_socket$"
        "--warning" = "$redis_status_warning$"
    }
}

object CheckCommand "linuxfabrik/redis-version" {
    command = [ LinuxfabrikPluginDir + "/redis-version" ]
    timeout = 10s
    arguments += {
        "--always-ok" = {
            set_if = "$redis_version_always_ok$"
            description = "Always returns OK."
        }
        "--check-major" = {
            set_if = "$redis_version_check_major$"
        }
        "--check-minor" = {
            set_if = "$redis_version_check_minor$"
        }
        "--check-patch" = {
            set_if = "$redis_version_check_patch$"
        }
        "--offset-eol" = "$redis_version_offset_eol$"
    }
}

object CheckCommand "linuxfabrik/restic-check" {
    command = [ "/usr/bin/sudo", LinuxfabrikPluginDir + "/restic-check" ]
    timeout = 5m
    arguments += {
        "--password-file" = "$restic_check_password_file$"
        "--repo" = "$restic_check_repo$"
    }
}

object CheckCommand "linuxfabrik/restic-snapshots" {
    command = [ "/usr/bin/sudo", LinuxfabrikPluginDir + "/restic-snapshots" ]
    timeout = 5m
    arguments += {
        "--critical" = "$restic_snapshots_critical$"
        "--group-by" = "$restic_snapshots_group_by$"
        "--host" = {
            repeat_key = true
            value = "$restic_snapshots_host$"
        }
        "--latest" = "$restic_snapshots_latest$"
        "--lengthy" = {
            set_if = "$restic_snapshots_lengthy$"
        }
        "--password-file" = "$restic_snapshots_password_file$"
        "--path" = {
            repeat_key = true
            value = "$restic_snapshots_path$"
        }
        "--repo" = "$restic_snapshots_repo$"
        "--tag" = {
            repeat_key = true
            value = "$restic_snapshots_tag$"
        }
        "--warning" = "$restic_snapshots_warning$"
    }
}

object CheckCommand "linuxfabrik/restic-stats" {
    command = [ "/usr/bin/sudo", LinuxfabrikPluginDir + "/restic-stats" ]
    timeout = 5m
    arguments += {
        "--host" = {
            repeat_key = true
            value = "$restic_stats_host$"
        }
        "--mode" = "$restic_stats_mode$"
        "--password-file" = "$restic_stats_password_file$"
        "--path" = {
            repeat_key = true
            value = "$restic_stats_path$"
        }
        "--repo" = "$restic_stats_repo$"
        "--tag" = {
            repeat_key = true
            value = "$restic_stats_tag$"
        }
    }
}

object CheckCommand "linuxfabrik/rhel-version" {
    command = [ LinuxfabrikPluginDir + "/rhel-version" ]
    timeout = 10s
    arguments += {
        "--always-ok" = {
            set_if = "$rhel_version_always_ok$"
            description = "Always returns OK."
        }
        "--check-major" = {
            set_if = "$rhel_version_check_major$"
        }
        "--check-minor" = {
            set_if = "$rhel_version_check_minor$"
        }
        "--check-patch" = {
            set_if = "$rhel_version_check_patch$"
        }
        "--offset-eol" = "$rhel_version_offset_eol$"
    }
}

object CheckCommand "linuxfabrik/rocketchat-stats" {
    command = [ LinuxfabrikPluginDir + "/rocketchat-stats" ]
    timeout = 10s
    arguments += {
        "--password" = "$rocketchat_stats_password$"
        "--url" = "$rocketchat_stats_url$"
        "--username" = "$rocketchat_stats_username$"
    }
}

object CheckCommand "linuxfabrik/rocketchat-version" {
    command = [ LinuxfabrikPluginDir + "/rocketchat-version" ]
    timeout = 10s
    arguments += {
        "--always-ok" = {
            set_if = "$rocketchat_version_always_ok$"
            description = "Always returns OK."
        }
        "--cache-expire" = "$rocketchat_version_cache_expire$"
        "--password" = "$rocketchat_version_password$"
        "--url" = "$rocketchat_version_url$"
        "--username" = "$rocketchat_version_username$"
    }
}

object CheckCommand "linuxfabrik/rpm-lastactivity" {
    command = [ LinuxfabrikPluginDir + "/rpm-lastactivity" ]
    timeout = 1m
    arguments += {
        "--critical" = "$rpm_lastactivity_critical$"
        "--warning" = "$rpm_lastactivity_warning$"
    }
}

object CheckCommand "linuxfabrik/safenet-hsm-state" {
    command = [ LinuxfabrikPluginDir + "/safenet-hsm-state" ]
    timeout = 10s
    arguments += {
        "--always-ok" = {
            set_if = "$safenet_hsm_state_always_ok$"
            description = "Always returns OK."
        }
        "--critical" = "$safenet_hsm_state_critical$"
        "--hostname" = "$safenet_hsm_state_hostname$"
        "--password" = "$safenet_hsm_state_password$"
        "--severity" = "$safenet_hsm_state_severity$"
        "--timeout" = "$safenet_hsm_state_timeout$"
        "--username" = "$safenet_hsm_state_username$"
        "--warning" = "$safenet_hsm_state_warning$"
    }
}

object CheckCommand "linuxfabrik/sap-open-concur-com" {
    command = [ LinuxfabrikPluginDir + "/sap-open-concur-com" ]
    timeout = 10s
    arguments += {
        "--always-ok" = {
            set_if = "$sap_open_concur_com_always_ok$"
            description = "Always returns OK."
        }
        "--datacenter" = "$sap_open_concur_com_datacenter$"
        "--no-proxy" = {
            set_if = "$sap_open_concur_com_no_proxy$"
        }
        "--service" = "$sap_open_concur_com_service$"
        "--timeout" = "$sap_open_concur_com_timeout$"
        "--utc-offset" = "$sap_open_concur_com_utc_offset$"
    }
}

object CheckCommand "linuxfabrik/selinux-mode" {
    command = [ LinuxfabrikPluginDir + "/selinux-mode" ]
    timeout = 10s
    arguments += {
        "--always-ok" = {
            set_if = "$selinux_mode_always_ok$"
            description = "Always returns OK."
        }
        "--mode" = "$selinux_mode_mode$"
    }
}

object CheckCommand "linuxfabrik/sensors-battery" {
    command = [ LinuxfabrikPluginDir + "/sensors-battery" ]
    timeout = 10s
    arguments += {
        "--always-ok" = {
            set_if = "$sensors_battery_always_ok$"
            description = "Always returns OK."
        }
        "--critical" = "$sensors_battery_critical$"
        "--warning" = "$sensors_battery_warning$"
    }
}

object CheckCommand "linuxfabrik/sensors-fans" {
    command = [ LinuxfabrikPluginDir + "/sensors-fans" ]
    timeout = 10s
    arguments += {
        "--always-ok" = {
            set_if = "$sensors_fans_always_ok$"
            description = "Always returns OK."
        }
        "--critical" = "$sensors_fans_critical$"
        "--warning" = "$sensors_fans_warning$"
    }
}

object CheckCommand "linuxfabrik/sensors-temperatures" {
    command = [ LinuxfabrikPluginDir + "/sensors-temperatures" ]
    timeout = 10s
    arguments += {
        "--always-ok" = {
            set_if = "$sensors_temperatures_always_ok$"
            description = "Always returns OK."
        }
    }
}

object CheckCommand "linuxfabrik/snmp" {
    command = [ LinuxfabrikPluginDir + "/snmp" ]
    timeout = 10s
    arguments += {
        "--community" = "$snmp_community$"
        "--device" = "$snmp_device$"
        "--hide-ok" = {
            set_if = "$snmp_hide_ok$"
        }
        "--hostname" = "$snmp_hostname$"
        "--mib" = "$snmp_mib$"
        "--mib-dir" = "$snmp_mib_dir$"
        "--snmp-version" = "$snmp_snmp_version$"
        "--timeout" = "$snmp_timeout$"
        "--v3-auth-prot" = "$snmp_v3_auth_prot$"
        "--v3-auth-prot-password" = "$snmp_v3_auth_prot_password$"
        "--v3-boots-time" = "$snmp_v3_boots_time$"
        "--v3-context" = "$snmp_v3_context$"
        "--v3-context-engine-id" = "$snmp_v3_context_engine_id$"
        "--v3-level" = "$snmp_v3_level$"
        "--v3-priv-prot" = "$snmp_v3_priv_prot$"
        "--v3-priv-prot-password" = "$snmp_v3_priv_prot_password$"
        "--v3-security-engine-id" = "$snmp_v3_security_engine_id$"
        "--v3-username" = "$snmp_v3_username$"
    }
}

object CheckCommand "linuxfabrik/starface-account-stats" {
    command = [ LinuxfabrikPluginDir + "/starface-account-stats" ]
    timeout = 10s
    arguments += {
        "--cache-expire" = "$starface_account_stats_cache_expire$"
        "--hostname" = "$starface_account_stats_hostname$"
        "--ipv6" = {
            set_if = "$starface_account_stats_ipv6$"
        }
        "--port" = "$starface_account_stats_port$"
        "--timeout" = "$starface_account_stats_timeout$"
    }
}

object CheckCommand "linuxfabrik/starface-backup-status" {
    command = [ LinuxfabrikPluginDir + "/starface-backup-status" ]
    timeout = 10s
    arguments += {
        "--always-ok" = {
            set_if = "$starface_backup_status_always_ok$"
            description = "Always returns OK."
        }
        "--cache-expire" = "$starface_backup_status_cache_expire$"
        "--critical" = "$starface_backup_status_critical$"
        "--hostname" = "$starface_backup_status_hostname$"
        "--ipv6" = {
            set_if = "$starface_backup_status_ipv6$"
        }
        "--port" = "$starface_backup_status_port$"
        "--timeout" = "$starface_backup_status_timeout$"
        "--warning" = "$starface_backup_status_warning$"
    }
}

object CheckCommand "linuxfabrik/starface-channel-status" {
    command = [ LinuxfabrikPluginDir + "/starface-channel-status" ]
    timeout = 10s
    arguments += {
        "--always-ok" = {
            set_if = "$starface_channel_status_always_ok$"
            description = "Always returns OK."
        }
        "--cache-expire" = "$starface_channel_status_cache_expire$"
        "--critical" = "$starface_channel_status_critical$"
        "--hostname" = "$starface_channel_status_hostname$"
        "--ipv6" = {
            set_if = "$starface_channel_status_ipv6$"
        }
        "--port" = "$starface_channel_status_port$"
        "--timeout" = "$starface_channel_status_timeout$"
        "--warning" = "$starface_channel_status_warning$"
    }
}

object CheckCommand "linuxfabrik/starface-database-stats" {
    command = [ LinuxfabrikPluginDir + "/starface-database-stats" ]
    timeout = 10s
    arguments += {
        "--cache-expire" = "$starface_database_stats_cache_expire$"
        "--hostname" = "$starface_database_stats_hostname$"
        "--ipv6" = {
            set_if = "$starface_database_stats_ipv6$"
        }
        "--port" = "$starface_database_stats_port$"
        "--timeout" = "$starface_database_stats_timeout$"
    }
}

object CheckCommand "linuxfabrik/starface-java-memory-usage" {
    command = [ LinuxfabrikPluginDir + "/starface-java-memory-usage" ]
    timeout = 10s
    arguments += {
        "--always-ok" = {
            set_if = "$starface_java_memory_usage_always_ok$"
            description = "Always returns OK."
        }
        "--cache-expire" = "$starface_java_memory_usage_cache_expire$"
        "--critical" = "$starface_java_memory_usage_critical$"
        "--hostname" = "$starface_java_memory_usage_hostname$"
        "--ipv6" = {
            set_if = "$starface_java_memory_usage_ipv6$"
        }
        "--port" = "$starface_java_memory_usage_port$"
        "--timeout" = "$starface_java_memory_usage_timeout$"
        "--warning" = "$starface_java_memory_usage_warning$"
    }
}

object CheckCommand "linuxfabrik/starface-peer-stats" {
    command = [ LinuxfabrikPluginDir + "/starface-peer-stats" ]
    timeout = 10s
    arguments += {
        "--cache-expire" = "$starface_peer_stats_cache_expire$"
        "--hostname" = "$starface_peer_stats_hostname$"
        "--ipv6" = {
            set_if = "$starface_peer_stats_ipv6$"
        }
        "--port" = "$starface_peer_stats_port$"
        "--timeout" = "$starface_peer_stats_timeout$"
    }
}

object CheckCommand "linuxfabrik/starface-status" {
    command = [ LinuxfabrikPluginDir + "/starface-status" ]
    timeout = 10s
    arguments += {
        "--always-ok" = {
            set_if = "$starface_status_always_ok$"
            description = "Always returns OK."
        }
        "--cache-expire" = "$starface_status_cache_expire$"
        "--critical" = "$starface_status_critical$"
        "--hostname" = "$starface_status_hostname$"
        "--ipv6" = {
            set_if = "$starface_status_ipv6$"
        }
        "--port" = "$starface_status_port$"
        "--timeout" = "$starface_status_timeout$"
        "--warning" = "$starface_status_warning$"
    }
}

object CheckCommand "linuxfabrik/statuspal" {
    command = [ LinuxfabrikPluginDir + "/statuspal" ]
    timeout = 10s
    arguments += {
        "--always-ok" = {
            set_if = "$statuspal_always_ok$"
            description = "Always returns OK."
        }
        "--url" = "$statuspal_url$"
    }
}

object CheckCommand "linuxfabrik/strongswan-connections" {
    command = [ "/usr/bin/sudo", LinuxfabrikPluginDir + "/strongswan-connections" ]
    timeout = 10s
    arguments += {
        "--always-ok" = {
            set_if = "$strongswan_connections_always_ok$"
            description = "Always returns OK."
        }
        "--lengthy" = {
            set_if = "$strongswan_connections_lengthy$"
        }
        "--socket" = "$strongswan_connections_socket$"
    }
}

object CheckCommand "linuxfabrik/swap-usage" {
    command = [ LinuxfabrikPluginDir + "/swap-usage" ]
    timeout = 10s
    arguments += {
        "--always-ok" = {
            set_if = "$swap_usage_always_ok$"
            description = "Always returns OK."
        }
        "--critical" = {
            value = "$swap_usage_critical$"
            description = "Set the critical threshold for swap usage (in percent). Default: 90"
        }
        "--warning" = {
            value = "$swap_usage_warning$"
            description = "Set the warning threshold for swap usage (in percent). Default: 70"
        }
    }
}

object CheckCommand "linuxfabrik/systemd-timedate-status" {
    command = [ LinuxfabrikPluginDir + "/systemd-timedate-status" ]
    timeout = 10s
    arguments += {
        "--always-ok" = {
            set_if = "$systemd_timedate_status_always_ok$"
            description = "Always returns OK."
        }
    }
}

object CheckCommand "linuxfabrik/systemd-unit" {
    command = [ LinuxfabrikPluginDir + "/systemd-unit" ]
    timeout = 10s
    arguments += {
        "--activestate" = {
            repeat_key = true
            value = "$systemd_unit_activestate$"
            description = "Expected systemd (activating,active,deactivating,failed,inactive,None) ActiveState (repeating). This is the high-level unit activation state(s), i.e. generalization of SUB. If ommited or set to 'None', the unit's active state will not be checked."
        }
        "--loadstate" = {
            value = "$systemd_unit_loadstate$"
            description = "Expected systemd LoadState (activating,active,deactivating,failed,inactive,loaded,maintenance,masked,None,not-found,reloading). Reflects whether the unit definition was properly loaded. If ommited or set to 'None', the unit's load state will not be checked. Default: loaded"
        }
        "--severity" = {
            value = "$systemd_unit_severity$"
            description = "If something was found, the check returns WARN (warn,crit) unless set here. Default: warn"
        }
        "--substate" = {
            repeat_key = true
            value = "$systemd_unit_substate$"
            description = "Expected systemd (abandoned,activating,activating-done,active,auto-restart,cleaning,condition,deactivating,deactivating-sigkill,deactivating-sigterm,dead,elapsed,exited,failed,final-sigkill,final-sigterm,final-watchdog,listening,mounted,mounting,mounting-done,None,plugged,reload,remounting,remounting-sigkill,remounting-sigterm,running,start,start-chown,start-post,start-pre,stop,stop-post,stop-pre,stop-pre-sigkill,stop-pre-sigterm,stop-sigkill,stop-sigterm,stop-watchdog,tentative,unmounting,unmounting-sigkill,unmounting-sigterm,waiting) SubState (repeating). This is the low-level unit activation state(s); values depend on unit type. If ommited or set to 'None', the unit's substate will not be checked."
        }
        "--unit" = {
            value = "$systemd_unit_unit$"
            description = "The unit name (service, timer, mount etc.). Required. For example 'sshd', 'sshd.service', 'my-samba-mount.mount' etc."
        }
        "--unitfilestate" = {
            value = "$systemd_unit_unitfilestate$"
            description = "Expected systemd UnitFileState. If ommited or set to 'None', the unit's unit-file state will not be checked. If 'empty', checks exactly for `UnitFileState=''`."
        }
    }
}

object CheckCommand "linuxfabrik/systemd-units-failed" {
    command = [ LinuxfabrikPluginDir + "/systemd-units-failed" ]
    timeout = 10s
    arguments += {
        "--always-ok" = {
            set_if = "$systemd_units_failed_always_ok$"
            description = "Always returns OK."
        }
        "--ignore" = {
            repeat_key = true
            value = "$systemd_units_failed_ignore$"
            description = "Ignore a unit, for example 'dhcpd.service' (repeating). Supports glob according to https://docs.python.org/3/library/fnmatch.html. Default: []"
        }
    }
}

object CheckCommand "linuxfabrik/tuned-profile" {
    command = [ LinuxfabrikPluginDir + "/tuned-profile" ]
    timeout = 10s
    arguments += {
        "--always-ok" = {
            set_if = "$tuned_profile_always_ok$"
            description = "Always returns OK."
        }
        "--profile" = "$tuned_profile_profile$"
    }
}

object CheckCommand "linuxfabrik/uptime" {
    command = [ LinuxfabrikPluginDir + "/uptime" ]
    timeout = 10s
    arguments += {
        "--always-ok" = {
            set_if = "$uptime_always_ok$"
            description = "Always returns OK."
        }
        "--critical" = "$uptime_critical$"
        "--warning" = "$uptime_warning$"
    }
}

object CheckCommand "linuxfabrik/users" {
    command = [ LinuxfabrikPluginDir + "/users" ]
    timeout = 10s
    arguments += {
        "--critical" = "$users_critical$"
        "--warning" = "$users_warning$"
    }
}

object CheckCommand "linuxfabrik/veeam-status" {
    command = [ LinuxfabrikPluginDir + "/veeam-status" ]
    timeout = 10s
    arguments += {
        "--always-ok" = {
            set_if = "$veeam_status_always_ok$"
            description = "Always returns OK."
        }
        "--critical" = "$veeam_status_critical$"
        "--failed-job-runs" = "$veeam_status_failed_job_runs$"
        "--failed-vm-lastest-states" = "$veeam_status_failed_vm_lastest_states$"
        "--max-backup-job-duration" = "$veeam_status_max_backup_job_duration$"
        "--max-replica-job-duration" = "$veeam_status_max_replica_job_duration$"
        "--password" = "$veeam_status_password$"
        "--timeout" = "$veeam_status_timeout$"
        "--url" = "$veeam_status_url$"
        "--username" = "$veeam_status_username$"
        "--warning" = "$veeam_status_warning$"
        "--warning-vm-lastest-states" = "$veeam_status_warning_vm_lastest_states$"
        "--warnings-job-runs" = "$veeam_status_warnings_job_runs$"
    }
}

object CheckCommand "linuxfabrik/wildfly-deployment-status" {
    command = [ LinuxfabrikPluginDir + "/wildfly-deployment-status" ]
    timeout = 10s
    arguments += {
        "--always-ok" = {
            set_if = "$wildfly_deployment_status_always_ok$"
            description = "Always returns OK."
        }
        "--deployment" = {
            repeat_key = true
            value = "$wildfly_deployment_status_deployment$"
        }
        "--instance" = "$wildfly_deployment_status_instance$"
        "--mode" = "$wildfly_deployment_status_mode$"
        "--node" = "$wildfly_deployment_status_node$"
        "--password" = "$wildfly_deployment_status_password$"
        "--timeout" = "$wildfly_deployment_status_timeout$"
        "--url" = "$wildfly_deployment_status_url$"
        "--username" = "$wildfly_deployment_status_username$"
    }
}

object CheckCommand "linuxfabrik/wildfly-gc-status" {
    command = [ LinuxfabrikPluginDir + "/wildfly-gc-status" ]
    timeout = 10s
    arguments += {
        "--instance" = "$wildfly_gc_status_instance$"
        "--mode" = "$wildfly_gc_status_mode$"
        "--node" = "$wildfly_gc_status_node$"
        "--password" = "$wildfly_gc_status_password$"
        "--timeout" = "$wildfly_gc_status_timeout$"
        "--url" = "$wildfly_gc_status_url$"
        "--username" = "$wildfly_gc_status_username$"
    }
}

object CheckCommand "linuxfabrik/wildfly-memory-pool-usage" {
    command = [ LinuxfabrikPluginDir + "/wildfly-memory-pool-usage" ]
    timeout = 10s
    arguments += {
        "--always-ok" = {
            set_if = "$wildfly_memory_pool_usage_always_ok$"
            description = "Always returns OK."
        }
        "--instance" = "$wildfly_memory_pool_usage_instance$"
        "--mode" = "$wildfly_memory_pool_usage_mode$"
        "--node" = "$wildfly_memory_pool_usage_node$"
        "--password" = "$wildfly_memory_pool_usage_password$"
        "--timeout" = "$wildfly_memory_pool_usage_timeout$"
        "--url" = "$wildfly_memory_pool_usage_url$"
        "--username" = "$wildfly_memory_pool_usage_username$"
    }
}

object CheckCommand "linuxfabrik/wildfly-memory-usage" {
    command = [ LinuxfabrikPluginDir + "/wildfly-memory-usage" ]
    timeout = 10s
    arguments += {
        "--always-ok" = {
            set_if = "$wildfly_memory_usage_always_ok$"
            description = "Always returns OK."
        }
        "--critical" = "$wildfly_memory_usage_critical$"
        "--instance" = "$wildfly_memory_usage_instance$"
        "--mode" = "$wildfly_memory_usage_mode$"
        "--node" = "$wildfly_memory_usage_node$"
        "--password" = "$wildfly_memory_usage_password$"
        "--timeout" = "$wildfly_memory_usage_timeout$"
        "--url" = "$wildfly_memory_usage_url$"
        "--username" = "$wildfly_memory_usage_username$"
        "--warning" = "$wildfly_memory_usage_warning$"
    }
}

object CheckCommand "linuxfabrik/wildfly-non-xa-datasource-stats" {
    command = [ LinuxfabrikPluginDir + "/wildfly-non-xa-datasource-stats" ]
    timeout = 10s
    arguments += {
        "--always-ok" = {
            set_if = "$wildfly_non_xa_datasource_stats_always_ok$"
            description = "Always returns OK."
        }
        "--critical" = "$wildfly_non_xa_datasource_stats_critical$"
        "--datasource" = {
            repeat_key = true
            value = "$wildfly_non_xa_datasource_stats_datasource$"
        }
        "--instance" = "$wildfly_non_xa_datasource_stats_instance$"
        "--mode" = "$wildfly_non_xa_datasource_stats_mode$"
        "--node" = "$wildfly_non_xa_datasource_stats_node$"
        "--password" = "$wildfly_non_xa_datasource_stats_password$"
        "--timeout" = "$wildfly_non_xa_datasource_stats_timeout$"
        "--url" = "$wildfly_non_xa_datasource_stats_url$"
        "--username" = "$wildfly_non_xa_datasource_stats_username$"
        "--warning" = "$wildfly_non_xa_datasource_stats_warning$"
    }
}

object CheckCommand "linuxfabrik/wildfly-server-status" {
    command = [ LinuxfabrikPluginDir + "/wildfly-server-status" ]
    timeout = 10s
    arguments += {
        "--always-ok" = {
            set_if = "$wildfly_server_status_always_ok$"
            description = "Always returns OK."
        }
        "--instance" = "$wildfly_server_status_instance$"
        "--mode" = "$wildfly_server_status_mode$"
        "--node" = "$wildfly_server_status_node$"
        "--password" = "$wildfly_server_status_password$"
        "--timeout" = "$wildfly_server_status_timeout$"
        "--url" = "$wildfly_server_status_url$"
        "--username" = "$wildfly_server_status_username$"
    }
}

object CheckCommand "linuxfabrik/wildfly-thread-usage" {
    command = [ LinuxfabrikPluginDir + "/wildfly-thread-usage" ]
    timeout = 10s
    arguments += {
        "--always-ok" = {
            set_if = "$wildfly_thread_usage_always_ok$"
            description = "Always returns OK."
        }
        "--critical" = "$wildfly_thread_usage_critical$"
        "--instance" = "$wildfly_thread_usage_instance$"
        "--mode" = "$wildfly_thread_usage_mode$"
        "--node" = "$wildfly_thread_usage_node$"
        "--password" = "$wildfly_thread_usage_password$"
        "--timeout" = "$wildfly_thread_usage_timeout$"
        "--url" = "$wildfly_thread_usage_url$"
        "--username" = "$wildfly_thread_usage_username$"
        "--warning" = "$wildfly_thread_usage_warning$"
    }
}

object CheckCommand "linuxfabrik/wildfly-uptime" {
    command = [ LinuxfabrikPluginDir + "/wildfly-uptime" ]
    timeout = 10s
    arguments += {
        "--always-ok" = {
            set_if = "$wildfly_uptime_always_ok$"
            description = "Always returns OK."
        }
        "--critical" = "$wildfly_uptime_critical$"
        "--instance" = "$wildfly_uptime_instance$"
        "--mode" = "$wildfly_uptime_mode$"
        "--node" = "$wildfly_uptime_node$"
        "--password" = "$wildfly_uptime_password$"
        "--timeout" = "$wildfly_uptime_timeout$"
        "--url" = "$wildfly_uptime_url$"
        "--username" = "$wildfly_uptime_username$"
        "--warning" = "$wildfly_uptime_warning$"
    }
}

object CheckCommand "linuxfabrik/wildfly-xa-datasource-stats" {
    command = [ LinuxfabrikPluginDir + "/wildfly-xa-datasource-stats" ]
    timeout = 10s
    arguments += {
        "--always-ok" = {
            set_if = "$wildfly_xa_datasource_stats_always_ok$"
            description = "Always returns OK."
        }
        "--critical" = "$wildfly_xa_datasource_stats_critical$"
        "--datasource" = {
            repeat_key = true
            value = "$wildfly_xa_datasource_stats_datasource$"
        }
        "--instance" = "$wildfly_xa_datasource_stats_instance$"
        "--mode" = "$wildfly_xa_datasource_stats_mode$"
        "--node" = "$wildfly_xa_datasource_stats_node$"
        "--password" = "$wildfly_xa_datasource_stats_password$"
        "--timeout" = "$wildfly_xa_datasource_stats_timeout$"
        "--url" = "$wildfly_xa_datasource_stats_url$"
        "--username" = "$wildfly_xa_datasource_stats_username$"
        "--warning" = "$wildfly_xa_datasource_stats_warning$"
    }
}

object CheckCommand "linuxfabrik/wordpress-version" {
    command = [ LinuxfabrikPluginDir + "/wordpress-version" ]
    timeout = 10s
    arguments += {
        "--always-ok" = {
            set_if = "$wordpress_version_always_ok$"
            description = "Always returns OK."
        }
        "--check-major" = {
            set_if = "$wordpress_version_check_major$"
        }
        "--check-minor" = {
            set_if = "$wordpress_version_check_minor$"
        }
        "--check-patch" = {
            set_if = "$wordpress_version_check_patch$"
        }
        "--offset-eol" = "$wordpress_version_offset_eol$"
        "--path" = "$wordpress_version_path$"
    }
}

object CheckCommand "linuxfabrik/xca-cert" {
    command = [ LinuxfabrikPluginDir + "/xca-cert" ]
    timeout = 10s
    arguments += {
        "--critical" = "$xca_cert_critical$"
        "--defaults-file" = "$xca_cert_defaults_file$"
        "--defaults-group" = "$xca_cert_defaults_group$"
        "--prefix" = "$xca_cert_prefix$"
        "--timeout" = "$xca_cert_timeout$"
        "--warning" = "$xca_cert_warning$"
    }
}

object CheckCommand "linuxfabrik/xml" {
    command = [ LinuxfabrikPluginDir + "/xml" ]
    timeout = 30s
    arguments += {
        "--always-ok" = {
            set_if = "$xml_always_ok$"
            description = "Always returns OK."
        }
        "--expect" = "$xml_expect$"
        "--namespace" = {
            repeat_key = true
            value = "$xml_namespace$"
        }
        "--no-proxy" = {
            set_if = "$xml_no_proxy$"
        }
        "--password" = "$xml_password$"
        "--timeout" = "$xml_timeout$"
        "--url" = "$xml_url$"
        "--username" = "$xml_username$"
        "--xpath" = "$xml_xpath$"
    }
}
