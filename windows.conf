object CheckCommand "linuxfabrik/apache-httpd-status-windows" {
    command = [ LinuxfabrikPluginDir + "\\apache-httpd-status.exe" ]
    timeout = 10s
    arguments += {
        "--always-ok" = {
            set_if = "$apache_httpd_status_always_ok$"
            description = "Always returns OK."
        }
        "--critical" = "$apache_httpd_status_critical$"
        "--insecure" = {
            set_if = "$apache_httpd_status_insecure$"
        }
        "--url" = "$apache_httpd_status_url$"
        "--warning" = "$apache_httpd_status_warning$"
    }
}

object CheckCommand "linuxfabrik/apache-solr-version-windows" {
    command = [ LinuxfabrikPluginDir + "\\apache-solr-version.exe" ]
    timeout = 10s
    arguments += {
        "--always-ok" = {
            set_if = "$apache_solr_version_always_ok$"
            description = "Always returns OK."
        }
        "--check-major" = {
            set_if = "$apache_solr_version_check_major$"
        }
        "--check-minor" = {
            set_if = "$apache_solr_version_check_minor$"
        }
        "--check-patch" = {
            set_if = "$apache_solr_version_check_patch$"
        }
        "--offset-eol" = "$apache_solr_version_offset_eol$"
        "--path" = "$apache_solr_version_path$"
    }
}

object CheckCommand "linuxfabrik/axenita-stats-windows" {
    command = [ LinuxfabrikPluginDir + "\\axenita-stats.exe" ]
    timeout = 10s
    arguments += {
        "--always-ok" = {
            set_if = "$axenita_stats_always_ok$"
            description = "Always returns OK."
        }
        "--timeout" = "$axenita_stats_timeout$"
        "--url" = "$axenita_stats_url$"
    }
}

object CheckCommand "linuxfabrik/cometsystem-windows" {
    command = [ LinuxfabrikPluginDir + "\\cometsystem.exe" ]
    timeout = 10s
    arguments += {
        "--always-ok" = {
            set_if = "$cometsystem_always_ok$"
            description = "Always returns OK."
        }
        "--insecure" = {
            set_if = "$cometsystem_insecure$"
        }
        "--no-proxy" = {
            set_if = "$cometsystem_no_proxy$"
        }
        "--severity" = {
            repeat_key = true
            value = "$cometsystem_severity$"
        }
        "--timeout" = "$cometsystem_timeout$"
        "--url" = "$cometsystem_url$"
    }
}

object CheckCommand "linuxfabrik/countdown-windows" {
    command = [ LinuxfabrikPluginDir + "\\countdown.exe" ]
    timeout = 10s
    arguments += {
        "--always-ok" = {
            set_if = "$countdown_always_ok$"
            description = "Always returns OK."
        }
        "--input" = {
            repeat_key = true
            value = "$countdown_input$"
        }
    }
}

object CheckCommand "linuxfabrik/cpu-usage-windows" {
    command = [ LinuxfabrikPluginDir + "\\cpu-usage.exe" ]
    timeout = 10s
    arguments += {
        "--always-ok" = {
            set_if = "$cpu_usage_always_ok$"
            description = "Always returns OK."
        }
        "--count" = {
            value = "$cpu_usage_count$"
            description = "Number of times the value has to be above the given thresholds. Default: 5"
        }
        "--critical" = {
            value = "$cpu_usage_critical$"
            description = "Set the critical threshold CPU Usage Percentage. Default: 90"
        }
        "--warning" = {
            value = "$cpu_usage_warning$"
            description = "Set the warning threshold CPU Usage Percentage. Default: 80"
        }
    }
}

object CheckCommand "linuxfabrik/csv-values-windows" {
    command = [ LinuxfabrikPluginDir + "\\csv-values.exe" ]
    timeout = 10s
    arguments += {
        "--always-ok" = {
            set_if = "$csv_values_always_ok$"
            description = "Always returns OK."
        }
        "--chunksize" = "$csv_values_chunksize$"
        "--columns-query" = "$csv_values_columns_query$"
        "--critical" = "$csv_values_critical$"
        "--critical-query" = "$csv_values_critical_query$"
        "--delimiter" = "$csv_values_delimiter$"
        "--filename" = "$csv_values_filename$"
        "--insecure" = {
            set_if = "$csv_values_insecure$"
        }
        "--newline" = "$csv_values_newline$"
        "--no-proxy" = {
            set_if = "$csv_values_no_proxy$"
        }
        "--password" = "$csv_values_password$"
        "--quotechar" = "$csv_values_quotechar$"
        "--timeout" = "$csv_values_timeout$"
        "--url" = "$csv_values_url$"
        "--username" = "$csv_values_username$"
        "--warning" = "$csv_values_warning$"
        "--warning-query" = "$csv_values_warning_query$"
    }
}

object CheckCommand "linuxfabrik/dhcp-scope-usage-windows" {
    command = [ LinuxfabrikPluginDir + "\\dhcp-scope-usage.exe" ]
    timeout = 10s
    arguments += {
        "--always-ok" = {
            set_if = "$dhcp_scope_usage_always_ok$"
            description = "Always returns OK."
        }
        "--critical" = "$dhcp_scope_usage_critical$"
        "--hostname" = "$dhcp_scope_usage_hostname$"
        "--warning" = "$dhcp_scope_usage_warning$"
        "--winrm-domain" = "$dhcp_scope_usage_winrm_domain$"
        "--winrm-hostname" = "$dhcp_scope_usage_winrm_hostname$"
        "--winrm-password" = "$dhcp_scope_usage_winrm_password$"
        "--winrm-transport" = "$dhcp_scope_usage_winrm_transport$"
        "--winrm-username" = "$dhcp_scope_usage_winrm_username$"
    }
}

object CheckCommand "linuxfabrik/diacos-windows" {
    command = [ LinuxfabrikPluginDir + "\\diacos.exe" ]
    timeout = 10s
    arguments += {
        "--always-ok" = {
            set_if = "$diacos_always_ok$"
            description = "Always returns OK."
        }
        "--critical" = "$diacos_critical$"
        "--login-computer" = "$diacos_login_computer$"
        "--login-ip" = "$diacos_login_ip$"
        "--login-licence" = "$diacos_login_licence$"
        "--login-name" = "$diacos_login_name$"
        "--no-proxy" = {
            set_if = "$diacos_no_proxy$"
        }
        "--search-concept-filter" = "$diacos_search_concept_filter$"
        "--search-country" = "$diacos_search_country$"
        "--search-format" = "$diacos_search_format$"
        "--search-searchtext" = "$diacos_search_searchtext$"
        "--search-sort-mode" = "$diacos_search_sort_mode$"
        "--search-year" = "$diacos_search_year$"
        "--timeout" = "$diacos_timeout$"
        "--url" = "$diacos_url$"
        "--warning" = "$diacos_warning$"
    }
}

object CheckCommand "linuxfabrik/disk-io-windows" {
    command = [ LinuxfabrikPluginDir + "\\disk-io.exe" ]
    timeout = 10s
    arguments += {
        "--always-ok" = {
            set_if = "$disk_io_always_ok$"
            description = "Always returns OK."
        }
        "--count" = {
            value = "$disk_io_count$"
            description = "Number of times the value has to be above the given thresholds. Default: 5"
        }
        "--critical" = {
            value = "$disk_io_critical$"
            description = "Set the CRIT threshold for disk I/O read/write rate over the entire period as a percentage of the maximum disk I/O rate. Default: >= 90"
        }
        "--ignore" = {
            repeat_key = true
            value = "$disk_io_ignore$"
            description = "Ignore disk names starting with a string like 'sr' (repeating). Default: ['sr', 'loop', 'zram']"
        }
        "--warning" = {
            value = "$disk_io_warning$"
            description = "et the CRIT threshold for disk I/O read/write rate over the entire period as a percentage of the maximum disk I/O rate. Default: >= 80"
        }
    }
}

object CheckCommand "linuxfabrik/disk-usage-windows" {
    command = [ LinuxfabrikPluginDir + "\\disk-usage.exe" ]
    timeout = 10s
    arguments += {
        "--always-ok" = {
            set_if = "$disk_usage_always_ok$"
            description = "Always returns OK."
        }
        "--critical" = {
            value = "$disk_usage_critical$"
            description = "Critical threshold, of the form '<number>[unit][method]', where unit is one of `%|K|M|G|T|P` and method is one of `USED|FREE`. If 'unit' is omitted, `%` is assumed. `K` means `kibibyte` etc. If 'method' is omitted, `USED` is assumed. `USED` means 'number ore more', `FREE` means 'number or less'. Examples: `95` = alert at 95% usage or more. `9.5M` = alert when 9.5 MiB or more is used. Other self-explanatory examples are `95%USED`, `5%FREE`, `9.5GFREE`, `1400GUSED`. Default: 95%USED"
        }
        "--exclude-pattern" = {
            repeat_key = true
            value = "$disk_usage_exclude_pattern$"
            description = "Any line matching this pattern (case-insensitive) will count as a exclude. The mountpoint is excluded if it contains the specified value. Example: 'boot' excludes '/boot' as well as 'boot/efi'. Can be specified multiple times. On Windows, use drive letters without backslash ('Y:' or 'Y'). Includes are matched before excludes."
        }
        "--exclude-regex" = {
            repeat_key = true
            value = "$disk_usage_exclude_regex$"
            description = "Any line matching this python regex (case-insensitive) will count as a exclude. Can be specified multiple times. On Windows, use drive letters without backslash ('Y:' or 'Y'). Includes are matched before excludes."
        }
        "--include-pattern" = {
            repeat_key = true
            value = "$disk_usage_include_pattern$"
            description = "Any line matching this pattern (case-insensitive) will count as a include. The mountpoint is included if it contains the specified value. Example: 'boot' includes '/boot' as well as '/boot/efi'. Can be specified multiple times. On Windows, use drive letters without backslash ('Y:' or 'Y'). Includes are matched before excludes."
        }
        "--include-regex" = {
            repeat_key = true
            value = "$disk_usage_include_regex$"
            description = "Any line matching this python regex (case-insensitive) will count as a include. Can be specified multiple times. On Windows, use drive letters without backslash ('Y:' or 'Y'). Includes are matched before excludes."
        }
        "--perfdata-regex" = {
            repeat_key = true
            value = "$disk_usage_perfdata_regex$"
            description = "Only print perfdata keys matching this python regex. For a list of perfdata keys, have a look at the README and run this plugin. Can be specified multiple times."
        }
        "--warning" = {
            value = "$disk_usage_warning$"
            description = "Warning threshold, of the form '<number>[unit][method]', where unit is one of `%|K|M|G|T|P` and method is one of `USED|FREE`. If 'unit' is omitted, `%` is assumed. `K` means `kibibyte` etc. If 'method' is omitted, `USED` is assumed. `USED` means 'number ore more', `FREE` means 'number or less'. Examples: `95` = alert at 95% usage. `9.5M` = alert when 9.5 MiB is used. Other self-explanatory examples are `95%USED`, `5%FREE`, `9.5GFREE`, `1400GUSED`. Default: 90%USED"
        }
    }
}

object CheckCommand "linuxfabrik/dns-windows" {
    command = [ LinuxfabrikPluginDir + "\\dns.exe" ]
    timeout = 10s
    arguments += {
        "--always-ok" = {
            set_if = "$dns_always_ok$"
            description = "Always returns OK."
        }
        "--critical" = {
            value = "$dns_critical$"
            description = "Return critical if elapsed time in ms exceeds value. Default: None"
        }
        "--hostname" = {
            value = "$dns_hostname$"
            description = "The host or ip address to check. Default: localhost"
        }
        "--port" = {
            value = "$dns_port$"
            description = "The port number. Default: 53"
        }
        "--type" = {
            value = "$dns_type$"
            description = "Connection (udp,udp6,tcp,tcp6) type. Can be optionally specified in order to narrow the list of addresses returned."
        }
        "--warning" = {
            value = "$dns_warning$"
            description = "Return warning if elapsed time in ms exceeds value. Default: None"
        }
    }
}

object CheckCommand "linuxfabrik/feed-windows" {
    command = [ LinuxfabrikPluginDir + "\\feed.exe" ]
    timeout = 10s
    arguments += {
        "--always-ok" = {
            set_if = "$feed_always_ok$"
            description = "Always returns OK."
        }
        "--icinga-callback" = {
            set_if = "$feed_icinga_callback$"
        }
        "--icinga-password" = "$feed_icinga_password$"
        "--icinga-service-name" = "$feed_icinga_service_name$"
        "--icinga-url" = "$feed_icinga_url$"
        "--icinga-username" = "$feed_icinga_username$"
        "--insecure" = {
            set_if = "$feed_insecure$"
        }
        "--latest" = {
            set_if = "$feed_latest$"
        }
        "--no-proxy" = {
            set_if = "$feed_no_proxy$"
        }
        "--no-summary" = {
            set_if = "$feed_no_summary$"
        }
        "--timeout" = "$feed_timeout$"
        "--url" = "$feed_url$"
        "--warning" = "$feed_warning$"
    }
}

object CheckCommand "linuxfabrik/file-age-windows" {
    command = [ LinuxfabrikPluginDir + "\\file-age.exe" ]
    timeout = 10s
    arguments += {
        "--always-ok" = {
            set_if = "$file_age_always_ok$"
            description = "Always returns OK."
        }
        "--critical" = "$file_age_critical$"
        "--critical-count" = "$file_age_critical_count$"
        "--filename" = "$file_age_filename$"
        "--only-dirs" = {
            set_if = "$file_age_only_dirs$"
        }
        "--only-files" = {
            set_if = "$file_age_only_files$"
        }
        "--password" = "$file_age_password$"
        "--pattern" = "$file_age_pattern$"
        "--perfdata-mode" = "$file_age_perfdata_mode$"
        "--timeout" = "$file_age_timeout$"
        "--url" = "$file_age_url$"
        "--username" = "$file_age_username$"
        "--warning" = "$file_age_warning$"
        "--warning-count" = "$file_age_warning_count$"
    }
}

object CheckCommand "linuxfabrik/file-count-windows" {
    command = [ LinuxfabrikPluginDir + "\\file-count.exe" ]
    timeout = 10s
    arguments += {
        "--always-ok" = {
            set_if = "$file_count_always_ok$"
            description = "Always returns OK."
        }
        "--critical" = "$file_count_critical$"
        "--filename" = "$file_count_filename$"
        "--only-dirs" = {
            set_if = "$file_count_only_dirs$"
        }
        "--only-files" = {
            set_if = "$file_count_only_files$"
        }
        "--password" = "$file_count_password$"
        "--pattern" = "$file_count_pattern$"
        "--timeout" = "$file_count_timeout$"
        "--timerange" = "$file_count_timerange$"
        "--url" = "$file_count_url$"
        "--username" = "$file_count_username$"
        "--warning" = "$file_count_warning$"
    }
}

object CheckCommand "linuxfabrik/fortios-cpu-usage-windows" {
    command = [ LinuxfabrikPluginDir + "\\fortios-cpu-usage.exe" ]
    timeout = 10s
    arguments += {
        "--always-ok" = {
            set_if = "$fortios_cpu_usage_always_ok$"
            description = "Always returns OK."
        }
        "--count" = "$fortios_cpu_usage_count$"
        "--critical" = "$fortios_cpu_usage_critical$"
        "--hostname" = "$fortios_cpu_usage_hostname$"
        "--insecure" = {
            set_if = "$fortios_cpu_usage_insecure$"
        }
        "--no-proxy" = {
            set_if = "$fortios_cpu_usage_no_proxy$"
        }
        "--password" = "$fortios_cpu_usage_password$"
        "--timeout" = "$fortios_cpu_usage_timeout$"
        "--warning" = "$fortios_cpu_usage_warning$"
    }
}

object CheckCommand "linuxfabrik/fortios-firewall-stats-windows" {
    command = [ LinuxfabrikPluginDir + "\\fortios-firewall-stats.exe" ]
    timeout = 10s
    arguments += {
        "--always-ok" = {
            set_if = "$fortios_firewall_stats_always_ok$"
            description = "Always returns OK."
        }
        "--hostname" = "$fortios_firewall_stats_hostname$"
        "--insecure" = {
            set_if = "$fortios_firewall_stats_insecure$"
        }
        "--no-proxy" = {
            set_if = "$fortios_firewall_stats_no_proxy$"
        }
        "--password" = "$fortios_firewall_stats_password$"
        "--timeout" = "$fortios_firewall_stats_timeout$"
    }
}

object CheckCommand "linuxfabrik/fortios-ha-stats-windows" {
    command = [ LinuxfabrikPluginDir + "\\fortios-ha-stats.exe" ]
    timeout = 10s
    arguments += {
        "--always-ok" = {
            set_if = "$fortios_ha_stats_always_ok$"
            description = "Always returns OK."
        }
        "--count" = "$fortios_ha_stats_count$"
        "--hostname" = "$fortios_ha_stats_hostname$"
        "--insecure" = {
            set_if = "$fortios_ha_stats_insecure$"
        }
        "--no-proxy" = {
            set_if = "$fortios_ha_stats_no_proxy$"
        }
        "--password" = "$fortios_ha_stats_password$"
        "--timeout" = "$fortios_ha_stats_timeout$"
    }
}

object CheckCommand "linuxfabrik/fortios-memory-usage-windows" {
    command = [ LinuxfabrikPluginDir + "\\fortios-memory-usage.exe" ]
    timeout = 10s
    arguments += {
        "--always-ok" = {
            set_if = "$fortios_memory_usage_always_ok$"
            description = "Always returns OK."
        }
        "--critical" = "$fortios_memory_usage_critical$"
        "--hostname" = "$fortios_memory_usage_hostname$"
        "--insecure" = {
            set_if = "$fortios_memory_usage_insecure$"
        }
        "--no-proxy" = {
            set_if = "$fortios_memory_usage_no_proxy$"
        }
        "--password" = "$fortios_memory_usage_password$"
        "--timeout" = "$fortios_memory_usage_timeout$"
        "--warning" = "$fortios_memory_usage_warning$"
    }
}

object CheckCommand "linuxfabrik/fortios-network-io-windows" {
    command = [ LinuxfabrikPluginDir + "\\fortios-network-io.exe" ]
    timeout = 10s
    arguments += {
        "--always-ok" = {
            set_if = "$fortios_network_io_always_ok$"
            description = "Always returns OK."
        }
        "--count" = "$fortios_network_io_count$"
        "--critical" = "$fortios_network_io_critical$"
        "--hostname" = "$fortios_network_io_hostname$"
        "--insecure" = {
            set_if = "$fortios_network_io_insecure$"
        }
        "--no-proxy" = {
            set_if = "$fortios_network_io_no_proxy$"
        }
        "--password" = "$fortios_network_io_password$"
        "--timeout" = "$fortios_network_io_timeout$"
        "--warning" = "$fortios_network_io_warning$"
    }
}

object CheckCommand "linuxfabrik/fortios-sensor-windows" {
    command = [ LinuxfabrikPluginDir + "\\fortios-sensor.exe" ]
    timeout = 10s
    arguments += {
        "--always-ok" = {
            set_if = "$fortios_sensor_always_ok$"
            description = "Always returns OK."
        }
        "--hostname" = "$fortios_sensor_hostname$"
        "--insecure" = {
            set_if = "$fortios_sensor_insecure$"
        }
        "--no-proxy" = {
            set_if = "$fortios_sensor_no_proxy$"
        }
        "--password" = "$fortios_sensor_password$"
        "--timeout" = "$fortios_sensor_timeout$"
    }
}

object CheckCommand "linuxfabrik/fortios-version-windows" {
    command = [ LinuxfabrikPluginDir + "\\fortios-version.exe" ]
    timeout = 10s
    arguments += {
        "--always-ok" = {
            set_if = "$fortios_version_always_ok$"
            description = "Always returns OK."
        }
        "--check-major" = {
            set_if = "$fortios_version_check_major$"
        }
        "--check-minor" = {
            set_if = "$fortios_version_check_minor$"
        }
        "--check-patch" = {
            set_if = "$fortios_version_check_patch$"
        }
        "--hostname" = "$fortios_version_hostname$"
        "--insecure" = {
            set_if = "$fortios_version_insecure$"
        }
        "--no-proxy" = {
            set_if = "$fortios_version_no_proxy$"
        }
        "--offset-eol" = "$fortios_version_offset_eol$"
        "--password" = "$fortios_version_password$"
        "--timeout" = "$fortios_version_timeout$"
    }
}

object CheckCommand "linuxfabrik/githubstatus-windows" {
    command = [ LinuxfabrikPluginDir + "\\githubstatus.exe" ]
    timeout = 10s
    arguments += {
        "--always-ok" = {
            set_if = "$githubstatus_always_ok$"
            description = "Always returns OK."
        }
    }
}

object CheckCommand "linuxfabrik/grassfish-licenses-windows" {
    command = [ LinuxfabrikPluginDir + "\\grassfish-licenses.exe" ]
    timeout = 10s
    arguments += {
        "--always-ok" = {
            set_if = "$grassfish_licenses_always_ok$"
            description = "Always returns OK."
        }
        "--api-version" = "$grassfish_licenses_api_version$"
        "--hostname" = "$grassfish_licenses_hostname$"
        "--port" = "$grassfish_licenses_port$"
        "--token" = "$grassfish_licenses_token$"
        "--url" = "$grassfish_licenses_url$"
    }
}

object CheckCommand "linuxfabrik/grassfish-players-windows" {
    command = [ LinuxfabrikPluginDir + "\\grassfish-players.exe" ]
    timeout = 10s
    arguments += {
        "--always-ok" = {
            set_if = "$grassfish_players_always_ok$"
            description = "Always returns OK."
        }
        "--api-version" = "$grassfish_players_api_version$"
        "--box-id" = "$grassfish_players_box_id$"
        "--box-state" = {
            repeat_key = true
            value = "$grassfish_players_box_state$"
        }
        "--custom-id" = "$grassfish_players_custom_id$"
        "--hostname" = "$grassfish_players_hostname$"
        "--is-installed" = {
            repeat_key = true
            value = "$grassfish_players_is_installed$"
        }
        "--is-licensed" = {
            repeat_key = true
            value = "$grassfish_players_is_licensed$"
        }
        "--lengthy" = {
            set_if = "$grassfish_players_lengthy$"
        }
        "--port" = "$grassfish_players_port$"
        "--token" = "$grassfish_players_token$"
        "--transfer-status" = {
            repeat_key = true
            value = "$grassfish_players_transfer_status$"
        }
        "--url" = "$grassfish_players_url$"
        "--warning" = "$grassfish_players_warning$"
    }
}

object CheckCommand "linuxfabrik/grassfish-screens-windows" {
    command = [ LinuxfabrikPluginDir + "\\grassfish-screens.exe" ]
    timeout = 10s
    arguments += {
        "--always-ok" = {
            set_if = "$grassfish_screens_always_ok$"
            description = "Always returns OK."
        }
        "--api-version" = "$grassfish_screens_api_version$"
        "--box-id" = "$grassfish_screens_box_id$"
        "--box-state" = {
            repeat_key = true
            value = "$grassfish_screens_box_state$"
        }
        "--cache-expire" = "$grassfish_screens_cache_expire$"
        "--custom-id" = "$grassfish_screens_custom_id$"
        "--hostname" = "$grassfish_screens_hostname$"
        "--is-installed" = {
            repeat_key = true
            value = "$grassfish_screens_is_installed$"
        }
        "--is-licensed" = {
            repeat_key = true
            value = "$grassfish_screens_is_licensed$"
        }
        "--lengthy" = {
            set_if = "$grassfish_screens_lengthy$"
        }
        "--port" = "$grassfish_screens_port$"
        "--token" = "$grassfish_screens_token$"
        "--transfer-status" = {
            repeat_key = true
            value = "$grassfish_screens_transfer_status$"
        }
        "--url" = "$grassfish_screens_url$"
        "--warning" = "$grassfish_screens_warning$"
    }
}

object CheckCommand "linuxfabrik/haproxy-status-windows" {
    command = [ LinuxfabrikPluginDir + "\\haproxy-status.exe" ]
    timeout = 10s
    arguments += {
        "--always-ok" = {
            set_if = "$haproxy_status_always_ok$"
            description = "Always returns OK."
        }
        "--critical" = "$haproxy_status_critical$"
        "--lengthy" = {
            set_if = "$haproxy_status_lengthy$"
        }
        "--password" = "$haproxy_status_password$"
        "--timeout" = "$haproxy_status_timeout$"
        "--url" = "$haproxy_status_url$"
        "--username" = "$haproxy_status_username$"
        "--warning" = "$haproxy_status_warning$"
    }
}

object CheckCommand "linuxfabrik/huawei-dorado-backup-power-windows" {
    command = [ LinuxfabrikPluginDir + "\\huawei-dorado-backup-power.exe" ]
    timeout = 10s
    arguments += {
        "--always-ok" = {
            set_if = "$huawei_dorado_backup_power_always_ok$"
            description = "Always returns OK."
        }
        "--cache-expire" = "$huawei_dorado_backup_power_cache_expire$"
        "--device-id" = "$huawei_dorado_backup_power_device_id$"
        "--no-proxy" = {
            set_if = "$huawei_dorado_backup_power_no_proxy$"
        }
        "--password" = "$huawei_dorado_backup_power_password$"
        "--scope" = "$huawei_dorado_backup_power_scope$"
        "--timeout" = "$huawei_dorado_backup_power_timeout$"
        "--url" = "$huawei_dorado_backup_power_url$"
        "--username" = "$huawei_dorado_backup_power_username$"
    }
}

object CheckCommand "linuxfabrik/huawei-dorado-controller-windows" {
    command = [ LinuxfabrikPluginDir + "\\huawei-dorado-controller.exe" ]
    timeout = 10s
    arguments += {
        "--always-ok" = {
            set_if = "$huawei_dorado_controller_always_ok$"
            description = "Always returns OK."
        }
        "--cache-expire" = "$huawei_dorado_controller_cache_expire$"
        "--device-id" = "$huawei_dorado_controller_device_id$"
        "--no-proxy" = {
            set_if = "$huawei_dorado_controller_no_proxy$"
        }
        "--password" = "$huawei_dorado_controller_password$"
        "--scope" = "$huawei_dorado_controller_scope$"
        "--timeout" = "$huawei_dorado_controller_timeout$"
        "--url" = "$huawei_dorado_controller_url$"
        "--username" = "$huawei_dorado_controller_username$"
    }
}

object CheckCommand "linuxfabrik/huawei-dorado-disk-windows" {
    command = [ LinuxfabrikPluginDir + "\\huawei-dorado-disk.exe" ]
    timeout = 10s
    arguments += {
        "--always-ok" = {
            set_if = "$huawei_dorado_disk_always_ok$"
            description = "Always returns OK."
        }
        "--cache-expire" = "$huawei_dorado_disk_cache_expire$"
        "--device-id" = "$huawei_dorado_disk_device_id$"
        "--no-proxy" = {
            set_if = "$huawei_dorado_disk_no_proxy$"
        }
        "--password" = "$huawei_dorado_disk_password$"
        "--scope" = "$huawei_dorado_disk_scope$"
        "--timeout" = "$huawei_dorado_disk_timeout$"
        "--url" = "$huawei_dorado_disk_url$"
        "--username" = "$huawei_dorado_disk_username$"
    }
}

object CheckCommand "linuxfabrik/huawei-dorado-enclosure-windows" {
    command = [ LinuxfabrikPluginDir + "\\huawei-dorado-enclosure.exe" ]
    timeout = 10s
    arguments += {
        "--always-ok" = {
            set_if = "$huawei_dorado_enclosure_always_ok$"
            description = "Always returns OK."
        }
        "--cache-expire" = "$huawei_dorado_enclosure_cache_expire$"
        "--device-id" = "$huawei_dorado_enclosure_device_id$"
        "--no-proxy" = {
            set_if = "$huawei_dorado_enclosure_no_proxy$"
        }
        "--password" = "$huawei_dorado_enclosure_password$"
        "--scope" = "$huawei_dorado_enclosure_scope$"
        "--timeout" = "$huawei_dorado_enclosure_timeout$"
        "--url" = "$huawei_dorado_enclosure_url$"
        "--username" = "$huawei_dorado_enclosure_username$"
    }
}

object CheckCommand "linuxfabrik/huawei-dorado-fan-windows" {
    command = [ LinuxfabrikPluginDir + "\\huawei-dorado-fan.exe" ]
    timeout = 10s
    arguments += {
        "--always-ok" = {
            set_if = "$huawei_dorado_fan_always_ok$"
            description = "Always returns OK."
        }
        "--cache-expire" = "$huawei_dorado_fan_cache_expire$"
        "--device-id" = "$huawei_dorado_fan_device_id$"
        "--no-proxy" = {
            set_if = "$huawei_dorado_fan_no_proxy$"
        }
        "--password" = "$huawei_dorado_fan_password$"
        "--scope" = "$huawei_dorado_fan_scope$"
        "--timeout" = "$huawei_dorado_fan_timeout$"
        "--url" = "$huawei_dorado_fan_url$"
        "--username" = "$huawei_dorado_fan_username$"
    }
}

object CheckCommand "linuxfabrik/huawei-dorado-host-windows" {
    command = [ LinuxfabrikPluginDir + "\\huawei-dorado-host.exe" ]
    timeout = 10s
    arguments += {
        "--always-ok" = {
            set_if = "$huawei_dorado_host_always_ok$"
            description = "Always returns OK."
        }
        "--cache-expire" = "$huawei_dorado_host_cache_expire$"
        "--device-id" = "$huawei_dorado_host_device_id$"
        "--no-proxy" = {
            set_if = "$huawei_dorado_host_no_proxy$"
        }
        "--password" = "$huawei_dorado_host_password$"
        "--scope" = "$huawei_dorado_host_scope$"
        "--timeout" = "$huawei_dorado_host_timeout$"
        "--url" = "$huawei_dorado_host_url$"
        "--username" = "$huawei_dorado_host_username$"
    }
}

object CheckCommand "linuxfabrik/huawei-dorado-hypermetrodomain-windows" {
    command = [ LinuxfabrikPluginDir + "\\huawei-dorado-hypermetrodomain.exe" ]
    timeout = 10s
    arguments += {
        "--always-ok" = {
            set_if = "$huawei_dorado_hypermetrodomain_always_ok$"
            description = "Always returns OK."
        }
        "--cache-expire" = "$huawei_dorado_hypermetrodomain_cache_expire$"
        "--device-id" = "$huawei_dorado_hypermetrodomain_device_id$"
        "--no-proxy" = {
            set_if = "$huawei_dorado_hypermetrodomain_no_proxy$"
        }
        "--password" = "$huawei_dorado_hypermetrodomain_password$"
        "--scope" = "$huawei_dorado_hypermetrodomain_scope$"
        "--timeout" = "$huawei_dorado_hypermetrodomain_timeout$"
        "--url" = "$huawei_dorado_hypermetrodomain_url$"
        "--username" = "$huawei_dorado_hypermetrodomain_username$"
    }
}

object CheckCommand "linuxfabrik/huawei-dorado-hypermetropair-windows" {
    command = [ LinuxfabrikPluginDir + "\\huawei-dorado-hypermetropair.exe" ]
    timeout = 10s
    arguments += {
        "--always-ok" = {
            set_if = "$huawei_dorado_hypermetropair_always_ok$"
            description = "Always returns OK."
        }
        "--cache-expire" = "$huawei_dorado_hypermetropair_cache_expire$"
        "--device-id" = "$huawei_dorado_hypermetropair_device_id$"
        "--no-proxy" = {
            set_if = "$huawei_dorado_hypermetropair_no_proxy$"
        }
        "--password" = "$huawei_dorado_hypermetropair_password$"
        "--scope" = "$huawei_dorado_hypermetropair_scope$"
        "--timeout" = "$huawei_dorado_hypermetropair_timeout$"
        "--url" = "$huawei_dorado_hypermetropair_url$"
        "--username" = "$huawei_dorado_hypermetropair_username$"
    }
}

object CheckCommand "linuxfabrik/huawei-dorado-interface-windows" {
    command = [ LinuxfabrikPluginDir + "\\huawei-dorado-interface.exe" ]
    timeout = 10s
    arguments += {
        "--always-ok" = {
            set_if = "$huawei_dorado_interface_always_ok$"
            description = "Always returns OK."
        }
        "--cache-expire" = "$huawei_dorado_interface_cache_expire$"
        "--device-id" = "$huawei_dorado_interface_device_id$"
        "--no-proxy" = {
            set_if = "$huawei_dorado_interface_no_proxy$"
        }
        "--password" = "$huawei_dorado_interface_password$"
        "--scope" = "$huawei_dorado_interface_scope$"
        "--timeout" = "$huawei_dorado_interface_timeout$"
        "--url" = "$huawei_dorado_interface_url$"
        "--username" = "$huawei_dorado_interface_username$"
    }
}

object CheckCommand "linuxfabrik/huawei-dorado-power-windows" {
    command = [ LinuxfabrikPluginDir + "\\huawei-dorado-power.exe" ]
    timeout = 10s
    arguments += {
        "--always-ok" = {
            set_if = "$huawei_dorado_power_always_ok$"
            description = "Always returns OK."
        }
        "--cache-expire" = "$huawei_dorado_power_cache_expire$"
        "--device-id" = "$huawei_dorado_power_device_id$"
        "--no-proxy" = {
            set_if = "$huawei_dorado_power_no_proxy$"
        }
        "--password" = "$huawei_dorado_power_password$"
        "--scope" = "$huawei_dorado_power_scope$"
        "--timeout" = "$huawei_dorado_power_timeout$"
        "--url" = "$huawei_dorado_power_url$"
        "--username" = "$huawei_dorado_power_username$"
    }
}

object CheckCommand "linuxfabrik/huawei-dorado-system-windows" {
    command = [ LinuxfabrikPluginDir + "\\huawei-dorado-system.exe" ]
    timeout = 10s
    arguments += {
        "--always-ok" = {
            set_if = "$huawei_dorado_system_always_ok$"
            description = "Always returns OK."
        }
        "--cache-expire" = "$huawei_dorado_system_cache_expire$"
        "--critical" = "$huawei_dorado_system_critical$"
        "--device-id" = "$huawei_dorado_system_device_id$"
        "--no-proxy" = {
            set_if = "$huawei_dorado_system_no_proxy$"
        }
        "--password" = "$huawei_dorado_system_password$"
        "--scope" = "$huawei_dorado_system_scope$"
        "--timeout" = "$huawei_dorado_system_timeout$"
        "--url" = "$huawei_dorado_system_url$"
        "--username" = "$huawei_dorado_system_username$"
        "--warning" = "$huawei_dorado_system_warning$"
    }
}

object CheckCommand "linuxfabrik/infomaniak-events-windows" {
    command = [ LinuxfabrikPluginDir + "\\infomaniak-events.exe" ]
    timeout = 10s
    arguments += {
        "--always-ok" = {
            set_if = "$infomaniak_events_always_ok$"
            description = "Always returns OK."
        }
        "--service" = {
            repeat_key = true
            value = "$infomaniak_events_service$"
        }
        "--token" = "$infomaniak_events_token$"
    }
}

object CheckCommand "linuxfabrik/infomaniak-swiss-backup-devices-windows" {
    command = [ LinuxfabrikPluginDir + "\\infomaniak-swiss-backup-devices.exe" ]
    timeout = 10s
    arguments += {
        "--account-id" = "$infomaniak_swiss_backup_devices_account_id$"
        "--always-ok" = {
            set_if = "$infomaniak_swiss_backup_devices_always_ok$"
            description = "Always returns OK."
        }
        "--critical" = "$infomaniak_swiss_backup_devices_critical$"
        "--severity" = "$infomaniak_swiss_backup_devices_severity$"
        "--token" = "$infomaniak_swiss_backup_devices_token$"
        "--warning" = "$infomaniak_swiss_backup_devices_warning$"
    }
}

object CheckCommand "linuxfabrik/infomaniak-swiss-backup-products-windows" {
    command = [ LinuxfabrikPluginDir + "\\infomaniak-swiss-backup-products.exe" ]
    timeout = 10s
    arguments += {
        "--account-id" = "$infomaniak_swiss_backup_products_account_id$"
        "--always-ok" = {
            set_if = "$infomaniak_swiss_backup_products_always_ok$"
            description = "Always returns OK."
        }
        "--critical" = "$infomaniak_swiss_backup_products_critical$"
        "--severity" = "$infomaniak_swiss_backup_products_severity$"
        "--token" = "$infomaniak_swiss_backup_products_token$"
        "--warning" = "$infomaniak_swiss_backup_products_warning$"
    }
}

object CheckCommand "linuxfabrik/jitsi-videobridge-stats-windows" {
    command = [ LinuxfabrikPluginDir + "\\jitsi-videobridge-stats.exe" ]
    timeout = 10s
    arguments += {
        "--always-ok" = {
            set_if = "$jitsi_videobridge_stats_always_ok$"
            description = "Always returns OK."
        }
        "--critical" = "$jitsi_videobridge_stats_critical$"
        "--password" = "$jitsi_videobridge_stats_password$"
        "--timeout" = "$jitsi_videobridge_stats_timeout$"
        "--url" = "$jitsi_videobridge_stats_url$"
        "--username" = "$jitsi_videobridge_stats_username$"
        "--warning" = "$jitsi_videobridge_stats_warning$"
    }
}

object CheckCommand "linuxfabrik/jitsi-videobridge-status-windows" {
    command = [ LinuxfabrikPluginDir + "\\jitsi-videobridge-status.exe" ]
    timeout = 10s
    arguments += {
        "--always-ok" = {
            set_if = "$jitsi_videobridge_status_always_ok$"
            description = "Always returns OK."
        }
        "--password" = "$jitsi_videobridge_status_password$"
        "--severity" = "$jitsi_videobridge_status_severity$"
        "--timeout" = "$jitsi_videobridge_status_timeout$"
        "--url" = "$jitsi_videobridge_status_url$"
        "--username" = "$jitsi_videobridge_status_username$"
    }
}

object CheckCommand "linuxfabrik/json-values-windows" {
    command = [ LinuxfabrikPluginDir + "\\json-values.exe" ]
    timeout = 10s
    arguments += {
        "--always-ok" = {
            set_if = "$json_values_always_ok$"
            description = "Always returns OK."
        }
        "--filename" = "$json_values_filename$"
        "--insecure" = {
            set_if = "$json_values_insecure$"
        }
        "--message-key" = "$json_values_message_key$"
        "--no-proxy" = {
            set_if = "$json_values_no_proxy$"
        }
        "--password" = "$json_values_password$"
        "--perfdata-key" = "$json_values_perfdata_key$"
        "--state-key" = "$json_values_state_key$"
        "--timeout" = "$json_values_timeout$"
        "--url" = "$json_values_url$"
        "--username" = "$json_values_username$"
    }
}

object CheckCommand "linuxfabrik/kemp-services-windows" {
    command = [ LinuxfabrikPluginDir + "\\kemp-services.exe" ]
    timeout = 10s
    arguments += {
        "--always-ok" = {
            set_if = "$kemp_services_always_ok$"
            description = "Always returns OK."
        }
        "--filter" = "$kemp_services_filter$"
        "--hostname" = "$kemp_services_hostname$"
        "--insecure" = {
            set_if = "$kemp_services_insecure$"
        }
        "--no-proxy" = {
            set_if = "$kemp_services_no_proxy$"
        }
        "--password" = "$kemp_services_password$"
        "--port" = "$kemp_services_port$"
        "--severity" = "$kemp_services_severity$"
        "--timeout" = "$kemp_services_timeout$"
        "--username" = "$kemp_services_username$"
    }
}

object CheckCommand "linuxfabrik/librenms-alerts-windows" {
    command = [ LinuxfabrikPluginDir + "\\librenms-alerts.exe" ]
    timeout = 10s
    arguments += {
        "--always-ok" = {
            set_if = "$librenms_alerts_always_ok$"
            description = "Always returns OK."
        }
        "--device-group" = "$librenms_alerts_device_group$"
        "--device-hostname" = {
            repeat_key = true
            value = "$librenms_alerts_device_hostname$"
        }
        "--device-type" = {
            repeat_key = true
            value = "$librenms_alerts_device_type$"
        }
        "--insecure" = {
            set_if = "$librenms_alerts_insecure$"
        }
        "--lengthy" = {
            set_if = "$librenms_alerts_lengthy$"
        }
        "--no-proxy" = {
            set_if = "$librenms_alerts_no_proxy$"
        }
        "--timeout" = "$librenms_alerts_timeout$"
        "--token" = "$librenms_alerts_token$"
        "--url" = "$librenms_alerts_url$"
    }
}

object CheckCommand "linuxfabrik/librenms-health-windows" {
    command = [ LinuxfabrikPluginDir + "\\librenms-health.exe" ]
    timeout = 10s
    arguments += {
        "--device-group" = "$librenms_health_device_group$"
        "--device-hostname" = {
            repeat_key = true
            value = "$librenms_health_device_hostname$"
        }
        "--device-type" = {
            repeat_key = true
            value = "$librenms_health_device_type$"
        }
        "--insecure" = {
            set_if = "$librenms_health_insecure$"
        }
        "--lengthy" = {
            set_if = "$librenms_health_lengthy$"
        }
        "--no-proxy" = {
            set_if = "$librenms_health_no_proxy$"
        }
        "--timeout" = "$librenms_health_timeout$"
        "--token" = "$librenms_health_token$"
        "--url" = "$librenms_health_url$"
    }
}

object CheckCommand "linuxfabrik/librenms-version-windows" {
    command = [ LinuxfabrikPluginDir + "\\librenms-version.exe" ]
    timeout = 10s
    arguments += {
        "--insecure" = {
            set_if = "$librenms_version_insecure$"
        }
        "--no-proxy" = {
            set_if = "$librenms_version_no_proxy$"
        }
        "--timeout" = "$librenms_version_timeout$"
        "--token" = "$librenms_version_token$"
        "--url" = "$librenms_version_url$"
    }
}

object CheckCommand "linuxfabrik/matomo-reporting-windows" {
    command = [ LinuxfabrikPluginDir + "\\matomo-reporting.exe" ]
    timeout = 10s
    arguments += {
        "--always-ok" = {
            set_if = "$matomo_reporting_always_ok$"
            description = "Always returns OK."
        }
        "--date" = "$matomo_reporting_date$"
        "--idsite" = "$matomo_reporting_idsite$"
        "--insecure" = {
            set_if = "$matomo_reporting_insecure$"
        }
        "--metric" = {
            repeat_key = true
            value = "$matomo_reporting_metric$"
        }
        "--no-proxy" = {
            set_if = "$matomo_reporting_no_proxy$"
        }
        "--password" = "$matomo_reporting_password$"
        "--period" = "$matomo_reporting_period$"
        "--timeout" = "$matomo_reporting_timeout$"
        "--url" = "$matomo_reporting_url$"
    }
}

object CheckCommand "linuxfabrik/matomo-version-windows" {
    command = [ LinuxfabrikPluginDir + "\\matomo-version.exe" ]
    timeout = 10s
    arguments += {
        "--always-ok" = {
            set_if = "$matomo_version_always_ok$"
            description = "Always returns OK."
        }
        "--cache-expire" = "$matomo_version_cache_expire$"
        "--path" = "$matomo_version_path$"
    }
}

object CheckCommand "linuxfabrik/memory-usage-windows" {
    command = [ LinuxfabrikPluginDir + "\\memory-usage.exe" ]
    timeout = 10s
    arguments += {
        "--always-ok" = {
            set_if = "$memory_usage_always_ok$"
            description = "Always returns OK."
        }
        "--critical" = {
            value = "$memory_usage_critical$"
            description = "Set the critical threshold for memory usage (in percent). Default: 95"
        }
        "--warning" = {
            value = "$memory_usage_warning$"
            description = "Set the warning threshold for memory usage (in percent). Default: 90"
        }
    }
}

object CheckCommand "linuxfabrik/metabase-stats-windows" {
    command = [ LinuxfabrikPluginDir + "\\metabase-stats.exe" ]
    timeout = 10s
    arguments += {
        "--cache-expire" = "$metabase_stats_cache_expire$"
        "--critical" = "$metabase_stats_critical$"
        "--password" = "$metabase_stats_password$"
        "--url" = "$metabase_stats_url$"
        "--username" = "$metabase_stats_username$"
        "--warning" = "$metabase_stats_warning$"
    }
}

object CheckCommand "linuxfabrik/mod-qos-stats-windows" {
    command = [ LinuxfabrikPluginDir + "\\mod-qos-stats.exe" ]
    timeout = 10s
    arguments += {
        "--always-ok" = {
            set_if = "$mod_qos_stats_always_ok$"
            description = "Always returns OK."
        }
        "--url" = "$mod_qos_stats_url$"
    }
}

object CheckCommand "linuxfabrik/mysql-aria-windows" {
    command = [ LinuxfabrikPluginDir + "\\mysql-aria.exe" ]
    timeout = 10s
    arguments += {
        "--always-ok" = {
            set_if = "$mysql_aria_always_ok$"
            description = "Always returns OK."
        }
        "--defaults-file" = "$mysql_aria_defaults_file$"
        "--defaults-group" = "$mysql_aria_defaults_group$"
        "--timeout" = "$mysql_aria_timeout$"
    }
}

object CheckCommand "linuxfabrik/mysql-binlog-cache-windows" {
    command = [ LinuxfabrikPluginDir + "\\mysql-binlog-cache.exe" ]
    timeout = 10s
    arguments += {
        "--always-ok" = {
            set_if = "$mysql_binlog_cache_always_ok$"
            description = "Always returns OK."
        }
        "--defaults-file" = "$mysql_binlog_cache_defaults_file$"
        "--defaults-group" = "$mysql_binlog_cache_defaults_group$"
        "--timeout" = "$mysql_binlog_cache_timeout$"
    }
}

object CheckCommand "linuxfabrik/mysql-connections-windows" {
    command = [ LinuxfabrikPluginDir + "\\mysql-connections.exe" ]
    timeout = 10s
    arguments += {
        "--always-ok" = {
            set_if = "$mysql_connections_always_ok$"
            description = "Always returns OK."
        }
        "--defaults-file" = "$mysql_connections_defaults_file$"
        "--defaults-group" = "$mysql_connections_defaults_group$"
        "--ignore-name-resolution" = {
            set_if = "$mysql_connections_ignore_name_resolution$"
        }
        "--timeout" = "$mysql_connections_timeout$"
    }
}

object CheckCommand "linuxfabrik/mysql-database-metrics-windows" {
    command = [ LinuxfabrikPluginDir + "\\mysql-database-metrics.exe" ]
    timeout = 10s
    arguments += {
        "--always-ok" = {
            set_if = "$mysql_database_metrics_always_ok$"
            description = "Always returns OK."
        }
        "--defaults-file" = "$mysql_database_metrics_defaults_file$"
        "--defaults-group" = "$mysql_database_metrics_defaults_group$"
        "--timeout" = "$mysql_database_metrics_timeout$"
    }
}

object CheckCommand "linuxfabrik/mysql-innodb-buffer-pool-instances-windows" {
    command = [ LinuxfabrikPluginDir + "\\mysql-innodb-buffer-pool-instances.exe" ]
    timeout = 10s
    arguments += {
        "--always-ok" = {
            set_if = "$mysql_innodb_buffer_pool_instances_always_ok$"
            description = "Always returns OK."
        }
        "--defaults-file" = "$mysql_innodb_buffer_pool_instances_defaults_file$"
        "--defaults-group" = "$mysql_innodb_buffer_pool_instances_defaults_group$"
        "--timeout" = "$mysql_innodb_buffer_pool_instances_timeout$"
    }
}

object CheckCommand "linuxfabrik/mysql-innodb-buffer-pool-size-windows" {
    command = [ LinuxfabrikPluginDir + "\\mysql-innodb-buffer-pool-size.exe" ]
    timeout = 10s
    arguments += {
        "--always-ok" = {
            set_if = "$mysql_innodb_buffer_pool_size_always_ok$"
            description = "Always returns OK."
        }
        "--defaults-file" = "$mysql_innodb_buffer_pool_size_defaults_file$"
        "--defaults-group" = "$mysql_innodb_buffer_pool_size_defaults_group$"
        "--timeout" = "$mysql_innodb_buffer_pool_size_timeout$"
    }
}

object CheckCommand "linuxfabrik/mysql-innodb-log-waits-windows" {
    command = [ LinuxfabrikPluginDir + "\\mysql-innodb-log-waits.exe" ]
    timeout = 10s
    arguments += {
        "--always-ok" = {
            set_if = "$mysql_innodb_log_waits_always_ok$"
            description = "Always returns OK."
        }
        "--defaults-file" = "$mysql_innodb_log_waits_defaults_file$"
        "--defaults-group" = "$mysql_innodb_log_waits_defaults_group$"
        "--timeout" = "$mysql_innodb_log_waits_timeout$"
    }
}

object CheckCommand "linuxfabrik/mysql-joins-windows" {
    command = [ LinuxfabrikPluginDir + "\\mysql-joins.exe" ]
    timeout = 10s
    arguments += {
        "--always-ok" = {
            set_if = "$mysql_joins_always_ok$"
            description = "Always returns OK."
        }
        "--defaults-file" = "$mysql_joins_defaults_file$"
        "--defaults-group" = "$mysql_joins_defaults_group$"
        "--timeout" = "$mysql_joins_timeout$"
    }
}

object CheckCommand "linuxfabrik/mysql-logfile-windows" {
    command = [ LinuxfabrikPluginDir + "\\mysql-logfile.exe" ]
    timeout = 10s
    arguments += {
        "--always-ok" = {
            set_if = "$mysql_logfile_always_ok$"
            description = "Always returns OK."
        }
        "--cache-expire" = "$mysql_logfile_cache_expire$"
        "--defaults-file" = "$mysql_logfile_defaults_file$"
        "--defaults-group" = "$mysql_logfile_defaults_group$"
        "--hostname" = "$mysql_logfile_hostname$"
        "--ignore-pattern" = {
            repeat_key = true
            value = "$mysql_logfile_ignore_pattern$"
        }
        "--ignore-regex" = {
            repeat_key = true
            value = "$mysql_logfile_ignore_regex$"
        }
        "--port" = "$mysql_logfile_port$"
        "--server-log" = "$mysql_logfile_server_log$"
        "--timeout" = "$mysql_logfile_timeout$"
    }
}

object CheckCommand "linuxfabrik/mysql-memory-windows" {
    command = [ LinuxfabrikPluginDir + "\\mysql-memory.exe" ]
    timeout = 10s
    arguments += {
        "--always-ok" = {
            set_if = "$mysql_memory_always_ok$"
            description = "Always returns OK."
        }
        "--defaults-file" = "$mysql_memory_defaults_file$"
        "--defaults-group" = "$mysql_memory_defaults_group$"
        "--timeout" = "$mysql_memory_timeout$"
    }
}

object CheckCommand "linuxfabrik/mysql-open-files-windows" {
    command = [ LinuxfabrikPluginDir + "\\mysql-open-files.exe" ]
    timeout = 10s
    arguments += {
        "--always-ok" = {
            set_if = "$mysql_open_files_always_ok$"
            description = "Always returns OK."
        }
        "--defaults-file" = "$mysql_open_files_defaults_file$"
        "--defaults-group" = "$mysql_open_files_defaults_group$"
        "--timeout" = "$mysql_open_files_timeout$"
    }
}

object CheckCommand "linuxfabrik/mysql-perf-metrics-windows" {
    command = [ LinuxfabrikPluginDir + "\\mysql-perf-metrics.exe" ]
    timeout = 10s
    arguments += {
        "--always-ok" = {
            set_if = "$mysql_perf_metrics_always_ok$"
            description = "Always returns OK."
        }
        "--defaults-file" = "$mysql_perf_metrics_defaults_file$"
        "--defaults-group" = "$mysql_perf_metrics_defaults_group$"
        "--timeout" = "$mysql_perf_metrics_timeout$"
    }
}

object CheckCommand "linuxfabrik/mysql-replica-status-windows" {
    command = [ LinuxfabrikPluginDir + "\\mysql-replica-status.exe" ]
    timeout = 10s
    arguments += {
        "--always-ok" = {
            set_if = "$mysql_replica_status_always_ok$"
            description = "Always returns OK."
        }
        "--defaults-file" = "$mysql_replica_status_defaults_file$"
        "--defaults-group" = "$mysql_replica_status_defaults_group$"
        "--severity" = "$mysql_replica_status_severity$"
        "--timeout" = "$mysql_replica_status_timeout$"
    }
}

object CheckCommand "linuxfabrik/mysql-slow-queries-windows" {
    command = [ LinuxfabrikPluginDir + "\\mysql-slow-queries.exe" ]
    timeout = 10s
    arguments += {
        "--always-ok" = {
            set_if = "$mysql_slow_queries_always_ok$"
            description = "Always returns OK."
        }
        "--defaults-file" = "$mysql_slow_queries_defaults_file$"
        "--defaults-group" = "$mysql_slow_queries_defaults_group$"
        "--timeout" = "$mysql_slow_queries_timeout$"
    }
}

object CheckCommand "linuxfabrik/mysql-sorts-windows" {
    command = [ LinuxfabrikPluginDir + "\\mysql-sorts.exe" ]
    timeout = 10s
    arguments += {
        "--always-ok" = {
            set_if = "$mysql_sorts_always_ok$"
            description = "Always returns OK."
        }
        "--defaults-file" = "$mysql_sorts_defaults_file$"
        "--defaults-group" = "$mysql_sorts_defaults_group$"
        "--timeout" = "$mysql_sorts_timeout$"
    }
}

object CheckCommand "linuxfabrik/mysql-storage-engines-windows" {
    command = [ LinuxfabrikPluginDir + "\\mysql-storage-engines.exe" ]
    timeout = 10s
    arguments += {
        "--always-ok" = {
            set_if = "$mysql_storage_engines_always_ok$"
            description = "Always returns OK."
        }
        "--defaults-file" = "$mysql_storage_engines_defaults_file$"
        "--defaults-group" = "$mysql_storage_engines_defaults_group$"
        "--timeout" = "$mysql_storage_engines_timeout$"
    }
}

object CheckCommand "linuxfabrik/mysql-system-windows" {
    command = [ LinuxfabrikPluginDir + "\\mysql-system.exe" ]
    timeout = 10s
    arguments += {
        "--always-ok" = {
            set_if = "$mysql_system_always_ok$"
            description = "Always returns OK."
        }
        "--maxportsallowed" = "$mysql_system_maxportsallowed$"
    }
}

object CheckCommand "linuxfabrik/mysql-table-cache-windows" {
    command = [ LinuxfabrikPluginDir + "\\mysql-table-cache.exe" ]
    timeout = 10s
    arguments += {
        "--always-ok" = {
            set_if = "$mysql_table_cache_always_ok$"
            description = "Always returns OK."
        }
        "--defaults-file" = "$mysql_table_cache_defaults_file$"
        "--defaults-group" = "$mysql_table_cache_defaults_group$"
        "--timeout" = "$mysql_table_cache_timeout$"
    }
}

object CheckCommand "linuxfabrik/mysql-table-definition-cache-windows" {
    command = [ LinuxfabrikPluginDir + "\\mysql-table-definition-cache.exe" ]
    timeout = 10s
    arguments += {
        "--always-ok" = {
            set_if = "$mysql_table_definition_cache_always_ok$"
            description = "Always returns OK."
        }
        "--defaults-file" = "$mysql_table_definition_cache_defaults_file$"
        "--defaults-group" = "$mysql_table_definition_cache_defaults_group$"
        "--timeout" = "$mysql_table_definition_cache_timeout$"
    }
}

object CheckCommand "linuxfabrik/mysql-table-indexes-windows" {
    command = [ LinuxfabrikPluginDir + "\\mysql-table-indexes.exe" ]
    timeout = 10s
    arguments += {
        "--always-ok" = {
            set_if = "$mysql_table_indexes_always_ok$"
            description = "Always returns OK."
        }
        "--defaults-file" = "$mysql_table_indexes_defaults_file$"
        "--defaults-group" = "$mysql_table_indexes_defaults_group$"
        "--timeout" = "$mysql_table_indexes_timeout$"
    }
}

object CheckCommand "linuxfabrik/mysql-table-locks-windows" {
    command = [ LinuxfabrikPluginDir + "\\mysql-table-locks.exe" ]
    timeout = 10s
    arguments += {
        "--always-ok" = {
            set_if = "$mysql_table_locks_always_ok$"
            description = "Always returns OK."
        }
        "--defaults-file" = "$mysql_table_locks_defaults_file$"
        "--defaults-group" = "$mysql_table_locks_defaults_group$"
        "--timeout" = "$mysql_table_locks_timeout$"
    }
}

object CheckCommand "linuxfabrik/mysql-temp-tables-windows" {
    command = [ LinuxfabrikPluginDir + "\\mysql-temp-tables.exe" ]
    timeout = 10s
    arguments += {
        "--always-ok" = {
            set_if = "$mysql_temp_tables_always_ok$"
            description = "Always returns OK."
        }
        "--defaults-file" = "$mysql_temp_tables_defaults_file$"
        "--defaults-group" = "$mysql_temp_tables_defaults_group$"
        "--timeout" = "$mysql_temp_tables_timeout$"
    }
}

object CheckCommand "linuxfabrik/mysql-thread-cache-windows" {
    command = [ LinuxfabrikPluginDir + "\\mysql-thread-cache.exe" ]
    timeout = 10s
    arguments += {
        "--always-ok" = {
            set_if = "$mysql_thread_cache_always_ok$"
            description = "Always returns OK."
        }
        "--defaults-file" = "$mysql_thread_cache_defaults_file$"
        "--defaults-group" = "$mysql_thread_cache_defaults_group$"
        "--timeout" = "$mysql_thread_cache_timeout$"
    }
}

object CheckCommand "linuxfabrik/mysql-traffic-windows" {
    command = [ LinuxfabrikPluginDir + "\\mysql-traffic.exe" ]
    timeout = 10s
    arguments += {
        "--defaults-file" = "$mysql_traffic_defaults_file$"
        "--defaults-group" = "$mysql_traffic_defaults_group$"
        "--timeout" = "$mysql_traffic_timeout$"
    }
}

object CheckCommand "linuxfabrik/mysql-user-security-windows" {
    command = [ LinuxfabrikPluginDir + "\\mysql-user-security.exe" ]
    timeout = 10s
    arguments += {
        "--always-ok" = {
            set_if = "$mysql_user_security_always_ok$"
            description = "Always returns OK."
        }
        "--defaults-file" = "$mysql_user_security_defaults_file$"
        "--defaults-group" = "$mysql_user_security_defaults_group$"
        "--severity" = "$mysql_user_security_severity$"
        "--timeout" = "$mysql_user_security_timeout$"
    }
}

object CheckCommand "linuxfabrik/network-connections-windows" {
    command = [ LinuxfabrikPluginDir + "\\network-connections.exe" ]
    timeout = 10s
    arguments += {
        "--conn-status" = {
            repeat_key = true
            value = "$network_connections_conn_status$"
            description = "Filter the status (all,close,close_wait,closing,established,fin_wait1,fin_wait2,last_ack,listen,none,syn_recv,syn_sent,time_wait) of the connections (repeating). Default: None"
        }
        "--conn-type" = {
            repeat_key = true
            value = "$network_connections_conn_type$"
            description = "Filter the family/type (all,tcp,tcp6,udp,udp6) of the connections (repeating). Default: None"
        }
        "--critical" = {
            value = "$network_connections_critical$"
            description = "Threshold for the number of connections. Type: None or Range. Default: None"
        }
        "--warning" = {
            value = "$network_connections_warning$"
            description = "Threshold for the number of connections. Type: None or Range. Default: None"
        }
    }
}

object CheckCommand "linuxfabrik/network-io-windows" {
    command = [ LinuxfabrikPluginDir + "\\network-io.exe" ]
    timeout = 10s
    arguments += {
        "--always-ok" = {
            set_if = "$network_io_always_ok$"
            description = "Always returns OK."
        }
        "--count" = {
            value = "$network_io_count$"
            description = "Number of times the value has to be above the given thresholds. Default: 5"
        }
        "--critical" = {
            value = "$network_io_critical$"
            description = "Set the CRIT threshold for network I/O rx/tx rate over the entire period as a percentage of the maximum network I/O rate. Default: >= 90"
        }
        "--ignore" = {
            repeat_key = true
            value = "$network_io_ignore$"
            description = "Ignore network interfaces starting with a string like 'tun' (repeating). Default: ['lo']"
        }
        "--warning" = {
            value = "$network_io_warning$"
            description = "Set the CRIT threshold for network I/O rx/tx rate over the entire period as a percentage of the maximum network I/O rate. Default: >= 80"
        }
    }
}

object CheckCommand "linuxfabrik/network-port-tcp-windows" {
    command = [ LinuxfabrikPluginDir + "\\network-port-tcp.exe" ]
    timeout = 10s
    arguments += {
        "--hostname" = "$network_port_tcp_hostname$"
        "--port" = "$network_port_tcp_port$"
        "--portname" = "$network_port_tcp_portname$"
        "--severity" = "$network_port_tcp_severity$"
        "--timeout" = "$network_port_tcp_timeout$"
        "--type" = "$network_port_tcp_type$"
    }
}

object CheckCommand "linuxfabrik/nextcloud-security-scan-windows" {
    command = [ LinuxfabrikPluginDir + "\\nextcloud-security-scan.exe" ]
    timeout = 10s
    arguments += {
        "--timeout" = "$nextcloud_security_scan_timeout$"
        "--trigger" = "$nextcloud_security_scan_trigger$"
        "--url" = "$nextcloud_security_scan_url$"
    }
}

object CheckCommand "linuxfabrik/nextcloud-stats-windows" {
    command = [ LinuxfabrikPluginDir + "\\nextcloud-stats.exe" ]
    timeout = 10s
    arguments += {
        "--insecure" = {
            set_if = "$nextcloud_stats_insecure$"
        }
        "--no-proxy" = {
            set_if = "$nextcloud_stats_no_proxy$"
        }
        "--password" = "$nextcloud_stats_password$"
        "--url" = "$nextcloud_stats_url$"
        "--username" = "$nextcloud_stats_username$"
    }
}

object CheckCommand "linuxfabrik/nextcloud-version-windows" {
    command = [ LinuxfabrikPluginDir + "\\nextcloud-version.exe" ]
    timeout = 10s
    arguments += {
        "--always-ok" = {
            set_if = "$nextcloud_version_always_ok$"
            description = "Always returns OK."
        }
        "--check-major" = {
            set_if = "$nextcloud_version_check_major$"
        }
        "--check-minor" = {
            set_if = "$nextcloud_version_check_minor$"
        }
        "--check-patch" = {
            set_if = "$nextcloud_version_check_patch$"
        }
        "--offset-eol" = "$nextcloud_version_offset_eol$"
        "--path" = "$nextcloud_version_path$"
    }
}

object CheckCommand "linuxfabrik/nginx-status-windows" {
    command = [ LinuxfabrikPluginDir + "\\nginx-status.exe" ]
    timeout = 10s
    arguments += {
        "--always-ok" = {
            set_if = "$nginx_status_always_ok$"
            description = "Always returns OK."
        }
        "--critical" = "$nginx_status_critical$"
        "--url" = "$nginx_status_url$"
        "--warning" = "$nginx_status_warning$"
    }
}

object CheckCommand "linuxfabrik/nodebb-cache-windows" {
    command = [ LinuxfabrikPluginDir + "\\nodebb-cache.exe" ]
    timeout = 10s
    arguments += {
        "--always-ok" = {
            set_if = "$nodebb_cache_always_ok$"
            description = "Always returns OK."
        }
        "--critical" = "$nodebb_cache_critical$"
        "--insecure" = {
            set_if = "$nodebb_cache_insecure$"
        }
        "--severity" = "$nodebb_cache_severity$"
        "--timeout" = "$nodebb_cache_timeout$"
        "--token" = "$nodebb_cache_token$"
        "--url" = "$nodebb_cache_url$"
        "--warning" = "$nodebb_cache_warning$"
    }
}

object CheckCommand "linuxfabrik/nodebb-database-windows" {
    command = [ LinuxfabrikPluginDir + "\\nodebb-database.exe" ]
    timeout = 10s
    arguments += {
        "--always-ok" = {
            set_if = "$nodebb_database_always_ok$"
            description = "Always returns OK."
        }
        "--critical" = "$nodebb_database_critical$"
        "--insecure" = {
            set_if = "$nodebb_database_insecure$"
        }
        "--severity" = "$nodebb_database_severity$"
        "--timeout" = "$nodebb_database_timeout$"
        "--token" = "$nodebb_database_token$"
        "--url" = "$nodebb_database_url$"
        "--warning" = "$nodebb_database_warning$"
    }
}

object CheckCommand "linuxfabrik/nodebb-errors-windows" {
    command = [ LinuxfabrikPluginDir + "\\nodebb-errors.exe" ]
    timeout = 10s
    arguments += {
        "--always-ok" = {
            set_if = "$nodebb_errors_always_ok$"
            description = "Always returns OK."
        }
        "--insecure" = {
            set_if = "$nodebb_errors_insecure$"
        }
        "--severity" = "$nodebb_errors_severity$"
        "--timeout" = "$nodebb_errors_timeout$"
        "--token" = "$nodebb_errors_token$"
        "--url" = "$nodebb_errors_url$"
    }
}

object CheckCommand "linuxfabrik/nodebb-events-windows" {
    command = [ LinuxfabrikPluginDir + "\\nodebb-events.exe" ]
    timeout = 10s
    arguments += {
        "--insecure" = {
            set_if = "$nodebb_events_insecure$"
        }
        "--timeout" = "$nodebb_events_timeout$"
        "--token" = "$nodebb_events_token$"
        "--url" = "$nodebb_events_url$"
    }
}

object CheckCommand "linuxfabrik/nodebb-groups-windows" {
    command = [ LinuxfabrikPluginDir + "\\nodebb-groups.exe" ]
    timeout = 10s
    arguments += {
        "--insecure" = {
            set_if = "$nodebb_groups_insecure$"
        }
        "--timeout" = "$nodebb_groups_timeout$"
        "--token" = "$nodebb_groups_token$"
        "--url" = "$nodebb_groups_url$"
    }
}

object CheckCommand "linuxfabrik/nodebb-info-windows" {
    command = [ LinuxfabrikPluginDir + "\\nodebb-info.exe" ]
    timeout = 10s
    arguments += {
        "--always-ok" = {
            set_if = "$nodebb_info_always_ok$"
            description = "Always returns OK."
        }
        "--critical" = "$nodebb_info_critical$"
        "--insecure" = {
            set_if = "$nodebb_info_insecure$"
        }
        "--timeout" = "$nodebb_info_timeout$"
        "--token" = "$nodebb_info_token$"
        "--url" = "$nodebb_info_url$"
        "--warning" = "$nodebb_info_warning$"
    }
}

object CheckCommand "linuxfabrik/nodebb-users-windows" {
    command = [ LinuxfabrikPluginDir + "\\nodebb-users.exe" ]
    timeout = 10s
    arguments += {
        "--always-ok" = {
            set_if = "$nodebb_users_always_ok$"
            description = "Always returns OK."
        }
        "--insecure" = {
            set_if = "$nodebb_users_insecure$"
        }
        "--severity" = "$nodebb_users_severity$"
        "--timeout" = "$nodebb_users_timeout$"
        "--token" = "$nodebb_users_token$"
        "--url" = "$nodebb_users_url$"
    }
}

object CheckCommand "linuxfabrik/nodebb-version-windows" {
    command = [ LinuxfabrikPluginDir + "\\nodebb-version.exe" ]
    timeout = 10s
    arguments += {
        "--always-ok" = {
            set_if = "$nodebb_version_always_ok$"
            description = "Always returns OK."
        }
        "--insecure" = {
            set_if = "$nodebb_version_insecure$"
        }
        "--timeout" = "$nodebb_version_timeout$"
        "--token" = "$nodebb_version_token$"
        "--url" = "$nodebb_version_url$"
    }
}

object CheckCommand "linuxfabrik/ntp-w32tm-windows" {
    command = [ LinuxfabrikPluginDir + "\\ntp-w32tm.exe" ]
    timeout = 10s
    arguments += {
        "--critical" = {
            value = "$ntp_w32tm_critical$"
            description = "Set the critical threshold for the time since 'Last Good Sync', in s. Default: 129600s"
        }
        "--warning" = {
            value = "$ntp_w32tm_warning$"
            description = "Set the warning threshold for the time since 'Last Good Sync', in s. Default: 28800s"
        }
    }
}

object CheckCommand "linuxfabrik/onlyoffice-stats-windows" {
    command = [ LinuxfabrikPluginDir + "\\onlyoffice-stats.exe" ]
    timeout = 10s
    arguments += {
        "--timeout" = "$onlyoffice_stats_timeout$"
        "--url" = "$onlyoffice_stats_url$"
    }
}

object CheckCommand "linuxfabrik/path-rw-test-windows" {
    command = [ LinuxfabrikPluginDir + "\\path-rw-test.exe" ]
    timeout = 10s
    arguments += {
        "--always-ok" = {
            set_if = "$path_rw_test_always_ok$"
            description = "Always returns OK."
        }
        "--path" = {
            repeat_key = true
            value = "$path_rw_test_path$"
        }
        "--severity" = "$path_rw_test_severity$"
    }
}

object CheckCommand "linuxfabrik/php-fpm-ping-windows" {
    command = [ LinuxfabrikPluginDir + "\\php-fpm-ping.exe" ]
    timeout = 10s
    arguments += {
        "--always-ok" = {
            set_if = "$php_fpm_ping_always_ok$"
            description = "Always returns OK."
        }
        "--response" = "$php_fpm_ping_response$"
        "--severity" = "$php_fpm_ping_severity$"
        "--url" = "$php_fpm_ping_url$"
    }
}

object CheckCommand "linuxfabrik/php-fpm-status-windows" {
    command = [ LinuxfabrikPluginDir + "\\php-fpm-status.exe" ]
    timeout = 10s
    arguments += {
        "--always-ok" = {
            set_if = "$php_fpm_status_always_ok$"
            description = "Always returns OK."
        }
        "--critical" = "$php_fpm_status_critical$"
        "--critical-maxchildren" = "$php_fpm_status_critical_maxchildren$"
        "--critical-slowreq" = "$php_fpm_status_critical_slowreq$"
        "--url" = "$php_fpm_status_url$"
        "--warning" = "$php_fpm_status_warning$"
        "--warning-maxchildren" = "$php_fpm_status_warning_maxchildren$"
        "--warning-slowreq" = "$php_fpm_status_warning_slowreq$"
    }
}

object CheckCommand "linuxfabrik/php-status-windows" {
    command = [ LinuxfabrikPluginDir + "\\php-status.exe" ]
    timeout = 10s
    arguments += {
        "--always-ok" = {
            set_if = "$php_status_always_ok$"
            description = "Always returns OK."
        }
        "--config" = {
            repeat_key = true
            value = "$php_status_config$"
        }
        "--critical" = "$php_status_critical$"
        "--dev" = {
            set_if = "$php_status_dev$"
        }
        "--module" = {
            repeat_key = true
            value = "$php_status_module$"
        }
        "--url" = "$php_status_url$"
        "--warning" = "$php_status_warning$"
    }
}

object CheckCommand "linuxfabrik/php-version-windows" {
    command = [ LinuxfabrikPluginDir + "\\php-version.exe" ]
    timeout = 10s
    arguments += {
        "--always-ok" = {
            set_if = "$php_version_always_ok$"
            description = "Always returns OK."
        }
        "--check-major" = {
            set_if = "$php_version_check_major$"
        }
        "--check-minor" = {
            set_if = "$php_version_check_minor$"
        }
        "--check-patch" = {
            set_if = "$php_version_check_patch$"
        }
        "--offset-eol" = "$php_version_offset_eol$"
        "--path" = "$php_version_path$"
    }
}

object CheckCommand "linuxfabrik/pip-updates-windows" {
    command = [ LinuxfabrikPluginDir + "\\pip-updates.exe" ]
    timeout = 10s
    arguments += {
        "--always-ok" = {
            set_if = "$pip_updates_always_ok$"
            description = "Always returns OK."
        }
        "--critical" = "$pip_updates_critical$"
        "--exclude" = {
            repeat_key = true
            value = "$pip_updates_exclude$"
        }
        "--extra-index-url" = {
            repeat_key = true
            value = "$pip_updates_extra_index_url$"
        }
        "--find-links" = {
            repeat_key = true
            value = "$pip_updates_find_links$"
        }
        "--index-url" = "$pip_updates_index_url$"
        "--local" = {
            set_if = "$pip_updates_local$"
        }
        "--no-index" = {
            set_if = "$pip_updates_no_index$"
        }
        "--not-required" = {
            set_if = "$pip_updates_not_required$"
        }
        "--pre" = {
            set_if = "$pip_updates_pre$"
        }
        "--user" = {
            set_if = "$pip_updates_user$"
        }
        "--virtualenv" = "$pip_updates_virtualenv$"
        "--warning" = "$pip_updates_warning$"
    }
}

object CheckCommand "linuxfabrik/procs-windows" {
    command = [ LinuxfabrikPluginDir + "\\procs.exe" ]
    timeout = 10s
    arguments += {
        "--always-ok" = {
            set_if = "$procs_always_ok$"
            description = "Always returns OK."
        }
        "--argument" = {
            value = "$procs_argument$"
            description = "Filter: Search only for processes containing ARGUMENT in the command, for example `-s` (case-insensitive)."
        }
        "--command" = {
            value = "$procs_command$"
            description = "Filter: Search only for processes starting with COMMAND, for example `bash` (without path, case-insensitive)."
        }
        "--critical" = {
            value = "$procs_critical$"
            description = "Threshold for the number of processes. Type: None or Range. Default: None"
        }
        "--critical-age" = {
            value = "$procs_critical_age$"
            description = "Threshold for age of the process, in seconds. Type: None or Range. Default: None"
        }
        "--critical-mem" = {
            value = "$procs_critical_mem$"
            description = "Threshold for memory usage, in bytes. Type: None or Range. Default: None"
        }
        "--critical-mem-percent" = {
            value = "$procs_critical_mem_percent$"
            description = "Threshold for memory usage, in percent. Type: None or Range. Default: None"
        }
        "--no-kthreads" = {
            set_if = "$procs_no_kthreads$"
            description = "Filter: Only scan for non kernel threads (works on Linux only). Default: False"
        }
        "--status" = {
            value = "$procs_status$"
            description = "Filter: Search only for processes that have a specific status (dead,disk-sleep,idle,locked,parked,running,sleeping,stopped,suspended,tracing-stop,waiting,wake-kill,waking,zombie). Default: None"
        }
        "--username" = {
            value = "$procs_username$"
            description = "Filter: Search only for processes with specific user name, e.g. `apache` (case-insensitive)."
        }
        "--warning" = {
            value = "$procs_warning$"
            description = "Threshold for the number of processes. Type: None or Range. Default: None"
        }
        "--warning-age" = {
            value = "$procs_warning_age$"
            description = "Threshold for age of the process, in seconds. Type: None or Range. Default: None"
        }
        "--warning-mem" = {
            value = "$procs_warning_mem$"
            description = "Threshold for memory usage, in bytes. Type: None or Range. Default: None"
        }
        "--warning-mem-percent" = {
            value = "$procs_warning_mem_percent$"
            description = "Threshold for memory usage, in percent. Type: None or Range. Default: None"
        }
    }
}

object CheckCommand "linuxfabrik/python-version-windows" {
    command = [ LinuxfabrikPluginDir + "\\python-version.exe" ]
    timeout = 10s
    arguments += {
        "--always-ok" = {
            set_if = "$python_version_always_ok$"
            description = "Always returns OK."
        }
        "--check-major" = {
            set_if = "$python_version_check_major$"
        }
        "--check-minor" = {
            set_if = "$python_version_check_minor$"
        }
        "--check-patch" = {
            set_if = "$python_version_check_patch$"
        }
        "--offset-eol" = "$python_version_offset_eol$"
        "--path" = "$python_version_path$"
    }
}

object CheckCommand "linuxfabrik/qts-cpu-usage-windows" {
    command = [ LinuxfabrikPluginDir + "\\qts-cpu-usage.exe" ]
    timeout = 10s
    arguments += {
        "--always-ok" = {
            set_if = "$qts_cpu_usage_always_ok$"
            description = "Always returns OK."
        }
        "--count" = "$qts_cpu_usage_count$"
        "--critical" = "$qts_cpu_usage_critical$"
        "--insecure" = {
            set_if = "$qts_cpu_usage_insecure$"
        }
        "--no-proxy" = {
            set_if = "$qts_cpu_usage_no_proxy$"
        }
        "--password" = "$qts_cpu_usage_password$"
        "--timeout" = "$qts_cpu_usage_timeout$"
        "--url" = "$qts_cpu_usage_url$"
        "--username" = "$qts_cpu_usage_username$"
        "--warning" = "$qts_cpu_usage_warning$"
    }
}

object CheckCommand "linuxfabrik/qts-disk-smart-windows" {
    command = [ LinuxfabrikPluginDir + "\\qts-disk-smart.exe" ]
    timeout = 10s
    arguments += {
        "--always-ok" = {
            set_if = "$qts_disk_smart_always_ok$"
            description = "Always returns OK."
        }
        "--insecure" = {
            set_if = "$qts_disk_smart_insecure$"
        }
        "--no-proxy" = {
            set_if = "$qts_disk_smart_no_proxy$"
        }
        "--password" = "$qts_disk_smart_password$"
        "--timeout" = "$qts_disk_smart_timeout$"
        "--url" = "$qts_disk_smart_url$"
        "--username" = "$qts_disk_smart_username$"
    }
}

object CheckCommand "linuxfabrik/qts-memory-usage-windows" {
    command = [ LinuxfabrikPluginDir + "\\qts-memory-usage.exe" ]
    timeout = 10s
    arguments += {
        "--always-ok" = {
            set_if = "$qts_memory_usage_always_ok$"
            description = "Always returns OK."
        }
        "--critical" = "$qts_memory_usage_critical$"
        "--insecure" = {
            set_if = "$qts_memory_usage_insecure$"
        }
        "--no-proxy" = {
            set_if = "$qts_memory_usage_no_proxy$"
        }
        "--password" = "$qts_memory_usage_password$"
        "--timeout" = "$qts_memory_usage_timeout$"
        "--url" = "$qts_memory_usage_url$"
        "--username" = "$qts_memory_usage_username$"
        "--warning" = "$qts_memory_usage_warning$"
    }
}

object CheckCommand "linuxfabrik/qts-temperatures-windows" {
    command = [ LinuxfabrikPluginDir + "\\qts-temperatures.exe" ]
    timeout = 10s
    arguments += {
        "--always-ok" = {
            set_if = "$qts_temperatures_always_ok$"
            description = "Always returns OK."
        }
        "--insecure" = {
            set_if = "$qts_temperatures_insecure$"
        }
        "--no-proxy" = {
            set_if = "$qts_temperatures_no_proxy$"
        }
        "--password" = "$qts_temperatures_password$"
        "--timeout" = "$qts_temperatures_timeout$"
        "--url" = "$qts_temperatures_url$"
        "--username" = "$qts_temperatures_username$"
    }
}

object CheckCommand "linuxfabrik/qts-uptime-windows" {
    command = [ LinuxfabrikPluginDir + "\\qts-uptime.exe" ]
    timeout = 10s
    arguments += {
        "--insecure" = {
            set_if = "$qts_uptime_insecure$"
        }
        "--no-proxy" = {
            set_if = "$qts_uptime_no_proxy$"
        }
        "--password" = "$qts_uptime_password$"
        "--timeout" = "$qts_uptime_timeout$"
        "--url" = "$qts_uptime_url$"
        "--username" = "$qts_uptime_username$"
    }
}

object CheckCommand "linuxfabrik/qts-version-windows" {
    command = [ LinuxfabrikPluginDir + "\\qts-version.exe" ]
    timeout = 10s
    arguments += {
        "--always-ok" = {
            set_if = "$qts_version_always_ok$"
            description = "Always returns OK."
        }
        "--insecure" = {
            set_if = "$qts_version_insecure$"
        }
        "--no-proxy" = {
            set_if = "$qts_version_no_proxy$"
        }
        "--password" = "$qts_version_password$"
        "--timeout" = "$qts_version_timeout$"
        "--url" = "$qts_version_url$"
        "--username" = "$qts_version_username$"
    }
}

object CheckCommand "linuxfabrik/redfish-drives-windows" {
    command = [ LinuxfabrikPluginDir + "\\redfish-drives.exe" ]
    timeout = 10s
    arguments += {
        "--always-ok" = {
            set_if = "$redfish_drives_always_ok$"
            description = "Always returns OK."
        }
        "--password" = "$redfish_drives_password$"
        "--url" = "$redfish_drives_url$"
        "--username" = "$redfish_drives_username$"
    }
}

object CheckCommand "linuxfabrik/redfish-sel-windows" {
    command = [ LinuxfabrikPluginDir + "\\redfish-sel.exe" ]
    timeout = 10s
    arguments += {
        "--always-ok" = {
            set_if = "$redfish_sel_always_ok$"
            description = "Always returns OK."
        }
        "--password" = "$redfish_sel_password$"
        "--url" = "$redfish_sel_url$"
        "--username" = "$redfish_sel_username$"
    }
}

object CheckCommand "linuxfabrik/redfish-sensor-windows" {
    command = [ LinuxfabrikPluginDir + "\\redfish-sensor.exe" ]
    timeout = 10s
    arguments += {
        "--always-ok" = {
            set_if = "$redfish_sensor_always_ok$"
            description = "Always returns OK."
        }
        "--password" = "$redfish_sensor_password$"
        "--url" = "$redfish_sensor_url$"
        "--username" = "$redfish_sensor_username$"
    }
}

object CheckCommand "linuxfabrik/restic-check-windows" {
    command = [ LinuxfabrikPluginDir + "\\restic-check.exe" ]
    timeout = 5m
    arguments += {
        "--password-file" = "$restic_check_password_file$"
        "--repo" = "$restic_check_repo$"
    }
}

object CheckCommand "linuxfabrik/restic-snapshots-windows" {
    command = [ LinuxfabrikPluginDir + "\\restic-snapshots.exe" ]
    timeout = 5m
    arguments += {
        "--critical" = "$restic_snapshots_critical$"
        "--group-by" = "$restic_snapshots_group_by$"
        "--host" = {
            repeat_key = true
            value = "$restic_snapshots_host$"
        }
        "--latest" = "$restic_snapshots_latest$"
        "--lengthy" = {
            set_if = "$restic_snapshots_lengthy$"
        }
        "--password-file" = "$restic_snapshots_password_file$"
        "--path" = {
            repeat_key = true
            value = "$restic_snapshots_path$"
        }
        "--repo" = "$restic_snapshots_repo$"
        "--tag" = {
            repeat_key = true
            value = "$restic_snapshots_tag$"
        }
        "--warning" = "$restic_snapshots_warning$"
    }
}

object CheckCommand "linuxfabrik/restic-stats-windows" {
    command = [ LinuxfabrikPluginDir + "\\restic-stats.exe" ]
    timeout = 5m
    arguments += {
        "--host" = {
            repeat_key = true
            value = "$restic_stats_host$"
        }
        "--mode" = "$restic_stats_mode$"
        "--password-file" = "$restic_stats_password_file$"
        "--path" = {
            repeat_key = true
            value = "$restic_stats_path$"
        }
        "--repo" = "$restic_stats_repo$"
        "--tag" = {
            repeat_key = true
            value = "$restic_stats_tag$"
        }
    }
}

object CheckCommand "linuxfabrik/rocketchat-stats-windows" {
    command = [ LinuxfabrikPluginDir + "\\rocketchat-stats.exe" ]
    timeout = 10s
    arguments += {
        "--password" = "$rocketchat_stats_password$"
        "--url" = "$rocketchat_stats_url$"
        "--username" = "$rocketchat_stats_username$"
    }
}

object CheckCommand "linuxfabrik/rocketchat-version-windows" {
    command = [ LinuxfabrikPluginDir + "\\rocketchat-version.exe" ]
    timeout = 10s
    arguments += {
        "--always-ok" = {
            set_if = "$rocketchat_version_always_ok$"
            description = "Always returns OK."
        }
        "--cache-expire" = "$rocketchat_version_cache_expire$"
        "--password" = "$rocketchat_version_password$"
        "--url" = "$rocketchat_version_url$"
        "--username" = "$rocketchat_version_username$"
    }
}

object CheckCommand "linuxfabrik/sap-open-concur-com-windows" {
    command = [ LinuxfabrikPluginDir + "\\sap-open-concur-com.exe" ]
    timeout = 10s
    arguments += {
        "--always-ok" = {
            set_if = "$sap_open_concur_com_always_ok$"
            description = "Always returns OK."
        }
        "--datacenter" = "$sap_open_concur_com_datacenter$"
        "--no-proxy" = {
            set_if = "$sap_open_concur_com_no_proxy$"
        }
        "--service" = "$sap_open_concur_com_service$"
        "--timeout" = "$sap_open_concur_com_timeout$"
        "--utc-offset" = "$sap_open_concur_com_utc_offset$"
    }
}

object CheckCommand "linuxfabrik/scheduled-task-windows" {
    command = [ LinuxfabrikPluginDir + "\\scheduled-task.exe" ]
    timeout = 10s
    arguments += {
        "--severity" = "$scheduled_task_severity$"
        "--status" = {
            repeat_key = true
            value = "$scheduled_task_status$"
        }
        "--task" = "$scheduled_task_task$"
    }
}

object CheckCommand "linuxfabrik/service-windows" {
    command = [ LinuxfabrikPluginDir + "\\service.exe" ]
    timeout = 10s
    arguments += {
        "--always-ok" = {
            set_if = "$service_always_ok$"
            description = "Always returns OK."
        }
        "--critical" = {
            value = "$service_critical$"
            description = "Set the CRIT threshold. Accepts ranges. Default: None"
        }
        "--service" = {
            value = "$service_service$"
            description = "Name of the service. Supports Python Regular Expressions (regex)."
        }
        "--starttype" = {
            value = "$service_starttype$"
            description = "Expected service start type (automatic,disabled,manual). Default: automatic"
        }
        "--status" = {
            repeat_key = true
            value = "$service_status$"
            description = "At least one expected service (continue_pending,pause_pending,paused,running,start_pending,stop_pending,stopped) status (repeating). Default: running"
        }
        "--warning" = {
            value = "$service_warning$"
            description = "Set the WARN threshold. Accepts ranges. Default: 1:"
        }
    }
}

object CheckCommand "linuxfabrik/starface-account-stats-windows" {
    command = [ LinuxfabrikPluginDir + "\\starface-account-stats.exe" ]
    timeout = 10s
    arguments += {
        "--cache-expire" = "$starface_account_stats_cache_expire$"
        "--hostname" = "$starface_account_stats_hostname$"
        "--ipv6" = {
            set_if = "$starface_account_stats_ipv6$"
        }
        "--port" = "$starface_account_stats_port$"
        "--timeout" = "$starface_account_stats_timeout$"
    }
}

object CheckCommand "linuxfabrik/starface-backup-status-windows" {
    command = [ LinuxfabrikPluginDir + "\\starface-backup-status.exe" ]
    timeout = 10s
    arguments += {
        "--always-ok" = {
            set_if = "$starface_backup_status_always_ok$"
            description = "Always returns OK."
        }
        "--cache-expire" = "$starface_backup_status_cache_expire$"
        "--critical" = "$starface_backup_status_critical$"
        "--hostname" = "$starface_backup_status_hostname$"
        "--ipv6" = {
            set_if = "$starface_backup_status_ipv6$"
        }
        "--port" = "$starface_backup_status_port$"
        "--timeout" = "$starface_backup_status_timeout$"
        "--warning" = "$starface_backup_status_warning$"
    }
}

object CheckCommand "linuxfabrik/starface-channel-status-windows" {
    command = [ LinuxfabrikPluginDir + "\\starface-channel-status.exe" ]
    timeout = 10s
    arguments += {
        "--always-ok" = {
            set_if = "$starface_channel_status_always_ok$"
            description = "Always returns OK."
        }
        "--cache-expire" = "$starface_channel_status_cache_expire$"
        "--critical" = "$starface_channel_status_critical$"
        "--hostname" = "$starface_channel_status_hostname$"
        "--ipv6" = {
            set_if = "$starface_channel_status_ipv6$"
        }
        "--port" = "$starface_channel_status_port$"
        "--timeout" = "$starface_channel_status_timeout$"
        "--warning" = "$starface_channel_status_warning$"
    }
}

object CheckCommand "linuxfabrik/starface-database-stats-windows" {
    command = [ LinuxfabrikPluginDir + "\\starface-database-stats.exe" ]
    timeout = 10s
    arguments += {
        "--cache-expire" = "$starface_database_stats_cache_expire$"
        "--hostname" = "$starface_database_stats_hostname$"
        "--ipv6" = {
            set_if = "$starface_database_stats_ipv6$"
        }
        "--port" = "$starface_database_stats_port$"
        "--timeout" = "$starface_database_stats_timeout$"
    }
}

object CheckCommand "linuxfabrik/starface-java-memory-usage-windows" {
    command = [ LinuxfabrikPluginDir + "\\starface-java-memory-usage.exe" ]
    timeout = 10s
    arguments += {
        "--always-ok" = {
            set_if = "$starface_java_memory_usage_always_ok$"
            description = "Always returns OK."
        }
        "--cache-expire" = "$starface_java_memory_usage_cache_expire$"
        "--critical" = "$starface_java_memory_usage_critical$"
        "--hostname" = "$starface_java_memory_usage_hostname$"
        "--ipv6" = {
            set_if = "$starface_java_memory_usage_ipv6$"
        }
        "--port" = "$starface_java_memory_usage_port$"
        "--timeout" = "$starface_java_memory_usage_timeout$"
        "--warning" = "$starface_java_memory_usage_warning$"
    }
}

object CheckCommand "linuxfabrik/starface-peer-stats-windows" {
    command = [ LinuxfabrikPluginDir + "\\starface-peer-stats.exe" ]
    timeout = 10s
    arguments += {
        "--cache-expire" = "$starface_peer_stats_cache_expire$"
        "--hostname" = "$starface_peer_stats_hostname$"
        "--ipv6" = {
            set_if = "$starface_peer_stats_ipv6$"
        }
        "--port" = "$starface_peer_stats_port$"
        "--timeout" = "$starface_peer_stats_timeout$"
    }
}

object CheckCommand "linuxfabrik/starface-status-windows" {
    command = [ LinuxfabrikPluginDir + "\\starface-status.exe" ]
    timeout = 10s
    arguments += {
        "--always-ok" = {
            set_if = "$starface_status_always_ok$"
            description = "Always returns OK."
        }
        "--cache-expire" = "$starface_status_cache_expire$"
        "--critical" = "$starface_status_critical$"
        "--hostname" = "$starface_status_hostname$"
        "--ipv6" = {
            set_if = "$starface_status_ipv6$"
        }
        "--port" = "$starface_status_port$"
        "--timeout" = "$starface_status_timeout$"
        "--warning" = "$starface_status_warning$"
    }
}

object CheckCommand "linuxfabrik/statuspal-windows" {
    command = [ LinuxfabrikPluginDir + "\\statuspal.exe" ]
    timeout = 10s
    arguments += {
        "--always-ok" = {
            set_if = "$statuspal_always_ok$"
            description = "Always returns OK."
        }
        "--url" = "$statuspal_url$"
    }
}

object CheckCommand "linuxfabrik/swap-usage-windows" {
    command = [ LinuxfabrikPluginDir + "\\swap-usage.exe" ]
    timeout = 10s
    arguments += {
        "--always-ok" = {
            set_if = "$swap_usage_always_ok$"
            description = "Always returns OK."
        }
        "--critical" = {
            value = "$swap_usage_critical$"
            description = "Set the critical threshold for swap usage (in percent). Default: 90"
        }
        "--warning" = {
            value = "$swap_usage_warning$"
            description = "Set the warning threshold for swap usage (in percent). Default: 70"
        }
    }
}

object CheckCommand "linuxfabrik/updates-windows" {
    command = [ LinuxfabrikPluginDir + "\\updates.exe" ]
    timeout = 10m
    arguments += {
        "--always-ok" = {
            set_if = "$updates_always_ok$"
            description = "Always returns OK."
        }
        "--critical" = "$updates_critical$"
        "--timeout" = "$updates_timeout$"
        "--warning" = "$updates_warning$"
    }
}

object CheckCommand "linuxfabrik/uptime-windows" {
    command = [ LinuxfabrikPluginDir + "\\uptime.exe" ]
    timeout = 10s
    arguments += {
        "--always-ok" = {
            set_if = "$uptime_always_ok$"
            description = "Always returns OK."
        }
        "--critical" = "$uptime_critical$"
        "--warning" = "$uptime_warning$"
    }
}

object CheckCommand "linuxfabrik/users-windows" {
    command = [ LinuxfabrikPluginDir + "\\users.exe" ]
    timeout = 10s
    arguments += {
        "--critical" = "$users_critical$"
        "--warning" = "$users_warning$"
    }
}

object CheckCommand "linuxfabrik/veeam-status-windows" {
    command = [ LinuxfabrikPluginDir + "\\veeam-status.exe" ]
    timeout = 10s
    arguments += {
        "--always-ok" = {
            set_if = "$veeam_status_always_ok$"
            description = "Always returns OK."
        }
        "--critical" = "$veeam_status_critical$"
        "--failed-job-runs" = "$veeam_status_failed_job_runs$"
        "--failed-vm-lastest-states" = "$veeam_status_failed_vm_lastest_states$"
        "--max-backup-job-duration" = "$veeam_status_max_backup_job_duration$"
        "--max-replica-job-duration" = "$veeam_status_max_replica_job_duration$"
        "--password" = "$veeam_status_password$"
        "--timeout" = "$veeam_status_timeout$"
        "--url" = "$veeam_status_url$"
        "--username" = "$veeam_status_username$"
        "--warning" = "$veeam_status_warning$"
        "--warning-vm-lastest-states" = "$veeam_status_warning_vm_lastest_states$"
        "--warnings-job-runs" = "$veeam_status_warnings_job_runs$"
    }
}

object CheckCommand "linuxfabrik/wildfly-deployment-status-windows" {
    command = [ LinuxfabrikPluginDir + "\\wildfly-deployment-status.exe" ]
    timeout = 10s
    arguments += {
        "--always-ok" = {
            set_if = "$wildfly_deployment_status_always_ok$"
            description = "Always returns OK."
        }
        "--deployment" = {
            repeat_key = true
            value = "$wildfly_deployment_status_deployment$"
        }
        "--instance" = "$wildfly_deployment_status_instance$"
        "--mode" = "$wildfly_deployment_status_mode$"
        "--node" = "$wildfly_deployment_status_node$"
        "--password" = "$wildfly_deployment_status_password$"
        "--timeout" = "$wildfly_deployment_status_timeout$"
        "--url" = "$wildfly_deployment_status_url$"
        "--username" = "$wildfly_deployment_status_username$"
    }
}

object CheckCommand "linuxfabrik/wildfly-gc-status-windows" {
    command = [ LinuxfabrikPluginDir + "\\wildfly-gc-status.exe" ]
    timeout = 10s
    arguments += {
        "--instance" = "$wildfly_gc_status_instance$"
        "--mode" = "$wildfly_gc_status_mode$"
        "--node" = "$wildfly_gc_status_node$"
        "--password" = "$wildfly_gc_status_password$"
        "--timeout" = "$wildfly_gc_status_timeout$"
        "--url" = "$wildfly_gc_status_url$"
        "--username" = "$wildfly_gc_status_username$"
    }
}

object CheckCommand "linuxfabrik/wildfly-memory-pool-usage-windows" {
    command = [ LinuxfabrikPluginDir + "\\wildfly-memory-pool-usage.exe" ]
    timeout = 10s
    arguments += {
        "--always-ok" = {
            set_if = "$wildfly_memory_pool_usage_always_ok$"
            description = "Always returns OK."
        }
        "--instance" = "$wildfly_memory_pool_usage_instance$"
        "--mode" = "$wildfly_memory_pool_usage_mode$"
        "--node" = "$wildfly_memory_pool_usage_node$"
        "--password" = "$wildfly_memory_pool_usage_password$"
        "--timeout" = "$wildfly_memory_pool_usage_timeout$"
        "--url" = "$wildfly_memory_pool_usage_url$"
        "--username" = "$wildfly_memory_pool_usage_username$"
    }
}

object CheckCommand "linuxfabrik/wildfly-memory-usage-windows" {
    command = [ LinuxfabrikPluginDir + "\\wildfly-memory-usage.exe" ]
    timeout = 10s
    arguments += {
        "--always-ok" = {
            set_if = "$wildfly_memory_usage_always_ok$"
            description = "Always returns OK."
        }
        "--critical" = "$wildfly_memory_usage_critical$"
        "--instance" = "$wildfly_memory_usage_instance$"
        "--mode" = "$wildfly_memory_usage_mode$"
        "--node" = "$wildfly_memory_usage_node$"
        "--password" = "$wildfly_memory_usage_password$"
        "--timeout" = "$wildfly_memory_usage_timeout$"
        "--url" = "$wildfly_memory_usage_url$"
        "--username" = "$wildfly_memory_usage_username$"
        "--warning" = "$wildfly_memory_usage_warning$"
    }
}

object CheckCommand "linuxfabrik/wildfly-non-xa-datasource-stats-windows" {
    command = [ LinuxfabrikPluginDir + "\\wildfly-non-xa-datasource-stats.exe" ]
    timeout = 10s
    arguments += {
        "--always-ok" = {
            set_if = "$wildfly_non_xa_datasource_stats_always_ok$"
            description = "Always returns OK."
        }
        "--critical" = "$wildfly_non_xa_datasource_stats_critical$"
        "--datasource" = {
            repeat_key = true
            value = "$wildfly_non_xa_datasource_stats_datasource$"
        }
        "--instance" = "$wildfly_non_xa_datasource_stats_instance$"
        "--mode" = "$wildfly_non_xa_datasource_stats_mode$"
        "--node" = "$wildfly_non_xa_datasource_stats_node$"
        "--password" = "$wildfly_non_xa_datasource_stats_password$"
        "--timeout" = "$wildfly_non_xa_datasource_stats_timeout$"
        "--url" = "$wildfly_non_xa_datasource_stats_url$"
        "--username" = "$wildfly_non_xa_datasource_stats_username$"
        "--warning" = "$wildfly_non_xa_datasource_stats_warning$"
    }
}

object CheckCommand "linuxfabrik/wildfly-server-status-windows" {
    command = [ LinuxfabrikPluginDir + "\\wildfly-server-status.exe" ]
    timeout = 10s
    arguments += {
        "--always-ok" = {
            set_if = "$wildfly_server_status_always_ok$"
            description = "Always returns OK."
        }
        "--instance" = "$wildfly_server_status_instance$"
        "--mode" = "$wildfly_server_status_mode$"
        "--node" = "$wildfly_server_status_node$"
        "--password" = "$wildfly_server_status_password$"
        "--timeout" = "$wildfly_server_status_timeout$"
        "--url" = "$wildfly_server_status_url$"
        "--username" = "$wildfly_server_status_username$"
    }
}

object CheckCommand "linuxfabrik/wildfly-thread-usage-windows" {
    command = [ LinuxfabrikPluginDir + "\\wildfly-thread-usage.exe" ]
    timeout = 10s
    arguments += {
        "--always-ok" = {
            set_if = "$wildfly_thread_usage_always_ok$"
            description = "Always returns OK."
        }
        "--critical" = "$wildfly_thread_usage_critical$"
        "--instance" = "$wildfly_thread_usage_instance$"
        "--mode" = "$wildfly_thread_usage_mode$"
        "--node" = "$wildfly_thread_usage_node$"
        "--password" = "$wildfly_thread_usage_password$"
        "--timeout" = "$wildfly_thread_usage_timeout$"
        "--url" = "$wildfly_thread_usage_url$"
        "--username" = "$wildfly_thread_usage_username$"
        "--warning" = "$wildfly_thread_usage_warning$"
    }
}

object CheckCommand "linuxfabrik/wildfly-uptime-windows" {
    command = [ LinuxfabrikPluginDir + "\\wildfly-uptime.exe" ]
    timeout = 10s
    arguments += {
        "--always-ok" = {
            set_if = "$wildfly_uptime_always_ok$"
            description = "Always returns OK."
        }
        "--critical" = "$wildfly_uptime_critical$"
        "--instance" = "$wildfly_uptime_instance$"
        "--mode" = "$wildfly_uptime_mode$"
        "--node" = "$wildfly_uptime_node$"
        "--password" = "$wildfly_uptime_password$"
        "--timeout" = "$wildfly_uptime_timeout$"
        "--url" = "$wildfly_uptime_url$"
        "--username" = "$wildfly_uptime_username$"
        "--warning" = "$wildfly_uptime_warning$"
    }
}

object CheckCommand "linuxfabrik/wildfly-xa-datasource-stats-windows" {
    command = [ LinuxfabrikPluginDir + "\\wildfly-xa-datasource-stats.exe" ]
    timeout = 10s
    arguments += {
        "--always-ok" = {
            set_if = "$wildfly_xa_datasource_stats_always_ok$"
            description = "Always returns OK."
        }
        "--critical" = "$wildfly_xa_datasource_stats_critical$"
        "--datasource" = {
            repeat_key = true
            value = "$wildfly_xa_datasource_stats_datasource$"
        }
        "--instance" = "$wildfly_xa_datasource_stats_instance$"
        "--mode" = "$wildfly_xa_datasource_stats_mode$"
        "--node" = "$wildfly_xa_datasource_stats_node$"
        "--password" = "$wildfly_xa_datasource_stats_password$"
        "--timeout" = "$wildfly_xa_datasource_stats_timeout$"
        "--url" = "$wildfly_xa_datasource_stats_url$"
        "--username" = "$wildfly_xa_datasource_stats_username$"
        "--warning" = "$wildfly_xa_datasource_stats_warning$"
    }
}

object CheckCommand "linuxfabrik/wordpress-version-windows" {
    command = [ LinuxfabrikPluginDir + "\\wordpress-version.exe" ]
    timeout = 10s
    arguments += {
        "--always-ok" = {
            set_if = "$wordpress_version_always_ok$"
            description = "Always returns OK."
        }
        "--check-major" = {
            set_if = "$wordpress_version_check_major$"
        }
        "--check-minor" = {
            set_if = "$wordpress_version_check_minor$"
        }
        "--check-patch" = {
            set_if = "$wordpress_version_check_patch$"
        }
        "--offset-eol" = "$wordpress_version_offset_eol$"
        "--path" = "$wordpress_version_path$"
    }
}

object CheckCommand "linuxfabrik/xml-windows" {
    command = [ LinuxfabrikPluginDir + "\\xml.exe" ]
    timeout = 10s
    arguments += {
        "--always-ok" = {
            set_if = "$xml_always_ok$"
            description = "Always returns OK."
        }
        "--expect" = "$xml_expect$"
        "--namespace" = {
            repeat_key = true
            value = "$xml_namespace$"
        }
        "--no-proxy" = {
            set_if = "$xml_no_proxy$"
        }
        "--password" = "$xml_password$"
        "--timeout" = "$xml_timeout$"
        "--url" = "$xml_url$"
        "--username" = "$xml_username$"
        "--xpath" = "$xml_xpath$"
    }
}
